{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"EditorStep\",\n  props: {\n    initialContent: {\n      type: String,\n      default: \"\"\n    },\n    suggestedKeywords: {\n      type: Array,\n      default: () => []\n    },\n    readabilityScore: {\n      type: Number,\n      default: 0\n    },\n    contentLength: {\n      type: Number,\n      default: 0\n    },\n    contentId: {\n      type: String,\n      default: \"\"\n    }\n  },\n  data() {\n    return {\n      content: this.initialContent || \"\"\n    };\n  },\n  computed: {\n    keywordsList() {\n      return this.suggestedKeywords || [];\n    },\n    wordCount() {\n      if (!this.content) return 0;\n      return this.content.trim().split(/\\s+/).length;\n    }\n  },\n  methods: {\n    updateContent() {\n      if (this.content !== null && this.content !== undefined) {\n        this.$emit(\"update:content\", this.content);\n      }\n    },\n    goBack() {\n      if (this.contentId) {\n        this.$emit(\"go-to-dashboard\");\n      } else {\n        this.$emit(\"prev\");\n      }\n    },\n    async saveContent() {\n      try {\n        if (!this.contentId) {\n          console.error(\"Cannot save: No content ID provided\");\n          return;\n        }\n        const response = await axios.put(`/api/content/contents/${this.contentId}`, {\n          generatedContent: this.content\n        });\n        if (response.data.success) {\n          alert(\"Content saved successfully!\");\n        } else {\n          alert(\"Failed to save content: \" + response.data.error);\n        }\n      } catch (error) {\n        console.error(\"Error saving content:\", error);\n        alert(\"Error saving content: \" + error.message);\n      }\n    }\n  },\n  watch: {\n    initialContent(newValue) {\n      this.content = newValue || \"\";\n    }\n  },\n  mounted() {\n    this.content = this.initialContent || \"\";\n    if (this.content) {\n      this.updateContent();\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","initialContent","type","String","default","suggestedKeywords","Array","readabilityScore","Number","contentLength","contentId","data","content","computed","keywordsList","wordCount","trim","split","length","methods","updateContent","undefined","$emit","goBack","saveContent","console","error","response","put","generatedContent","success","alert","message","watch","newValue","mounted"],"sources":["/Users/nhannguyen/Desktop/Duan/esmart-solutions-agency/src/components/creator-ai/EditorStep.vue"],"sourcesContent":["<template>\n  <div class=\"step-content\">\n    <h2>Content Editor</h2>\n    <div class=\"editor-container\">\n      <div class=\"main-content\">\n        <textarea\n          v-model=\"content\"\n          placeholder=\"Your AI-generated content will appear here...\"\n          @input=\"updateContent\"\n        ></textarea>\n      </div>\n      <div class=\"sidebar\">\n        <div class=\"sidebar-section\">\n          <h3>SEO Keywords</h3>\n          <ul>\n            <li v-for=\"(keyword, index) in keywordsList\" :key=\"index\">\n              {{ keyword }}\n            </li>\n          </ul>\n        </div>\n        <div class=\"sidebar-section\">\n          <h3>Readability Score</h3>\n          <div class=\"score\">{{ readabilityScore }}/100</div>\n        </div>\n        <div class=\"sidebar-section\">\n          <h3>Content Length</h3>\n          <div class=\"length\">{{ wordCount }} words</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"button-group\">\n      <button class=\"secondary-button\" @click=\"goBack\">Back</button>\n      <button class=\"primary-button-save\" @click=\"saveContent\" v-if=\"contentId\">\n        Save Changes\n      </button>\n      <button class=\"primary-button\" @click=\"$emit('next')\">\n        Generate Image\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"EditorStep\",\n  props: {\n    initialContent: {\n      type: String,\n      default: \"\",\n    },\n    suggestedKeywords: {\n      type: Array,\n      default: () => [],\n    },\n    readabilityScore: {\n      type: Number,\n      default: 0,\n    },\n    contentLength: {\n      type: Number,\n      default: 0,\n    },\n    contentId: {\n      type: String,\n      default: \"\",\n    },\n  },\n  data() {\n    return {\n      content: this.initialContent || \"\",\n    };\n  },\n  computed: {\n    keywordsList() {\n      return this.suggestedKeywords || [];\n    },\n    wordCount() {\n      if (!this.content) return 0;\n      return this.content.trim().split(/\\s+/).length;\n    },\n  },\n  methods: {\n    updateContent() {\n      if (this.content !== null && this.content !== undefined) {\n        this.$emit(\"update:content\", this.content);\n      }\n    },\n    goBack() {\n      if (this.contentId) {\n        this.$emit(\"go-to-dashboard\");\n      } else {\n        this.$emit(\"prev\");\n      }\n    },\n    async saveContent() {\n      try {\n        if (!this.contentId) {\n          console.error(\"Cannot save: No content ID provided\");\n          return;\n        }\n\n        const response = await axios.put(\n          `/api/content/contents/${this.contentId}`,\n          {\n            generatedContent: this.content,\n          }\n        );\n\n        if (response.data.success) {\n          alert(\"Content saved successfully!\");\n        } else {\n          alert(\"Failed to save content: \" + response.data.error);\n        }\n      } catch (error) {\n        console.error(\"Error saving content:\", error);\n        alert(\"Error saving content: \" + error.message);\n      }\n    },\n  },\n  watch: {\n    initialContent(newValue) {\n      this.content = newValue || \"\";\n    },\n  },\n  mounted() {\n    this.content = this.initialContent || \"\";\n\n    if (this.content) {\n      this.updateContent();\n    }\n  },\n};\n</script>\n\n<style scoped>\n.step-content {\n  background: white;\n  border-radius: 12px;\n  padding: 2rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\nh2 {\n  color: #1c1c4c;\n  margin-bottom: 2rem;\n  text-align: center;\n}\n\n.editor-container {\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 2rem;\n}\n\n.main-content textarea {\n  width: 100%;\n  height: 400px;\n  padding: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 6px;\n  resize: vertical;\n  font-family: \"Arial\", sans-serif;\n  line-height: 1.6;\n}\n\n.sidebar {\n  background: #f8f9fa;\n  border-radius: 8px;\n  padding: 1.5rem;\n}\n\n.sidebar-section {\n  margin-bottom: 1.5rem;\n}\n\n.sidebar-section h3 {\n  color: #1c1c4c;\n  margin-bottom: 0.5rem;\n}\n\n.sidebar-section ul {\n  list-style-type: none;\n  padding-left: 0;\n}\n\n.sidebar-section li {\n  padding: 0.3rem 0.5rem;\n  background: #e9ecef;\n  margin-bottom: 0.5rem;\n  border-radius: 4px;\n  font-size: 0.9rem;\n}\n\n.score,\n.length {\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #1c1c4c;\n  text-align: center;\n  padding: 0.5rem;\n  background: #e9ecef;\n  border-radius: 4px;\n}\n\n.button-group {\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n  margin-top: 2rem;\n}\n\n.primary-button {\n  background: #1c1c4c;\n  color: white;\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background-color 0.3s ease;\n}\n\n.primary-button:hover {\n  background: #2a2a6c;\n}\n\n.primary-button-save {\n  background: #28a745;\n  color: white;\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background-color 0.3s ease;\n}\n\n.primary-button-save:hover {\n  background: #218838;\n}\n\n.secondary-button {\n  background: white;\n  color: #1c1c4c;\n  border: 1px solid #1c1c4c;\n  padding: 0.75rem 1.5rem;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: all 0.3s ease;\n}\n\n.secondary-button:hover {\n  background: #f8f9fa;\n}\n\n@media (max-width: 768px) {\n  .editor-container {\n    grid-template-columns: 1fr;\n  }\n\n  .button-group {\n    flex-direction: column;\n  }\n\n  .primary-button,\n  .secondary-button {\n    width: 100%;\n  }\n}\n</style>\n"],"mappings":"AA2CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,cAAc,EAAE;MACdC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDC,iBAAiB,EAAE;MACjBH,IAAI,EAAEI,KAAK;MACXF,OAAO,EAAEA,CAAA,KAAM;IACjB,CAAC;IACDG,gBAAgB,EAAE;MAChBL,IAAI,EAAEM,MAAM;MACZJ,OAAO,EAAE;IACX,CAAC;IACDK,aAAa,EAAE;MACbP,IAAI,EAAEM,MAAM;MACZJ,OAAO,EAAE;IACX,CAAC;IACDM,SAAS,EAAE;MACTR,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EACDO,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,IAAI,CAACX,cAAa,IAAK;IAClC,CAAC;EACH,CAAC;EACDY,QAAQ,EAAE;IACRC,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACT,iBAAgB,IAAK,EAAE;IACrC,CAAC;IACDU,SAASA,CAAA,EAAG;MACV,IAAI,CAAC,IAAI,CAACH,OAAO,EAAE,OAAO,CAAC;MAC3B,OAAO,IAAI,CAACA,OAAO,CAACI,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,KAAK,CAAC,CAACC,MAAM;IAChD;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd,IAAI,IAAI,CAACR,OAAM,KAAM,IAAG,IAAK,IAAI,CAACA,OAAM,KAAMS,SAAS,EAAE;QACvD,IAAI,CAACC,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAACV,OAAO,CAAC;MAC5C;IACF,CAAC;IACDW,MAAMA,CAAA,EAAG;MACP,IAAI,IAAI,CAACb,SAAS,EAAE;QAClB,IAAI,CAACY,KAAK,CAAC,iBAAiB,CAAC;MAC/B,OAAO;QACL,IAAI,CAACA,KAAK,CAAC,MAAM,CAAC;MACpB;IACF,CAAC;IACD,MAAME,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,IAAI,CAAC,IAAI,CAACd,SAAS,EAAE;UACnBe,OAAO,CAACC,KAAK,CAAC,qCAAqC,CAAC;UACpD;QACF;QAEA,MAAMC,QAAO,GAAI,MAAM7B,KAAK,CAAC8B,GAAG,CAC9B,yBAAyB,IAAI,CAAClB,SAAS,EAAE,EACzC;UACEmB,gBAAgB,EAAE,IAAI,CAACjB;QACzB,CACF,CAAC;QAED,IAAIe,QAAQ,CAAChB,IAAI,CAACmB,OAAO,EAAE;UACzBC,KAAK,CAAC,6BAA6B,CAAC;QACtC,OAAO;UACLA,KAAK,CAAC,0BAAyB,GAAIJ,QAAQ,CAAChB,IAAI,CAACe,KAAK,CAAC;QACzD;MACF,EAAE,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CK,KAAK,CAAC,wBAAuB,GAAIL,KAAK,CAACM,OAAO,CAAC;MACjD;IACF;EACF,CAAC;EACDC,KAAK,EAAE;IACLhC,cAAcA,CAACiC,QAAQ,EAAE;MACvB,IAAI,CAACtB,OAAM,GAAIsB,QAAO,IAAK,EAAE;IAC/B;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACvB,OAAM,GAAI,IAAI,CAACX,cAAa,IAAK,EAAE;IAExC,IAAI,IAAI,CAACW,OAAO,EAAE;MAChB,IAAI,CAACQ,aAAa,CAAC,CAAC;IACtB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}