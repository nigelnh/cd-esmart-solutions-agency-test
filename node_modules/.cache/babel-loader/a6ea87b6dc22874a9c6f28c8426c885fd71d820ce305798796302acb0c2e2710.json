{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"DashboardStep\",\n  data() {\n    return {\n      projects: [],\n      isLoading: true,\n      error: null,\n      apiUrl: process.env.VUE_APP_API_URL || \"http://localhost:3001/api\"\n    };\n  },\n  methods: {\n    async loadProjects() {\n      this.isLoading = true;\n      this.error = null;\n      try {\n        const response = await axios.get(`${this.apiUrl}/projects/list`);\n        if (response.data.success) {\n          this.projects = response.data.projects || [];\n        } else {\n          this.error = response.data.error || \"Failed to load projects\";\n          console.error(\"Error loading projects:\", this.error);\n        }\n      } catch (error) {\n        console.error(\"Error loading projects:\", error);\n        this.error = error.message || \"Failed to connect to server\";\n\n        // Fallback for dev/demo\n        if (error.message.includes(\"Network Error\") || error.message.includes(\"Connection refused\")) {\n          this.useFallbackProjects();\n        }\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    editProject(project) {\n      // Implement project editing logic\n      console.log(\"Editing project:\", project);\n      // This would typically load the project data and navigate to the editor\n    },\n    formatDate(dateString) {\n      if (!dateString) return \"Unknown date\";\n      try {\n        const date = new Date(dateString);\n        return new Intl.DateTimeFormat(\"en-US\", {\n          year: \"numeric\",\n          month: \"short\",\n          day: \"numeric\"\n        }).format(date);\n      } catch (error) {\n        console.error(\"Error formatting date:\", error);\n        return \"Invalid date\";\n      }\n    },\n    // Fallback data for dev/demo\n    useFallbackProjects() {\n      const demoTopics = [\"Digital Marketing Strategies\", \"AI in Business\", \"Web Design Trends\", \"Content Creation Tips\", \"SEO Optimization\"];\n      const demoTypes = [\"Blog Post\", \"Article\", \"Social Media Post\", \"Email Newsletter\"];\n      const demoStyles = [\"Realistic\", \"3D\", \"Minimalist\", \"Watercolor\", \"Flat Vector\"];\n\n      // Generate 5 demo projects\n      this.projects = Array.from({\n        length: 5\n      }, (_, i) => ({\n        id: `demo-${i + 1}`,\n        topic: demoTopics[i],\n        contentType: demoTypes[i % demoTypes.length],\n        selectedImageStyle: demoStyles[i % demoStyles.length],\n        image: `https://placehold.co/600x400/${i % 2 ? \"1c1c4c\" : \"2a2a6c\"}/white?text=${encodeURIComponent(demoTopics[i])}`,\n        createdAt: new Date(Date.now() - i * 24 * 60 * 60 * 1000).toISOString() // Different dates\n      }));\n      this.error = null;\n    }\n  },\n  mounted() {\n    this.loadProjects();\n  }\n};","map":{"version":3,"names":["axios","name","data","projects","isLoading","error","apiUrl","process","env","VUE_APP_API_URL","methods","loadProjects","response","get","success","console","message","includes","useFallbackProjects","editProject","project","log","formatDate","dateString","date","Date","Intl","DateTimeFormat","year","month","day","format","demoTopics","demoTypes","demoStyles","Array","from","length","_","i","id","topic","contentType","selectedImageStyle","image","encodeURIComponent","createdAt","now","toISOString","mounted"],"sources":["/Users/nhannguyen/Desktop/Duan/esmart-solutions-agency/src/components/creator-ai/DashboardStep.vue"],"sourcesContent":["<template>\n  <div class=\"step-content\">\n    <h2>Content Dashboard</h2>\n\n    <div class=\"projects-container\">\n      <div v-if=\"isLoading\" class=\"loading-container\">\n        <div class=\"loading-spinner\"></div>\n        <p>Loading your projects...</p>\n      </div>\n\n      <div v-else-if=\"error\" class=\"error-container\">\n        <p>{{ error }}</p>\n        <button class=\"retry-button\" @click=\"loadProjects\">Try Again</button>\n      </div>\n\n      <div v-else-if=\"projects.length === 0\" class=\"empty-state\">\n        <div class=\"empty-icon\">ðŸ“„</div>\n        <h3>No Content Projects Yet</h3>\n        <p>Create your first AI-powered content project now to get started.</p>\n      </div>\n\n      <div v-else class=\"projects-grid\">\n        <div\n          v-for=\"project in projects\"\n          :key=\"project.id\"\n          class=\"project-card\"\n          @click=\"editProject(project)\"\n        >\n          <div class=\"project-image\">\n            <img\n              v-if=\"project.image\"\n              :src=\"project.image\"\n              :alt=\"project.topic\"\n            />\n            <div v-else class=\"no-image\">\n              <span>No Image</span>\n            </div>\n          </div>\n          <div class=\"project-details\">\n            <h3>{{ project.topic }}</h3>\n            <div class=\"project-meta\">\n              <span>{{ project.contentType }}</span>\n              <span class=\"dot\">â€¢</span>\n              <span>{{ formatDate(project.createdAt) }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"actions\">\n      <button class=\"create-button\" @click=\"$emit('create-new')\">\n        <span class=\"icon\">+</span> Create New Content\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"DashboardStep\",\n  data() {\n    return {\n      projects: [],\n      isLoading: true,\n      error: null,\n      apiUrl: process.env.VUE_APP_API_URL || \"http://localhost:3001/api\",\n    };\n  },\n  methods: {\n    async loadProjects() {\n      this.isLoading = true;\n      this.error = null;\n\n      try {\n        const response = await axios.get(`${this.apiUrl}/projects/list`);\n\n        if (response.data.success) {\n          this.projects = response.data.projects || [];\n        } else {\n          this.error = response.data.error || \"Failed to load projects\";\n          console.error(\"Error loading projects:\", this.error);\n        }\n      } catch (error) {\n        console.error(\"Error loading projects:\", error);\n        this.error = error.message || \"Failed to connect to server\";\n\n        // Fallback for dev/demo\n        if (\n          error.message.includes(\"Network Error\") ||\n          error.message.includes(\"Connection refused\")\n        ) {\n          this.useFallbackProjects();\n        }\n      } finally {\n        this.isLoading = false;\n      }\n    },\n\n    editProject(project) {\n      // Implement project editing logic\n      console.log(\"Editing project:\", project);\n      // This would typically load the project data and navigate to the editor\n    },\n\n    formatDate(dateString) {\n      if (!dateString) return \"Unknown date\";\n\n      try {\n        const date = new Date(dateString);\n        return new Intl.DateTimeFormat(\"en-US\", {\n          year: \"numeric\",\n          month: \"short\",\n          day: \"numeric\",\n        }).format(date);\n      } catch (error) {\n        console.error(\"Error formatting date:\", error);\n        return \"Invalid date\";\n      }\n    },\n\n    // Fallback data for dev/demo\n    useFallbackProjects() {\n      const demoTopics = [\n        \"Digital Marketing Strategies\",\n        \"AI in Business\",\n        \"Web Design Trends\",\n        \"Content Creation Tips\",\n        \"SEO Optimization\",\n      ];\n\n      const demoTypes = [\n        \"Blog Post\",\n        \"Article\",\n        \"Social Media Post\",\n        \"Email Newsletter\",\n      ];\n      const demoStyles = [\n        \"Realistic\",\n        \"3D\",\n        \"Minimalist\",\n        \"Watercolor\",\n        \"Flat Vector\",\n      ];\n\n      // Generate 5 demo projects\n      this.projects = Array.from({ length: 5 }, (_, i) => ({\n        id: `demo-${i + 1}`,\n        topic: demoTopics[i],\n        contentType: demoTypes[i % demoTypes.length],\n        selectedImageStyle: demoStyles[i % demoStyles.length],\n        image: `https://placehold.co/600x400/${\n          i % 2 ? \"1c1c4c\" : \"2a2a6c\"\n        }/white?text=${encodeURIComponent(demoTopics[i])}`,\n        createdAt: new Date(Date.now() - i * 24 * 60 * 60 * 1000).toISOString(), // Different dates\n      }));\n\n      this.error = null;\n    },\n  },\n  mounted() {\n    this.loadProjects();\n  },\n};\n</script>\n\n<style scoped>\n.step-content {\n  background: white;\n  border-radius: 12px;\n  padding: 2rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\nh2 {\n  color: #1c1c4c;\n  margin-bottom: 2rem;\n  text-align: center;\n}\n\n.projects-container {\n  min-height: 300px;\n  margin-bottom: 2rem;\n}\n\n.loading-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 300px;\n}\n\n.loading-spinner {\n  width: 40px;\n  height: 40px;\n  border: 3px solid rgba(28, 28, 76, 0.3);\n  border-radius: 50%;\n  border-top-color: #1c1c4c;\n  animation: spin 1s linear infinite;\n  margin-bottom: 1rem;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.error-container {\n  text-align: center;\n  padding: 2rem;\n  background: #fff0f0;\n  border-radius: 8px;\n  color: #d32f2f;\n}\n\n.retry-button {\n  background: #1c1c4c;\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-top: 1rem;\n}\n\n.empty-state {\n  text-align: center;\n  padding: 3rem 1rem;\n  background: #f8f9fa;\n  border-radius: 8px;\n}\n\n.empty-icon {\n  font-size: 3rem;\n  margin-bottom: 1rem;\n  color: #6c757d;\n}\n\n.empty-state h3 {\n  color: #1c1c4c;\n  margin-bottom: 0.5rem;\n}\n\n.empty-state p {\n  color: #6c757d;\n  max-width: 400px;\n  margin: 0 auto;\n}\n\n.projects-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 1.5rem;\n}\n\n.project-card {\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n  cursor: pointer;\n  background: #fff;\n}\n\n.project-card:hover {\n  transform: translateY(-4px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n}\n\n.project-image {\n  height: 150px;\n  background: #f1f1f4;\n  position: relative;\n}\n\n.project-image img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.no-image {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  background: #e9ecef;\n  color: #6c757d;\n  font-style: italic;\n}\n\n.project-details {\n  padding: 1rem;\n}\n\n.project-details h3 {\n  color: #1c1c4c;\n  margin: 0 0 0.5rem 0;\n  font-size: 1.1rem;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.project-meta {\n  display: flex;\n  align-items: center;\n  color: #6c757d;\n  font-size: 0.85rem;\n}\n\n.dot {\n  margin: 0 0.5rem;\n}\n\n.actions {\n  display: flex;\n  justify-content: center;\n}\n\n.create-button {\n  background: #1c1c4c;\n  color: white;\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background-color 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.create-button:hover {\n  background: #2a2a6c;\n}\n\n.icon {\n  font-size: 1.2rem;\n  font-weight: bold;\n}\n\n@media (max-width: 768px) {\n  .projects-grid {\n    grid-template-columns: 1fr;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}