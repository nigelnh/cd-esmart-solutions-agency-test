{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"RequirementsStep\",\n  props: {\n    initialData: {\n      type: Object,\n      default: () => ({\n        topic: \"\",\n        keywords: \"\",\n        tone: \"professional\",\n        type: \"blog\"\n      })\n    }\n  },\n  data() {\n    return {\n      formData: {\n        ...this.initialData\n      },\n      isLoading: false\n    };\n  },\n  methods: {\n    async generateContent() {\n      try {\n        this.isLoading = true;\n\n        // Validate form data\n        if (!this.formData.topic || !this.formData.keywords) {\n          alert(\"Please fill in all required fields\");\n          return;\n        }\n\n        // Call the backend API\n        const response = await axios.post(\"http://localhost:3001/api/generate-content\", this.formData);\n        if (response.data.success) {\n          // Emit the generated content to parent component\n          this.$emit(\"update:data\", {\n            ...this.formData,\n            content: response.data.content\n          });\n          this.$emit(\"next\");\n        } else {\n          throw new Error(response.data.error);\n        }\n      } catch (error) {\n        console.error(\"Error generating content:\", error);\n        alert(\"Failed to generate content. Please try again.\");\n      } finally {\n        this.isLoading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","initialData","type","Object","default","topic","keywords","tone","data","formData","isLoading","methods","generateContent","alert","response","post","success","$emit","content","Error","error","console"],"sources":["/Users/nhannguyen/Desktop/Duan/esmart-solutions-agency/src/components/creator-ai/RequirementsStep.vue"],"sourcesContent":["<template>\n  <div class=\"step-content\">\n    <h2>AI Content Requirements</h2>\n    <div class=\"form-container\">\n      <div class=\"form-group\">\n        <label>Topic</label>\n        <input\n          v-model=\"formData.topic\"\n          type=\"text\"\n          placeholder=\"Enter your topic\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label>Keywords</label>\n        <input\n          v-model=\"formData.keywords\"\n          type=\"text\"\n          placeholder=\"Enter keywords (comma separated)\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label>Tone</label>\n        <select v-model=\"formData.tone\">\n          <option value=\"professional\">Professional</option>\n          <option value=\"casual\">Casual</option>\n          <option value=\"friendly\">Friendly</option>\n          <option value=\"formal\">Formal</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Content Type</label>\n        <select v-model=\"formData.type\">\n          <option value=\"blog\">Blog Post</option>\n          <option value=\"social\">Social Media Post</option>\n          <option value=\"landing\">Landing Page</option>\n          <option value=\"email\">Email Marketing</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"button-group\">\n      <button class=\"secondary-button\" @click=\"$emit('prev')\">Back</button>\n      <button\n        class=\"primary-button\"\n        @click=\"generateContent\"\n        :disabled=\"isLoading\"\n      >\n        {{ isLoading ? \"Generating...\" : \"Create Content\" }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"RequirementsStep\",\n  props: {\n    initialData: {\n      type: Object,\n      default: () => ({\n        topic: \"\",\n        keywords: \"\",\n        tone: \"professional\",\n        type: \"blog\",\n      }),\n    },\n  },\n  data() {\n    return {\n      formData: { ...this.initialData },\n      isLoading: false,\n    };\n  },\n  methods: {\n    async generateContent() {\n      try {\n        this.isLoading = true;\n\n        // Validate form data\n        if (!this.formData.topic || !this.formData.keywords) {\n          alert(\"Please fill in all required fields\");\n          return;\n        }\n\n        // Call the backend API\n        const response = await axios.post(\n          \"http://localhost:3001/api/generate-content\",\n          this.formData\n        );\n\n        if (response.data.success) {\n          // Emit the generated content to parent component\n          this.$emit(\"update:data\", {\n            ...this.formData,\n            content: response.data.content,\n          });\n          this.$emit(\"next\");\n        } else {\n          throw new Error(response.data.error);\n        }\n      } catch (error) {\n        console.error(\"Error generating content:\", error);\n        alert(\"Failed to generate content. Please try again.\");\n      } finally {\n        this.isLoading = false;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.step-content {\n  background: white;\n  border-radius: 12px;\n  padding: 2rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\nh2 {\n  color: #1c1c4c;\n  margin-bottom: 2rem;\n  text-align: center;\n}\n\n.form-container {\n  display: grid;\n  gap: 1.5rem;\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.form-group label {\n  font-weight: 500;\n  color: #1c1c4c;\n}\n\n.form-group input,\n.form-group select {\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 6px;\n  font-size: 1rem;\n}\n\n.button-group {\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n  margin-top: 2rem;\n}\n\n.primary-button {\n  background: #1c1c4c;\n  color: white;\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background-color 0.3s ease;\n}\n\n.primary-button:hover:not(:disabled) {\n  background: #2a2a6c;\n}\n\n.primary-button:disabled {\n  background: #cccccc;\n  cursor: not-allowed;\n}\n\n.secondary-button {\n  background: white;\n  color: #1c1c4c;\n  border: 1px solid #1c1c4c;\n  padding: 0.75rem 1.5rem;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: all 0.3s ease;\n}\n\n.secondary-button:hover {\n  background: #f8f9fa;\n}\n\n@media (max-width: 768px) {\n  .button-group {\n    flex-direction: column;\n  }\n\n  .primary-button,\n  .secondary-button {\n    width: 100%;\n  }\n}\n</style>\n"],"mappings":"AAqDA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,KAAK,EAAE;IACLC,WAAW,EAAE;MACXC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAEA,CAAA,MAAO;QACdC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,IAAI,EAAE,cAAc;QACpBL,IAAI,EAAE;MACR,CAAC;IACH;EACF,CAAC;EACDM,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QAAE,GAAG,IAAI,CAACR;MAAY,CAAC;MACjCS,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,IAAI,CAACF,SAAQ,GAAI,IAAI;;QAErB;QACA,IAAI,CAAC,IAAI,CAACD,QAAQ,CAACJ,KAAI,IAAK,CAAC,IAAI,CAACI,QAAQ,CAACH,QAAQ,EAAE;UACnDO,KAAK,CAAC,oCAAoC,CAAC;UAC3C;QACF;;QAEA;QACA,MAAMC,QAAO,GAAI,MAAMhB,KAAK,CAACiB,IAAI,CAC/B,4CAA4C,EAC5C,IAAI,CAACN,QACP,CAAC;QAED,IAAIK,QAAQ,CAACN,IAAI,CAACQ,OAAO,EAAE;UACzB;UACA,IAAI,CAACC,KAAK,CAAC,aAAa,EAAE;YACxB,GAAG,IAAI,CAACR,QAAQ;YAChBS,OAAO,EAAEJ,QAAQ,CAACN,IAAI,CAACU;UACzB,CAAC,CAAC;UACF,IAAI,CAACD,KAAK,CAAC,MAAM,CAAC;QACpB,OAAO;UACL,MAAM,IAAIE,KAAK,CAACL,QAAQ,CAACN,IAAI,CAACY,KAAK,CAAC;QACtC;MACF,EAAE,OAAOA,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDP,KAAK,CAAC,+CAA+C,CAAC;MACxD,UAAU;QACR,IAAI,CAACH,SAAQ,GAAI,KAAK;MACxB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}