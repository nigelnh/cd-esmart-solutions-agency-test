{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"EditorStep\",\n  props: {\n    initialContent: {\n      type: String,\n      required: true\n    },\n    suggestedKeywords: {\n      type: Array,\n      default: () => []\n    },\n    readabilityScore: {\n      type: Number,\n      default: 0\n    },\n    contentLength: {\n      type: Number,\n      default: 0\n    },\n    contentId: {\n      type: String,\n      default: \"\"\n    },\n    isAnalyzingSeo: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      content: this.initialContent,\n      seoData: null,\n      isAnalyzing: false,\n      isOptimizing: false,\n      isFetchingSeo: false,\n      optimizationCount: 0,\n      maxOptimizations: 3,\n      lastSavedContent: this.initialContent,\n      showNotification: function (type, title, message) {\n        if (this.$notify) {\n          this.$notify({\n            group: \"seo\",\n            type: type,\n            title: title,\n            text: message\n          });\n        } else {\n          console.log(`${type} notification: ${title} - ${message}`);\n          if (type === \"error\") {\n            alert(`${title}: ${message}`);\n          }\n        }\n      }\n    };\n  },\n  computed: {\n    keywordsList() {\n      return this.suggestedKeywords || [];\n    },\n    wordCount() {\n      if (!this.content) return 0;\n      return this.content.trim().split(/\\s+/).length;\n    }\n  },\n  methods: {\n    updateContent() {\n      if (this.content !== null && this.content !== undefined) {\n        console.log(\"[SEO_CLIENT] Updating content in parent component\");\n        this.$emit(\"update:content\", this.content);\n      }\n    },\n    goBack() {\n      if (this.contentId) {\n        this.$emit(\"go-to-dashboard\");\n      } else {\n        this.$emit(\"prev\");\n      }\n    },\n    async saveContent() {\n      if (!this.contentId) {\n        return;\n      }\n      try {\n        if (this.content === this.lastSavedContent) {\n          console.log(\"[SEO_CLIENT] Nội dung không thay đổi, không cần lưu\");\n          return;\n        }\n        console.log(\"[SEO_CLIENT] Đang lưu nội dung...\");\n\n        // Gọi API lưu nội dung\n        const response = await axios.put(`/api/content/contents/${this.contentId}`, {\n          generatedContent: this.content\n        });\n        if (response.data.success) {\n          console.log(\"[SEO_CLIENT] Lưu nội dung thành công\");\n          this.lastSavedContent = this.content;\n\n          // Hiển thị thông báo thành công\n          this.showNotification(\"success\", \"Save Content\", \"Content saved successfully\");\n\n          // Tự động phân tích và tối ưu SEO sau khi lưu\n          this.optimizationCount = 0; // Reset count khi có nội dung mới\n          await this.autoAnalyzeAndOptimize();\n        } else {\n          console.error(\"[SEO_CLIENT] Lỗi khi lưu nội dung:\", response.data.error);\n          this.showNotification(\"error\", \"Save Content\", \"Error saving content: \" + response.data.error);\n        }\n      } catch (error) {\n        console.error(\"[SEO_CLIENT] Lỗi khi lưu nội dung:\", error);\n        this.showNotification(\"error\", \"Save Content\", \"Error saving content: \" + error.message);\n      }\n    },\n    async autoAnalyzeAndOptimize() {\n      console.log(\"[SEO_CLIENT] Bắt đầu tự động phân tích và tối ưu hóa SEO\");\n\n      // Nếu đã đạt giới hạn tối ưu, không tiếp tục\n      if (this.optimizationCount >= this.maxOptimizations) {\n        console.log(`[SEO_CLIENT] Đã đạt giới hạn tối ưu (${this.maxOptimizations}), không tối ưu thêm`);\n        return;\n      }\n\n      // Không tiếp tục nếu đang phân tích hoặc tối ưu\n      if (this.isAnalyzing || this.isOptimizing) {\n        console.log(\"[SEO_CLIENT] Đang phân tích hoặc tối ưu, không tiếp tục\");\n        return;\n      }\n      await this.analyzeSEO();\n\n      // Thêm độ trễ nhỏ trước khi tối ưu để tránh gọi API liên tục\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Nếu điểm SEO dưới 80, tự động tối ưu hóa\n      if (this.seoData && (this.seoData.seoScore || this.seoData.score) < 80 && this.optimizationCount < this.maxOptimizations) {\n        console.log(\"[SEO_CLIENT] Điểm SEO dưới 80, tự động tối ưu hóa\");\n        await this.autoOptimizeSEO();\n      } else {\n        console.log(\"[SEO_CLIENT] Điểm SEO đạt yêu cầu hoặc đã đạt giới hạn tối ưu, không cần tối ưu hóa\");\n      }\n    },\n    async analyzeSEO() {\n      if (!this.contentId) {\n        return;\n      }\n      try {\n        this.isAnalyzing = true;\n        console.log(\"[SEO_CLIENT] Bắt đầu phân tích SEO với Gemini API\");\n        this.seoAnalysisStage = \"Đang gọi Gemini API để phân tích SEO...\";\n\n        // Gọi API phân tích SEO\n        const response = await axios.post(`/api/seo/analyze/${this.contentId}`);\n        if (response.data.success) {\n          this.seoData = response.data.data.analysis;\n          console.log(\"[SEO_CLIENT] Phân tích SEO hoàn tất:\", this.seoData);\n          this.seoAnalysisStage = \"Phân tích SEO hoàn tất\";\n        } else {\n          console.error(\"[SEO_CLIENT] Lỗi phân tích SEO:\", response.data.error);\n          this.seoAnalysisStage = \"Phân tích SEO thất bại\";\n        }\n      } catch (error) {\n        console.error(\"[SEO_CLIENT] Lỗi phân tích SEO:\", error);\n        this.seoAnalysisStage = \"Lỗi phân tích SEO\";\n      } finally {\n        this.isAnalyzing = false;\n      }\n    },\n    async optimizeSEO() {\n      if (!this.contentId) {\n        return;\n      }\n      try {\n        this.isOptimizing = true;\n        this.optimizationStage = \"Đang tối ưu hóa nội dung với DeepSeek và Gemini...\";\n        console.log(\"[SEO_CLIENT] Bắt đầu tối ưu hóa SEO thủ công\");\n        this.showNotification(\"info\", \"SEO Optimization\", \"Optimizing your content...\");\n\n        // Gọi API tối ưu hóa SEO\n        const response = await axios.post(`/api/seo/optimize/${this.contentId}`);\n        if (response.data.success) {\n          const result = response.data.data;\n          console.log(\"[SEO_CLIENT] Kết quả tối ưu hóa SEO:\", result);\n          if (result.optimized) {\n            // Lấy dữ liệu SEO trước khi cập nhật nội dung\n            this.seoData = await this.fetchSEOData();\n\n            // Cập nhật nội dung sau khi đã có dữ liệu SEO\n            console.log(\"[SEO_CLIENT] Cập nhật nội dung và điểm số sau khi tối ưu\");\n            this.content = result.content.generatedContent;\n            this.lastSavedContent = this.content; // Cập nhật nội dung đã lưu\n\n            // Gọi updateContent() sau khi đã cập nhật SEO data\n            this.updateContent();\n            this.optimizationStage = \"Tối ưu hóa SEO hoàn tất\";\n\n            // Hiển thị thông báo thành công\n            this.showNotification(\"success\", \"SEO Optimization\", `Content optimized! SEO Score: ${result.previousScore} → ${result.newScore}`);\n          } else {\n            // Hiển thị thông báo nếu không thể tối ưu thêm\n            this.optimizationStage = \"Không thể tối ưu thêm\";\n            this.showNotification(\"info\", \"SEO Optimization\", result.message);\n          }\n        } else {\n          console.error(\"[SEO_CLIENT] Lỗi tối ưu hóa SEO:\", response.data.error);\n          this.optimizationStage = \"Tối ưu hóa SEO thất bại\";\n        }\n      } catch (error) {\n        console.error(\"[SEO_CLIENT] Lỗi tối ưu hóa SEO:\", error);\n        this.optimizationStage = \"Lỗi tối ưu hóa SEO\";\n      } finally {\n        this.isOptimizing = false;\n      }\n    },\n    async autoOptimizeSEO() {\n      if (!this.contentId) {\n        return;\n      }\n      try {\n        this.isOptimizing = true;\n\n        // Gọi API tự động tối ưu hóa\n        const response = await axios.post(`/api/seo/auto-optimize/${this.contentId}`, {\n          maxOptimizations: 3,\n          targetScore: 80\n        });\n        if (response.data.success) {\n          const result = response.data.data;\n\n          // Lưu dữ liệu SEO trước khi cập nhật nội dung\n          this.seoData = {\n            seoScore: result.finalScore,\n            keywordDensity: result.finalReport.keywordDensity,\n            readabilityScore: result.finalReport.readabilityScore,\n            suggestedKeywords: result.finalReport.suggestedKeywords,\n            detailedAnalysis: result.finalReport.detailedAnalysis\n          };\n\n          // Sau đó cập nhật nội dung\n          this.content = result.finalReport.content;\n          this.lastSavedContent = this.content; // Cập nhật nội dung đã lưu\n\n          // Gọi update content sau khi đã cập nhật dữ liệu SEO\n          this.updateContent();\n\n          // Hiển thị thông báo thành công\n          this.showNotification(\"success\", \"SEO Optimization\", `Automatic optimization completed! SEO Score: ${result.initialScore} → ${result.finalScore}`);\n        } else {\n          console.error(\"Failed to auto optimize SEO:\", response.data.error);\n        }\n      } catch (error) {\n        console.error(\"Error auto optimizing SEO:\", error);\n      } finally {\n        this.isOptimizing = false;\n      }\n    },\n    async fetchSEOData() {\n      try {\n        const response = await axios.get(`/api/seo/report/${this.contentId}`);\n        if (response.data.success) {\n          return {\n            seoScore: response.data.data.seoScore,\n            keywordDensity: response.data.data.keywordDensity,\n            readabilityScore: response.data.data.readabilityScore,\n            suggestedKeywords: response.data.data.suggestedKeywords,\n            detailedAnalysis: response.data.data.detailedAnalysis\n          };\n        }\n        return null;\n      } catch (error) {\n        console.error(\"Error fetching SEO data:\", error);\n        return null;\n      }\n    },\n    getSEOScoreClass() {\n      if (!this.seoData) return \"poor\";\n      const score = this.seoData.seoScore || this.seoData.score || 0;\n      if (score >= 80) return \"excellent\";\n      if (score >= 60) return \"good\";\n      if (score >= 40) return \"average\";\n      return \"poor\";\n    },\n    formatCategoryName(key) {\n      return key.replace(/([A-Z])/g, \" $1\").replace(/^./, str => str.toUpperCase());\n    }\n  },\n  watch: {\n    initialContent(newValue) {\n      this.content = newValue || \"\";\n      if (newValue && newValue !== this.lastSavedContent) {\n        this.lastSavedContent = newValue;\n      }\n    },\n    contentId: {\n      immediate: true,\n      async handler(newValue) {\n        if (newValue) {\n          // Reset optimization count when a new content is loaded\n          this.optimizationCount = 0;\n\n          // Nếu có contentId, kiểm tra xem đã có dữ liệu SEO chưa\n          const seoData = await this.fetchSEOData();\n          if (seoData) {\n            this.seoData = seoData;\n\n            // Nếu SEO score dưới 90, tự động tối ưu\n            if ((seoData.seoScore || seoData.score) < 90) {\n              await this.autoOptimizeSEO();\n            }\n          } else {\n            // Nếu chưa có dữ liệu SEO, tự động phân tích và tối ưu\n            await this.autoAnalyzeAndOptimize();\n          }\n        }\n      }\n    }\n  },\n  mounted() {\n    this.content = this.initialContent || \"\";\n    this.lastSavedContent = this.initialContent || \"\";\n    if (this.content) {\n      this.updateContent();\n    }\n\n    // Nếu có contentId nhưng chưa có seoData, phân tích ngay khi component được tạo\n    if (this.contentId && !this.seoData) {\n      this.$nextTick(async () => {\n        await this.autoAnalyzeAndOptimize();\n      });\n    }\n\n    // Nếu đang trong trạng thái phân tích SEO, cập nhật UI\n    if (this.isAnalyzingSeo) {\n      this.isFetchingSeo = true;\n\n      // Thiết lập interval để kiểm tra dữ liệu SEO mỗi 3 giây\n      const checkSeoInterval = setInterval(async () => {\n        if (this.contentId) {\n          try {\n            const seoData = await this.fetchSEOData();\n            if (seoData) {\n              clearInterval(checkSeoInterval);\n              this.isFetchingSeo = false;\n            }\n          } catch (error) {\n            console.error(\"Error checking SEO data:\", error);\n          }\n        }\n      }, 3000);\n\n      // Xóa interval sau 30 giây để tránh lãng phí tài nguyên\n      setTimeout(() => {\n        clearInterval(checkSeoInterval);\n        this.isFetchingSeo = false;\n      }, 30000);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","initialContent","type","String","required","suggestedKeywords","Array","default","readabilityScore","Number","contentLength","contentId","isAnalyzingSeo","Boolean","data","content","seoData","isAnalyzing","isOptimizing","isFetchingSeo","optimizationCount","maxOptimizations","lastSavedContent","showNotification","title","message","$notify","group","text","console","log","alert","computed","keywordsList","wordCount","trim","split","length","methods","updateContent","undefined","$emit","goBack","saveContent","response","put","generatedContent","success","autoAnalyzeAndOptimize","error","analyzeSEO","Promise","resolve","setTimeout","seoScore","score","autoOptimizeSEO","seoAnalysisStage","post","analysis","optimizeSEO","optimizationStage","result","optimized","fetchSEOData","previousScore","newScore","targetScore","finalScore","keywordDensity","finalReport","detailedAnalysis","initialScore","get","getSEOScoreClass","formatCategoryName","key","replace","str","toUpperCase","watch","newValue","immediate","handler","mounted","$nextTick","checkSeoInterval","setInterval","clearInterval"],"sources":["/Users/nhannguyen/Desktop/Duan/esmart-solutions-agency/src/components/creator-ai/EditorStep.vue"],"sourcesContent":["<template>\n  <div class=\"step-content\">\n    <h2>Content Editor</h2>\n    <div class=\"editor-container\">\n      <div class=\"main-content\">\n        <textarea\n          v-model=\"content\"\n          placeholder=\"Your AI-generated content will appear here...\"\n          @input=\"updateContent\"\n          style=\"height: 600px; resize: none\"\n        ></textarea>\n\n        <div class=\"editor-actions\">\n          <!-- Đã xóa ô optimization-status và loading-indicator -->\n        </div>\n      </div>\n      <div class=\"sidebar\">\n        <div class=\"sidebar-section\">\n          <h3>SEO Score</h3>\n          <div\n            class=\"seo-score-box\"\n            :class=\"{ loading: isAnalyzing || isFetchingSeo }\"\n          >\n            <div v-if=\"isAnalyzing || isFetchingSeo\" class=\"loading-indicator\">\n              <div class=\"spinner\"></div>\n              <p>Analyzing content...</p>\n            </div>\n            <div\n              v-else-if=\"seoData\"\n              class=\"score-display\"\n              :class=\"getSEOScoreClass()\"\n            >\n              <div class=\"score-number\">\n                {{ seoData.score || 0 }}<span class=\"score-percent\">%</span>\n              </div>\n              <div class=\"score-bar\">\n                <div\n                  class=\"score-bar-fill\"\n                  :style=\"{ width: (seoData.score || 0) + '%' }\"\n                  :class=\"getSEOScoreClass()\"\n                ></div>\n              </div>\n            </div>\n            <div v-else class=\"no-data-message\">\n              <p>SEO analysis will run automatically when content is saved.</p>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"sidebar-section\">\n          <h3>SEO Keywords</h3>\n          <ul>\n            <li v-for=\"(keyword, index) in keywordsList\" :key=\"index\">\n              {{ keyword }}\n            </li>\n          </ul>\n          <div\n            v-if=\"\n              seoData &&\n              seoData.suggestedKeywords &&\n              seoData.suggestedKeywords.length > 0\n            \"\n          >\n            <h4>Suggested Keywords</h4>\n            <ul class=\"suggested-keywords\">\n              <li\n                v-for=\"(keyword, index) in seoData.suggestedKeywords\"\n                :key=\"`sug-${index}`\"\n              >\n                {{ keyword }}\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <div class=\"sidebar-section\">\n          <h3>Content Length</h3>\n          <div class=\"length\">{{ wordCount }} words</div>\n        </div>\n\n        <div\n          v-if=\"seoData && seoData.detailedAnalysis\"\n          class=\"sidebar-section seo-analysis\"\n        >\n          <h3>SEO Analysis</h3>\n          <div\n            v-for=\"(category, key) in seoData.detailedAnalysis\"\n            :key=\"key\"\n            class=\"analysis-category\"\n          >\n            <h4>{{ formatCategoryName(key) }} ({{ category.score }}/100)</h4>\n            <div class=\"improvement-list\" v-if=\"category.improvements\">\n              <p class=\"improvement-title\">Improvement Suggestions:</p>\n              <ul>\n                <li\n                  v-for=\"(improvement, i) in category.improvements.slice(0, 3)\"\n                  :key=\"i\"\n                >\n                  {{ improvement }}\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"button-group\">\n      <button class=\"secondary-button\" @click=\"goBack\">Back</button>\n      <button class=\"primary-button-save\" @click=\"saveContent\" v-if=\"contentId\">\n        Save Changes\n      </button>\n      <button class=\"primary-button\" @click=\"$emit('next')\">\n        Generate Image\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"EditorStep\",\n  props: {\n    initialContent: {\n      type: String,\n      required: true,\n    },\n    suggestedKeywords: {\n      type: Array,\n      default: () => [],\n    },\n    readabilityScore: {\n      type: Number,\n      default: 0,\n    },\n    contentLength: {\n      type: Number,\n      default: 0,\n    },\n    contentId: {\n      type: String,\n      default: \"\",\n    },\n    isAnalyzingSeo: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      content: this.initialContent,\n      seoData: null,\n      isAnalyzing: false,\n      isOptimizing: false,\n      isFetchingSeo: false,\n      optimizationCount: 0,\n      maxOptimizations: 3,\n      lastSavedContent: this.initialContent,\n      showNotification: function (type, title, message) {\n        if (this.$notify) {\n          this.$notify({\n            group: \"seo\",\n            type: type,\n            title: title,\n            text: message,\n          });\n        } else {\n          console.log(`${type} notification: ${title} - ${message}`);\n          if (type === \"error\") {\n            alert(`${title}: ${message}`);\n          }\n        }\n      },\n    };\n  },\n  computed: {\n    keywordsList() {\n      return this.suggestedKeywords || [];\n    },\n    wordCount() {\n      if (!this.content) return 0;\n      return this.content.trim().split(/\\s+/).length;\n    },\n  },\n  methods: {\n    updateContent() {\n      if (this.content !== null && this.content !== undefined) {\n        console.log(\"[SEO_CLIENT] Updating content in parent component\");\n        this.$emit(\"update:content\", this.content);\n      }\n    },\n    goBack() {\n      if (this.contentId) {\n        this.$emit(\"go-to-dashboard\");\n      } else {\n        this.$emit(\"prev\");\n      }\n    },\n    async saveContent() {\n      if (!this.contentId) {\n        return;\n      }\n\n      try {\n        if (this.content === this.lastSavedContent) {\n          console.log(\"[SEO_CLIENT] Nội dung không thay đổi, không cần lưu\");\n          return;\n        }\n\n        console.log(\"[SEO_CLIENT] Đang lưu nội dung...\");\n\n        // Gọi API lưu nội dung\n        const response = await axios.put(\n          `/api/content/contents/${this.contentId}`,\n          {\n            generatedContent: this.content,\n          }\n        );\n\n        if (response.data.success) {\n          console.log(\"[SEO_CLIENT] Lưu nội dung thành công\");\n          this.lastSavedContent = this.content;\n\n          // Hiển thị thông báo thành công\n          this.showNotification(\n            \"success\",\n            \"Save Content\",\n            \"Content saved successfully\"\n          );\n\n          // Tự động phân tích và tối ưu SEO sau khi lưu\n          this.optimizationCount = 0; // Reset count khi có nội dung mới\n          await this.autoAnalyzeAndOptimize();\n        } else {\n          console.error(\n            \"[SEO_CLIENT] Lỗi khi lưu nội dung:\",\n            response.data.error\n          );\n          this.showNotification(\n            \"error\",\n            \"Save Content\",\n            \"Error saving content: \" + response.data.error\n          );\n        }\n      } catch (error) {\n        console.error(\"[SEO_CLIENT] Lỗi khi lưu nội dung:\", error);\n        this.showNotification(\n          \"error\",\n          \"Save Content\",\n          \"Error saving content: \" + error.message\n        );\n      }\n    },\n\n    async autoAnalyzeAndOptimize() {\n      console.log(\"[SEO_CLIENT] Bắt đầu tự động phân tích và tối ưu hóa SEO\");\n\n      // Nếu đã đạt giới hạn tối ưu, không tiếp tục\n      if (this.optimizationCount >= this.maxOptimizations) {\n        console.log(\n          `[SEO_CLIENT] Đã đạt giới hạn tối ưu (${this.maxOptimizations}), không tối ưu thêm`\n        );\n        return;\n      }\n\n      // Không tiếp tục nếu đang phân tích hoặc tối ưu\n      if (this.isAnalyzing || this.isOptimizing) {\n        console.log(\"[SEO_CLIENT] Đang phân tích hoặc tối ưu, không tiếp tục\");\n        return;\n      }\n\n      await this.analyzeSEO();\n\n      // Thêm độ trễ nhỏ trước khi tối ưu để tránh gọi API liên tục\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n\n      // Nếu điểm SEO dưới 80, tự động tối ưu hóa\n      if (\n        this.seoData &&\n        (this.seoData.seoScore || this.seoData.score) < 80 &&\n        this.optimizationCount < this.maxOptimizations\n      ) {\n        console.log(\"[SEO_CLIENT] Điểm SEO dưới 80, tự động tối ưu hóa\");\n        await this.autoOptimizeSEO();\n      } else {\n        console.log(\n          \"[SEO_CLIENT] Điểm SEO đạt yêu cầu hoặc đã đạt giới hạn tối ưu, không cần tối ưu hóa\"\n        );\n      }\n    },\n\n    async analyzeSEO() {\n      if (!this.contentId) {\n        return;\n      }\n\n      try {\n        this.isAnalyzing = true;\n        console.log(\"[SEO_CLIENT] Bắt đầu phân tích SEO với Gemini API\");\n        this.seoAnalysisStage = \"Đang gọi Gemini API để phân tích SEO...\";\n\n        // Gọi API phân tích SEO\n        const response = await axios.post(`/api/seo/analyze/${this.contentId}`);\n\n        if (response.data.success) {\n          this.seoData = response.data.data.analysis;\n          console.log(\"[SEO_CLIENT] Phân tích SEO hoàn tất:\", this.seoData);\n          this.seoAnalysisStage = \"Phân tích SEO hoàn tất\";\n        } else {\n          console.error(\"[SEO_CLIENT] Lỗi phân tích SEO:\", response.data.error);\n          this.seoAnalysisStage = \"Phân tích SEO thất bại\";\n        }\n      } catch (error) {\n        console.error(\"[SEO_CLIENT] Lỗi phân tích SEO:\", error);\n        this.seoAnalysisStage = \"Lỗi phân tích SEO\";\n      } finally {\n        this.isAnalyzing = false;\n      }\n    },\n\n    async optimizeSEO() {\n      if (!this.contentId) {\n        return;\n      }\n\n      try {\n        this.isOptimizing = true;\n        this.optimizationStage =\n          \"Đang tối ưu hóa nội dung với DeepSeek và Gemini...\";\n        console.log(\"[SEO_CLIENT] Bắt đầu tối ưu hóa SEO thủ công\");\n\n        this.showNotification(\n          \"info\",\n          \"SEO Optimization\",\n          \"Optimizing your content...\"\n        );\n\n        // Gọi API tối ưu hóa SEO\n        const response = await axios.post(\n          `/api/seo/optimize/${this.contentId}`\n        );\n\n        if (response.data.success) {\n          const result = response.data.data;\n          console.log(\"[SEO_CLIENT] Kết quả tối ưu hóa SEO:\", result);\n\n          if (result.optimized) {\n            // Lấy dữ liệu SEO trước khi cập nhật nội dung\n            this.seoData = await this.fetchSEOData();\n\n            // Cập nhật nội dung sau khi đã có dữ liệu SEO\n            console.log(\n              \"[SEO_CLIENT] Cập nhật nội dung và điểm số sau khi tối ưu\"\n            );\n            this.content = result.content.generatedContent;\n            this.lastSavedContent = this.content; // Cập nhật nội dung đã lưu\n\n            // Gọi updateContent() sau khi đã cập nhật SEO data\n            this.updateContent();\n            this.optimizationStage = \"Tối ưu hóa SEO hoàn tất\";\n\n            // Hiển thị thông báo thành công\n            this.showNotification(\n              \"success\",\n              \"SEO Optimization\",\n              `Content optimized! SEO Score: ${result.previousScore} → ${result.newScore}`\n            );\n          } else {\n            // Hiển thị thông báo nếu không thể tối ưu thêm\n            this.optimizationStage = \"Không thể tối ưu thêm\";\n            this.showNotification(\"info\", \"SEO Optimization\", result.message);\n          }\n        } else {\n          console.error(\n            \"[SEO_CLIENT] Lỗi tối ưu hóa SEO:\",\n            response.data.error\n          );\n          this.optimizationStage = \"Tối ưu hóa SEO thất bại\";\n        }\n      } catch (error) {\n        console.error(\"[SEO_CLIENT] Lỗi tối ưu hóa SEO:\", error);\n        this.optimizationStage = \"Lỗi tối ưu hóa SEO\";\n      } finally {\n        this.isOptimizing = false;\n      }\n    },\n\n    async autoOptimizeSEO() {\n      if (!this.contentId) {\n        return;\n      }\n\n      try {\n        this.isOptimizing = true;\n\n        // Gọi API tự động tối ưu hóa\n        const response = await axios.post(\n          `/api/seo/auto-optimize/${this.contentId}`,\n          {\n            maxOptimizations: 3,\n            targetScore: 80,\n          }\n        );\n\n        if (response.data.success) {\n          const result = response.data.data;\n\n          // Lưu dữ liệu SEO trước khi cập nhật nội dung\n          this.seoData = {\n            seoScore: result.finalScore,\n            keywordDensity: result.finalReport.keywordDensity,\n            readabilityScore: result.finalReport.readabilityScore,\n            suggestedKeywords: result.finalReport.suggestedKeywords,\n            detailedAnalysis: result.finalReport.detailedAnalysis,\n          };\n\n          // Sau đó cập nhật nội dung\n          this.content = result.finalReport.content;\n          this.lastSavedContent = this.content; // Cập nhật nội dung đã lưu\n\n          // Gọi update content sau khi đã cập nhật dữ liệu SEO\n          this.updateContent();\n\n          // Hiển thị thông báo thành công\n          this.showNotification(\n            \"success\",\n            \"SEO Optimization\",\n            `Automatic optimization completed! SEO Score: ${result.initialScore} → ${result.finalScore}`\n          );\n        } else {\n          console.error(\"Failed to auto optimize SEO:\", response.data.error);\n        }\n      } catch (error) {\n        console.error(\"Error auto optimizing SEO:\", error);\n      } finally {\n        this.isOptimizing = false;\n      }\n    },\n\n    async fetchSEOData() {\n      try {\n        const response = await axios.get(`/api/seo/report/${this.contentId}`);\n\n        if (response.data.success) {\n          return {\n            seoScore: response.data.data.seoScore,\n            keywordDensity: response.data.data.keywordDensity,\n            readabilityScore: response.data.data.readabilityScore,\n            suggestedKeywords: response.data.data.suggestedKeywords,\n            detailedAnalysis: response.data.data.detailedAnalysis,\n          };\n        }\n        return null;\n      } catch (error) {\n        console.error(\"Error fetching SEO data:\", error);\n        return null;\n      }\n    },\n\n    getSEOScoreClass() {\n      if (!this.seoData) return \"poor\";\n\n      const score = this.seoData.seoScore || this.seoData.score || 0;\n      if (score >= 80) return \"excellent\";\n      if (score >= 60) return \"good\";\n      if (score >= 40) return \"average\";\n      return \"poor\";\n    },\n\n    formatCategoryName(key) {\n      return key\n        .replace(/([A-Z])/g, \" $1\")\n        .replace(/^./, (str) => str.toUpperCase());\n    },\n  },\n  watch: {\n    initialContent(newValue) {\n      this.content = newValue || \"\";\n      if (newValue && newValue !== this.lastSavedContent) {\n        this.lastSavedContent = newValue;\n      }\n    },\n    contentId: {\n      immediate: true,\n      async handler(newValue) {\n        if (newValue) {\n          // Reset optimization count when a new content is loaded\n          this.optimizationCount = 0;\n\n          // Nếu có contentId, kiểm tra xem đã có dữ liệu SEO chưa\n          const seoData = await this.fetchSEOData();\n          if (seoData) {\n            this.seoData = seoData;\n\n            // Nếu SEO score dưới 90, tự động tối ưu\n            if ((seoData.seoScore || seoData.score) < 90) {\n              await this.autoOptimizeSEO();\n            }\n          } else {\n            // Nếu chưa có dữ liệu SEO, tự động phân tích và tối ưu\n            await this.autoAnalyzeAndOptimize();\n          }\n        }\n      },\n    },\n  },\n  mounted() {\n    this.content = this.initialContent || \"\";\n    this.lastSavedContent = this.initialContent || \"\";\n\n    if (this.content) {\n      this.updateContent();\n    }\n\n    // Nếu có contentId nhưng chưa có seoData, phân tích ngay khi component được tạo\n    if (this.contentId && !this.seoData) {\n      this.$nextTick(async () => {\n        await this.autoAnalyzeAndOptimize();\n      });\n    }\n\n    // Nếu đang trong trạng thái phân tích SEO, cập nhật UI\n    if (this.isAnalyzingSeo) {\n      this.isFetchingSeo = true;\n\n      // Thiết lập interval để kiểm tra dữ liệu SEO mỗi 3 giây\n      const checkSeoInterval = setInterval(async () => {\n        if (this.contentId) {\n          try {\n            const seoData = await this.fetchSEOData();\n            if (seoData) {\n              clearInterval(checkSeoInterval);\n              this.isFetchingSeo = false;\n            }\n          } catch (error) {\n            console.error(\"Error checking SEO data:\", error);\n          }\n        }\n      }, 3000);\n\n      // Xóa interval sau 30 giây để tránh lãng phí tài nguyên\n      setTimeout(() => {\n        clearInterval(checkSeoInterval);\n        this.isFetchingSeo = false;\n      }, 30000);\n    }\n  },\n};\n</script>\n\n<style scoped>\n.step-content {\n  background: white;\n  border-radius: 12px;\n  padding: 2rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\nh2 {\n  color: #1c1c4c;\n  margin-bottom: 2rem;\n  text-align: center;\n}\n\n.editor-container {\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 2rem;\n}\n\n.main-content textarea {\n  width: 100%;\n  height: 400px;\n  padding: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 6px;\n  resize: vertical;\n  font-family: \"Arial\", sans-serif;\n  line-height: 1.6;\n}\n\n.editor-actions {\n  display: flex;\n  justify-content: flex-start;\n  gap: 10px;\n  margin-top: 10px;\n}\n\n.action-button {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  transition: background-color 0.3s;\n}\n\n.spinner {\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  border: 2px solid rgba(46, 125, 50, 0.3);\n  border-radius: 50%;\n  border-top-color: #2e7d32;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.sidebar {\n  background: #f8f9fa;\n  border-radius: 8px;\n  padding: 1.5rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  max-height: 600px;\n  overflow-y: auto;\n}\n\n.sidebar-section {\n  margin-bottom: 1.5rem;\n}\n\n.sidebar-section h3 {\n  color: #1c1c4c;\n  margin-bottom: 0.5rem;\n  border-bottom: 1px solid #eaeaea;\n  padding-bottom: 8px;\n}\n\n.sidebar-section h4 {\n  color: #1c1c4c;\n  font-size: 0.9rem;\n  margin-top: 0.8rem;\n  margin-bottom: 0.3rem;\n}\n\n.sidebar-section ul {\n  list-style-type: none;\n  padding-left: 0;\n}\n\n.sidebar-section li {\n  padding: 0.3rem 0.5rem;\n  background: #e9ecef;\n  margin-bottom: 0.5rem;\n  border-radius: 4px;\n  font-size: 0.9rem;\n}\n\n.suggested-keywords li {\n  background: #e3f2fd;\n  color: #0d47a1;\n}\n\n.seo-score-box {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n}\n\n.score-display {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n}\n\n.score-number {\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #1c1c4c;\n}\n\n.score-percent {\n  font-size: 0.8rem;\n  font-weight: normal;\n  color: #6c757d;\n}\n\n.score-bar {\n  width: 100%;\n  height: 20px;\n  background-color: #f0f0f0;\n  border-radius: 10px;\n  overflow: hidden;\n}\n\n.score-bar-fill {\n  height: 100%;\n  background-color: #4caf50;\n}\n\n.score-bar.excellent {\n  background-color: #4caf50;\n}\n\n.score-bar.good {\n  background-color: #8bc34a;\n}\n\n.score-bar.average {\n  background-color: #ffc107;\n}\n\n.score-bar.poor {\n  background-color: #f44336;\n}\n\n.loading-indicator {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n  color: #2e7d32;\n  font-size: 0.9rem;\n}\n\n.no-data-message {\n  text-align: center;\n  color: #6c757d;\n  font-size: 0.9rem;\n  padding: 10px;\n  background: #f0f0f0;\n  border-radius: 4px;\n}\n\n.analysis-category {\n  background: #f0f4f8;\n  border-radius: 4px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\n\n.improvement-title {\n  font-size: 0.85rem;\n  font-weight: bold;\n  margin: 5px 0;\n}\n\n.improvement-list ul {\n  margin-top: 5px;\n}\n\n.improvement-list li {\n  background: #e6f7ff;\n  color: #0d47a1;\n  font-size: 0.85rem;\n}\n\n.score,\n.length {\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #1c1c4c;\n  text-align: center;\n  padding: 0.5rem;\n  background: #e9ecef;\n  border-radius: 4px;\n}\n\n.button-group {\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n  margin-top: 2rem;\n}\n\n.primary-button {\n  background: #1c1c4c;\n  color: white;\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background-color 0.3s ease;\n}\n\n.primary-button:hover {\n  background: #2a2a6c;\n}\n\n.primary-button-save {\n  background: #28a745;\n  color: white;\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background-color 0.3s ease;\n}\n\n.primary-button-save:hover {\n  background: #218838;\n}\n\n.secondary-button {\n  background: white;\n  color: #1c1c4c;\n  border: 1px solid #1c1c4c;\n  padding: 0.75rem 1.5rem;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: all 0.3s ease;\n}\n\n.secondary-button:hover {\n  background: #f8f9fa;\n}\n\n.analysis-stage,\n.optimization-stage {\n  display: none;\n}\n\n@media (max-width: 768px) {\n  .editor-container {\n    grid-template-columns: 1fr;\n  }\n\n  .button-group {\n    flex-direction: column;\n  }\n\n  .primary-button,\n  .secondary-button {\n    width: 100%;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}