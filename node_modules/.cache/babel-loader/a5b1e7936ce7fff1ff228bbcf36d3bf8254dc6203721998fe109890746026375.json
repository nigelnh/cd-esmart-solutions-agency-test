{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2bc3d388\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" data-v-2bc3d388><path d=\\\"M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z\\\" data-v-2bc3d388></path><circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"1\\\" data-v-2bc3d388></circle><circle cx=\\\"16\\\" cy=\\\"12\\\" r=\\\"1\\\" data-v-2bc3d388></circle><circle cx=\\\"8\\\" cy=\\\"12\\\" r=\\\"1\\\" data-v-2bc3d388></circle></svg>\", 1);\nconst _hoisted_2 = [_hoisted_1];\nconst _hoisted_3 = {\n  key: 1,\n  class: \"chat-window\"\n};\nconst _hoisted_4 = {\n  class: \"chat-header\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"chat-header-info\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"Let's Chat!\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"chat-status\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"status-dot\"\n}), /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"status-text\"\n}, \"We'll reply as soon as we can\")])], -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  \"stroke-width\": \"2\",\n  \"stroke-linecap\": \"round\",\n  \"stroke-linejoin\": \"round\"\n}, [/*#__PURE__*/_createElementVNode(\"line\", {\n  x1: \"18\",\n  y1: \"6\",\n  x2: \"6\",\n  y2: \"18\"\n}), /*#__PURE__*/_createElementVNode(\"line\", {\n  x1: \"6\",\n  y1: \"6\",\n  x2: \"18\",\n  y2: \"18\"\n})], -1 /* HOISTED */));\nconst _hoisted_7 = [_hoisted_6];\nconst _hoisted_8 = {\n  class: \"chat-messages\",\n  ref: \"messagesContainer\"\n};\nconst _hoisted_9 = {\n  class: \"message-content\"\n};\nconst _hoisted_10 = {\n  class: \"message-time\"\n};\nconst _hoisted_11 = {\n  class: \"chat-input\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"chat-controls\\\" data-v-2bc3d388><button class=\\\"control-button emoji-button\\\" aria-label=\\\"Add emoji\\\" data-v-2bc3d388><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" data-v-2bc3d388><circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"10\\\" data-v-2bc3d388></circle><path d=\\\"M8 14s1.5 2 4 2 4-2 4-2\\\" data-v-2bc3d388></path><line x1=\\\"9\\\" y1=\\\"9\\\" x2=\\\"9.01\\\" y2=\\\"9\\\" data-v-2bc3d388></line><line x1=\\\"15\\\" y1=\\\"9\\\" x2=\\\"15.01\\\" y2=\\\"9\\\" data-v-2bc3d388></line></svg></button></div>\", 1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"chat-container\", {\n      'chat-open': $data.isOpen\n    }])\n  }, [_createCommentVNode(\" Chat button \"), !$data.isOpen ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"chat-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleChat && $options.toggleChat(...args)),\n    \"aria-label\": \"Open chat\"\n  }, [..._hoisted_2])) : _createCommentVNode(\"v-if\", true), $data.isOpen ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"button\", {\n    class: \"close-button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.toggleChat && $options.toggleChat(...args)),\n    \"aria-label\": \"Close chat\"\n  }, [..._hoisted_7])]), _createCommentVNode(\" Chat messages \"), _createElementVNode(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass(['message', message.sender === 'user' ? 'user-message' : 'agent-message'])\n    }, [_createElementVNode(\"div\", _hoisted_9, _toDisplayString(message.text), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_10, _toDisplayString(message.time), 1 /* TEXT */)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _createCommentVNode(\" Chat input \"), _createElementVNode(\"div\", _hoisted_11, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.newMessage = $event),\n    placeholder: \"Write your message...\",\n    onKeyup: _cache[3] || (_cache[3] = _withKeys((...args) => $options.sendMessage && $options.sendMessage(...args), [\"enter\"]))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.newMessage]]), _hoisted_12])])) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */);\n}","map":{"version":3,"names":["_createStaticVNode","_hoisted_1","key","class","_createElementVNode","xmlns","viewBox","fill","stroke","x1","y1","x2","y2","_hoisted_6","ref","_createElementBlock","_normalizeClass","$data","isOpen","_createCommentVNode","onClick","_cache","args","$options","toggleChat","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_7","_hoisted_8","_Fragment","_renderList","messages","message","index","sender","_hoisted_9","_toDisplayString","text","_hoisted_10","time","_hoisted_11","type","$event","newMessage","placeholder","onKeyup","_withKeys","sendMessage","_hoisted_12"],"sources":["/Users/nhannguyen/Desktop/Duan/esmart-solutions-agency/src/components/Chat.vue"],"sourcesContent":["<template>\n  <div class=\"chat-container\" :class=\"{ 'chat-open': isOpen }\">\n    <!-- Chat button -->\n    <button \n      v-if=\"!isOpen\" \n      class=\"chat-button\" \n      @click=\"toggleChat\"\n      aria-label=\"Open chat\"\n    >\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n        <path d=\"M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z\"></path>\n        <circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\n        <circle cx=\"16\" cy=\"12\" r=\"1\"></circle>\n        <circle cx=\"8\" cy=\"12\" r=\"1\"></circle>\n      </svg>\n    </button>\n\n    <div v-if=\"isOpen\" class=\"chat-window\">\n      <div class=\"chat-header\">\n        <div class=\"chat-header-info\">\n          <h2>Let's Chat!</h2>\n          <div class=\"chat-status\">\n            <span class=\"status-dot\"></span>\n            <span class=\"status-text\">We'll reply as soon as we can</span>\n          </div>\n        </div>\n        <button class=\"close-button\" @click=\"toggleChat\" aria-label=\"Close chat\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n          </svg>\n        </button>\n      </div>\n\n      <!-- Chat messages -->\n      <div class=\"chat-messages\" ref=\"messagesContainer\">\n        <div v-for=\"(message, index) in messages\" :key=\"index\" \n             :class=\"['message', message.sender === 'user' ? 'user-message' : 'agent-message']\">\n          <div class=\"message-content\">\n            {{ message.text }}\n          </div>\n          <div class=\"message-time\">{{ message.time }}</div>\n        </div>\n      </div>\n\n      <!-- Chat input -->\n      <div class=\"chat-input\">\n        <input \n          type=\"text\" \n          v-model=\"newMessage\" \n          placeholder=\"Write your message...\" \n          @keyup.enter=\"sendMessage\"\n        />\n        <div class=\"chat-controls\">\n          <button class=\"control-button emoji-button\" aria-label=\"Add emoji\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n              <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n              <path d=\"M8 14s1.5 2 4 2 4-2 4-2\"></path>\n              <line x1=\"9\" y1=\"9\" x2=\"9.01\" y2=\"9\"></line>\n              <line x1=\"15\" y1=\"9\" x2=\"15.01\" y2=\"9\"></line>\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ChatWidget',\n  data() {\n    return {\n      isOpen: false,\n      newMessage: '',\n      messages: []\n    }\n  },\n  methods: {\n    toggleChat() {\n      this.isOpen = !this.isOpen;\n      if (this.isOpen && this.messages.length === 0) {\n        setTimeout(() => {\n          this.messages.push({\n            text: 'Hello! How can I help you today?',\n            sender: 'agent',\n            time: this.getCurrentTime()\n          });\n        }, 1000);\n      }\n    },\n    sendMessage() {\n      if (this.newMessage.trim() === '') return;\n      \n      // Add user message\n      this.messages.push({\n        text: this.newMessage,\n        sender: 'user',\n        time: this.getCurrentTime()\n      });\n      \n      const userMessage = this.newMessage;\n      this.newMessage = '';\n      \n      // Scroll to bottom\n      this.$nextTick(() => {\n        this.scrollToBottom();\n      });\n\n      setTimeout(() => {\n        this.simulateResponse(userMessage);\n      }, 1000 + Math.random() * 2000);\n    },\n    simulateResponse(userMessage) {\n      let response = \"Thank you for your message. Our team will get back to you soon.\";\n      \n      if (userMessage.toLowerCase().includes('hello') || userMessage.toLowerCase().includes('hi')) {\n        response = \"Hello there! How can I assist you today?\";\n      } else if (userMessage.toLowerCase().includes('help')) {\n        response = \"I'd be happy to help. Could you please provide more details about what you need assistance with?\";\n      } else if (userMessage.toLowerCase().includes('time')) {\n        response = `The current time is ${this.getCurrentTime()}.`;\n      }\n      \n      this.messages.push({\n        text: response,\n        sender: 'agent',\n        time: this.getCurrentTime()\n      });\n      \n      // Scroll to bottom after adding new message\n      this.$nextTick(() => {\n        this.scrollToBottom();\n      });\n    },\n    getCurrentTime() {\n      const now = new Date();\n      return now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    },\n    scrollToBottom() {\n      if (this.$refs.messagesContainer) {\n        this.$refs.messagesContainer.scrollTop = this.$refs.messagesContainer.scrollHeight;\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.chat-container {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  z-index: 1000;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n}\n\n.chat-button {\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background-color: #4285f4;\n  color: white;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  transition: all 0.3s ease;\n}\n\n.chat-button:hover {\n  background-color: #3367d6;\n  transform: scale(1.05);\n}\n\n.chat-button svg {\n  width: 28px;\n  height: 28px;\n}\n\n.chat-window {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 350px;\n  height: 550px;\n  background-color: white;\n  border-radius: 12px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0 5px 25px rgba(0, 0, 0, 0.2);\n  animation: slideIn 0.3s ease;\n}\n\n@keyframes slideIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.chat-header {\n  padding: 16px;\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.chat-header-info h2 {\n  margin: 0;\n  margin-right: auto;\n  align-self: flex-start;\n  font-size: 18px;\n  color: #333;\n  font-weight: 600;\n}\n\n.chat-status {\n  display: flex;\n  align-items: center;\n  margin-top: 4px;\n}\n\n.status-dot {\n  width: 8px;\n  height: 8px;\n  background-color: #4caf50;\n  border-radius: 50%;\n  margin-right: 6px;\n}\n\n.status-text {\n  font-size: 13px;\n  color: #666;\n}\n\n.close-button {\n  background: none;\n  justify-items: right;\n  border: none;\n  cursor: pointer;\n  color: #999;\n  margin-left: auto;\n  padding: 4px;\n}\n\n.close-button svg {\n  width: 18px;\n  height: 18px;\n}\n\n.close-button:hover {\n  color: #333;\n}\n\n.chat-messages {\n  flex: 1;\n  padding: 16px;\n  overflow-y: auto;\n  background-color: #f0f2f5;\n  display: flex;\n  flex-direction: column;\n}\n\n.message {\n  max-width: 80%;\n  margin-bottom: 12px;\n  display: flex;\n  flex-direction: column;\n}\n\n.user-message {\n  align-self: flex-end;\n}\n\n.agent-message {\n  align-self: flex-start;\n}\n\n.message-content {\n  padding: 10px 14px;\n  border-radius: 18px;\n  font-size: 14px;\n  line-height: 1.4;\n  word-wrap: break-word;\n}\n\n.user-message .message-content {\n  background-color: #4285f4;\n  color: white;\n  border-bottom-right-radius: 4px;\n}\n\n.agent-message .message-content {\n  background-color: white;\n  color: #333;\n  border-bottom-left-radius: 4px;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n}\n\n.message-time {\n  font-size: 11px;\n  color: #999;\n  margin-top: 4px;\n  align-self: flex-end;\n}\n\n.agent-message .message-time {\n  align-self: flex-start;\n}\n\n.chat-input {\n  padding: 12px 16px;\n  background-color: white;\n  display: flex;\n  align-items: center;\n  border-top: 1px solid #f0f0f0;\n}\n\n.chat-input input {\n  flex: 1;\n  border: none;\n  padding: 10px 0;\n  font-size: 14px;\n  outline: none;\n  color: #333;\n}\n\n.chat-input input::placeholder {\n  color: #aaa;\n}\n\n.chat-controls {\n  display: flex;\n  align-items: center;\n}\n\n.control-button {\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: #666;\n  padding: 6px;\n  margin-left: 8px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background-color 0.2s;\n}\n\n.control-button:hover {\n  background-color: #f0f0f0;\n}\n\n.control-button svg {\n  width: 20px;\n  height: 20px;\n}\n\n.send-button {\n  color: #4285f4;\n}\n\n.emoji-button {\n  color: #666;\n}\n\n/* Responsive adjustments */\n@media (max-width: 480px) {\n  .chat-window {\n    width: 100%;\n    height: 100%;\n    bottom: 0;\n    right: 0;\n    border-radius: 0;\n  }\n  \n  .chat-button {\n    bottom: 20px;\n    right: 20px;\n  }\n}\n</style>"],"mappings":";;gCAAAA,kBAAA;oBASMC,UAKM,C;;EAdZC,GAAA;EAiBuBC,KAAK,EAAC;;;EAClBA,KAAK,EAAC;AAAa;gEACtBC,mBAAA,CAMM;EANDD,KAAK,EAAC;AAAkB,I,aAC3BC,mBAAA,CAAoB,YAAhB,aAAW,G,aACfA,mBAAA,CAGM;EAHDD,KAAK,EAAC;AAAa,I,aACtBC,mBAAA,CAAgC;EAA1BD,KAAK,EAAC;AAAY,I,aACxBC,mBAAA,CAA8D;EAAxDD,KAAK,EAAC;AAAa,GAAC,+BAA6B,E;gEAIzDC,mBAAA,CAGM;EAHDC,KAAK,EAAC,4BAA4B;EAACC,OAAO,EAAC,WAAW;EAACC,IAAI,EAAC,MAAM;EAACC,MAAM,EAAC,cAAc;EAAC,cAAY,EAAC,GAAG;EAAC,gBAAc,EAAC,OAAO;EAAC,iBAAe,EAAC;iBACpJJ,mBAAA,CAA2C;EAArCK,EAAE,EAAC,IAAI;EAACC,EAAE,EAAC,GAAG;EAACC,EAAE,EAAC,GAAG;EAACC,EAAE,EAAC;iBAC/BR,mBAAA,CAA2C;EAArCK,EAAE,EAAC,GAAG;EAACC,EAAE,EAAC,GAAG;EAACC,EAAE,EAAC,IAAI;EAACC,EAAE,EAAC;;oBAFjCC,UAGM,C;;EAKLV,KAAK,EAAC,eAAe;EAACW,GAAG,EAAC;;;EAGtBX,KAAK,EAAC;AAAiB;;EAGvBA,KAAK,EAAC;AAAc;;EAKxBA,KAAK,EAAC;AAAY;iCA9C7BH,kBAAA;;uBACEe,mBAAA,CAgEM;IAhEDZ,KAAK,EADZa,eAAA,EACa,gBAAgB;MAAA,aAAwBC,KAAA,CAAAC;IAAM;MACvDC,mBAAA,iBAAoB,E,CAEXF,KAAA,CAAAC,MAAM,I,cADfH,mBAAA,CAYS;IAfbb,GAAA;IAKMC,KAAK,EAAC,aAAa;IAClBiB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAClB,YAAU,EAAC;KAPjB,IAAAG,UAAA,MAAAN,mBAAA,gBAiBeF,KAAA,CAAAC,MAAM,I,cAAjBH,mBAAA,CA+CM,OA/CNW,UA+CM,GA9CJtB,mBAAA,CAcM,OAdNuB,UAcM,GAbJC,UAMM,EACNxB,mBAAA,CAKS;IALDD,KAAK,EAAC,cAAc;IAAEiB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAAE,YAAU,EAAC;KA1BpE,IAAAO,UAAA,G,GAkCMV,mBAAA,mBAAsB,EACtBf,mBAAA,CAQM,OARN0B,UAQM,I,kBAPJf,mBAAA,CAMMgB,SAAA,QA1CdC,WAAA,CAoCwCf,KAAA,CAAAgB,QAAQ,EApChD,CAoCqBC,OAAO,EAAEC,KAAK;yBAA3BpB,mBAAA,CAMM;MANqCb,GAAG,EAAEiC,KAAK;MAC/ChC,KAAK,EArCnBa,eAAA,aAqCiCkB,OAAO,CAACE,MAAM;QACrChC,mBAAA,CAEM,OAFNiC,UAEM,EAAAC,gBAAA,CADDJ,OAAO,CAACK,IAAI,kBAEjBnC,mBAAA,CAAkD,OAAlDoC,WAAkD,EAAAF,gBAAA,CAArBJ,OAAO,CAACO,IAAI,iB;0DAI7CtB,mBAAA,gBAAmB,EACnBf,mBAAA,CAiBM,OAjBNsC,WAiBM,G,gBAhBJtC,mBAAA,CAKE;IAJAuC,IAAI,EAAC,MAAM;IAhDrB,uBAAAtB,MAAA,QAAAA,MAAA,MAAAuB,MAAA,IAiDmB3B,KAAA,CAAA4B,UAAU,GAAAD,MAAA;IACnBE,WAAW,EAAC,uBAAuB;IAClCC,OAAK,EAAA1B,MAAA,QAAAA,MAAA,MAnDhB2B,SAAA,KAAA1B,IAAA,KAmDwBC,QAAA,CAAA0B,WAAA,IAAA1B,QAAA,CAAA0B,WAAA,IAAA3B,IAAA,CAAW;iEAFhBL,KAAA,CAAA4B,UAAU,E,GAIrBK,WASM,C,OA9Dd/B,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}