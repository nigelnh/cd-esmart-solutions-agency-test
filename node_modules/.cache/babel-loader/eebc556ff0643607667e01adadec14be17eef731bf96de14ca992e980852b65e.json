{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"FinalStep\",\n  props: {\n    content: {\n      type: String,\n      required: true\n    },\n    generatedImage: {\n      type: String,\n      default: null\n    },\n    projectId: {\n      type: String,\n      default: \"\"\n    },\n    projectTitle: {\n      type: String,\n      default: \"Content Project\"\n    },\n    projectDescription: {\n      type: String,\n      default: \"\"\n    },\n    contentId: {\n      type: String,\n      default: \"\"\n    },\n    fromDashboard: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      projectStatus: \"in_progress\",\n      loading: false,\n      error: null,\n      saveLoading: false,\n      saveMessage: null,\n      saveStatus: \"success\",\n      imageLoading: false,\n      imageError: null,\n      localImage: this.generatedImage,\n      toasts: []\n    };\n  },\n  computed: {\n    apiEndpoint() {\n      return process.env.VUE_APP_API_URL || \"http://localhost:3001/api\";\n    },\n    hasProjectId() {\n      return this.projectId && this.projectId.length > 0;\n    },\n    hasContentId() {\n      return this.contentId && this.contentId.length > 0;\n    },\n    formattedContent() {\n      if (!this.content) return \"\";\n\n      // Tạo định dạng HTML cho nội dung\n      const formatted = this.content\n      // Thay thế dòng trống bằng thẻ đoạn\n      .replace(/\\n\\s*\\n/g, \"</p><p>\")\n      // Thay thế dòng mới đơn bằng thẻ br\n      .replace(/\\n/g, \"<br>\")\n      // Bọc toàn bộ nội dung trong thẻ p\n      .replace(/^(.+)$/, \"<p>$1</p>\");\n      return formatted;\n    },\n    imageUrl() {\n      // First, use localImage from data if available\n      if (this.localImage) {\n        console.log(\"Using local image:\", this.localImage.substring(0, 50) + \"...\");\n\n        // Ensure the URL is properly formatted for deployment\n        return this.ensureAbsoluteUrl(this.localImage);\n      }\n\n      // Next, try to use generated image from props\n      if (this.generatedImage) {\n        console.log(\"Using generated image from props:\", typeof this.generatedImage === \"string\" ? this.generatedImage.substring(0, 50) + \"...\" : \"object\");\n\n        // Handle string URLs (including data URLs)\n        if (typeof this.generatedImage === \"string\") {\n          return this.ensureAbsoluteUrl(this.generatedImage);\n        }\n\n        // Handle object format\n        if (typeof this.generatedImage === \"object\" && this.generatedImage !== null) {\n          if (\"image\" in this.generatedImage) {\n            return this.ensureAbsoluteUrl(this.generatedImage.image);\n          }\n          if (\"imageUrl\" in this.generatedImage) {\n            return this.ensureAbsoluteUrl(this.generatedImage.imageUrl);\n          }\n        }\n      }\n      return null;\n    }\n  },\n  created() {\n    console.log(\"FinalStep created\");\n    console.log(\"generatedImage prop:\", this.generatedImage);\n    console.log(\"contentId prop:\", this.contentId);\n\n    // Set initial local image from props\n    if (this.generatedImage) {\n      this.localImage = this.generatedImage;\n    } else {\n      this.localImage = null;\n    }\n    if (this.hasProjectId) {\n      this.fetchProjectStatus();\n    }\n\n    // Always fetch content image if we have contentId, regardless of generatedImage prop\n    if (this.hasContentId) {\n      this.fetchContentImage();\n    }\n  },\n  mounted() {\n    console.log(\"FinalStep mounted, contentId:\", this.contentId);\n    console.log(\"From dashboard:\", this.fromDashboard);\n    console.log(\"Generated image from props:\", !!this.generatedImage);\n\n    // Thêm giá trị mặc định cho toasts\n    if (!this.toasts) {\n      this.toasts = [];\n    }\n\n    // Tải lại dữ liệu hình ảnh từ cơ sở dữ liệu nếu có contentId\n    if (this.contentId && (!this.generatedImage || this.fromDashboard)) {\n      console.log(\"Loading image data from database...\");\n      this.loadImageFromDatabase();\n    }\n  },\n  methods: {\n    async fetchProjectStatus() {\n      try {\n        if (!this.hasProjectId) return;\n        const response = await axios.get(`${this.apiEndpoint}/projects/${this.projectId}`);\n        if (response.data.success) {\n          this.projectStatus = response.data.data.status;\n        }\n      } catch (error) {\n        console.error(\"Error fetching project status:\", error);\n        this.error = \"Could not fetch project status\";\n      }\n    },\n    async fetchContentImage() {\n      if (!this.contentId) {\n        console.log(\"No contentId available to fetch image\");\n        this.localImage = null;\n        return;\n      }\n      try {\n        console.log(`Starting to fetch image for content ID: ${this.contentId}`);\n        this.imageLoading = true;\n        this.imageError = null;\n\n        // Use a timeout to prevent hanging requests\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), 15000); // 15 second timeout\n\n        const response = axios.get(`/api/content/contents/${this.contentId}`, {\n          signal: controller.signal\n        }).then(response => {\n          clearTimeout(timeoutId);\n          console.log(`Content API response for ID ${this.contentId}:`, response.data);\n          if (response.data && response.data.success) {\n            const contentData = response.data.data;\n            console.log(\"Full content data:\", contentData);\n            if (contentData && contentData.imageUrl) {\n              console.log(`Found image URL for content ${this.contentId}:`, contentData.imageUrl);\n\n              // Check filename pattern first - this is highest priority\n              const imageFilenameMatch = contentData.imageUrl.match(/image_\\d+\\.png/);\n              if (imageFilenameMatch) {\n                const filename = imageFilenameMatch[0];\n                console.log(`Detected image filename pattern directly in content data: ${filename}`);\n\n                // Create absolute URL to image uploads endpoint\n                const directUrl = `${window.location.origin}/api/image/uploads/${filename}`;\n                console.log(\"Created direct URL to image:\", directUrl);\n                this.localImage = directUrl;\n                this.$emit(\"update:image\", directUrl);\n                this.imageLoading = false;\n                return;\n              }\n\n              // Kiểm tra đường dẫn hình ảnh\n              if (contentData.imageUrl.includes(\"undefined\") || contentData.imageUrl === \"null\" || contentData.imageUrl === \"\") {\n                console.error(\"Invalid image URL detected:\", contentData.imageUrl);\n                this.imageError = \"URL hình ảnh không hợp lệ\";\n                this.imageLoading = false;\n                return;\n              }\n\n              // Store the original URL\n              const originalUrl = contentData.imageUrl;\n              console.log(\"Original image URL:\", originalUrl);\n\n              // Try alternative methods for loading image\n              this.tryAlternativeImageUrls(originalUrl);\n            } else {\n              console.log(`No image found for content ${this.contentId}`);\n              this.localImage = null;\n              this.imageLoading = false;\n              this.imageError = \"Không tìm thấy hình ảnh trong cơ sở dữ liệu\";\n            }\n          } else {\n            console.warn(\"API did not return success:\", response.data);\n            this.localImage = null;\n            this.imageLoading = false;\n            this.imageError = \"Lỗi khi lấy dữ liệu nội dung\";\n          }\n        }).catch(error => {\n          clearTimeout(timeoutId);\n          console.error(\"Error fetching content image:\", error);\n          if (error.name === \"AbortError\") {\n            this.imageError = \"Request timed out when loading image\";\n          } else {\n            this.imageError = \"Failed to load image: \" + error.message;\n          }\n          this.localImage = null;\n          this.imageLoading = false;\n        });\n      } catch (error) {\n        console.error(\"Error in fetchContentImage:\", error);\n        this.imageError = `Lỗi: ${error.message}`;\n        this.localImage = null;\n        this.imageLoading = false;\n      }\n    },\n    async markAsFinished() {\n      try {\n        if (!this.hasProjectId) {\n          alert(\"Cannot update status: No project ID available\");\n          return;\n        }\n        this.loading = true;\n        const response = await axios.patch(`${this.apiEndpoint}/projects/${this.projectId}/status`, {\n          status: \"finished\"\n        });\n        if (response.data.success) {\n          this.projectStatus = \"finished\";\n        }\n      } catch (error) {\n        console.error(\"Error updating project status:\", error);\n        alert(\"Failed to update project status: \" + error.message);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async markAsInProgress() {\n      try {\n        if (!this.hasProjectId) {\n          alert(\"Cannot update status: No project ID available\");\n          return;\n        }\n        this.loading = true;\n        const response = await axios.patch(`${this.apiEndpoint}/projects/${this.projectId}/status`, {\n          status: \"in_progress\"\n        });\n        if (response.data.success) {\n          this.projectStatus = \"in_progress\";\n        }\n      } catch (error) {\n        console.error(\"Error updating project status:\", error);\n        alert(\"Failed to update project status: \" + error.message);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async saveContent() {\n      try {\n        if (!this.hasContentId) {\n          this.saveMessage = \"No content ID available. Cannot save.\";\n          this.saveStatus = \"error\";\n          return;\n        }\n        this.saveLoading = true;\n        this.saveMessage = null;\n        const response = await axios.put(`${this.apiEndpoint}/content/contents/${this.contentId}`, {\n          generatedContent: this.content\n        });\n        if (response.data.success) {\n          this.saveMessage = \"Content saved successfully!\";\n          this.saveStatus = \"success\";\n          // Emit event to update parent content\n          this.$emit(\"update:content\", this.content);\n        } else {\n          throw new Error(response.data.error || \"Unknown error occurred\");\n        }\n      } catch (error) {\n        console.error(\"Error saving content:\", error);\n        this.saveMessage = \"Failed to save content: \" + error.message;\n        this.saveStatus = \"error\";\n      } finally {\n        this.saveLoading = false;\n\n        // Clear message after 3 seconds\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n      }\n    },\n    exportContent() {\n      try {\n        // Tạo dữ liệu để export\n        const exportData = {\n          title: this.projectTitle || \"Untitled Content\",\n          content: this.content,\n          image: this.imageUrl,\n          createdAt: new Date().toISOString(),\n          projectInfo: {\n            id: this.projectId,\n            title: this.projectTitle,\n            description: this.projectDescription\n          }\n        };\n\n        // Tạo JSON string\n        const dataStr = JSON.stringify(exportData, null, 2);\n\n        // Tạo blob để download\n        const blob = new Blob([dataStr], {\n          type: \"application/json\"\n        });\n        const url = URL.createObjectURL(blob);\n\n        // Tạo link và kích hoạt download\n        const a = document.createElement(\"a\");\n        a.download = `${this.projectTitle || \"content\"}_export.json`;\n        a.href = url;\n        a.click();\n\n        // Giải phóng URL object\n        URL.revokeObjectURL(url);\n        this.saveMessage = \"Content exported successfully!\";\n        this.saveStatus = \"success\";\n\n        // Clear message after 3 seconds\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n      } catch (error) {\n        console.error(\"Error exporting content:\", error);\n        this.saveMessage = \"Failed to export content: \" + error.message;\n        this.saveStatus = \"error\";\n\n        // Clear message after 3 seconds\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n      }\n    },\n    shareContent() {\n      // Xử lý chia sẻ nội dung - có thể thông qua email hoặc mạng xã hội\n      try {\n        // Kiểm tra nếu Web Share API được hỗ trợ\n        if (navigator.share) {\n          navigator.share({\n            title: this.projectTitle || \"My Content\",\n            text: `Check out my content: ${this.projectTitle || \"Content\"}`,\n            url: window.location.href\n          }).then(() => {\n            this.saveMessage = \"Content shared successfully!\";\n            this.saveStatus = \"success\";\n          }).catch(error => {\n            throw error;\n          });\n        } else {\n          // Fallback - copy URL vào clipboard\n          navigator.clipboard.writeText(window.location.href).then(() => {\n            this.saveMessage = \"URL copied to clipboard!\";\n            this.saveStatus = \"success\";\n          });\n        }\n\n        // Clear message after 3 seconds\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n      } catch (error) {\n        console.error(\"Error sharing content:\", error);\n        this.saveMessage = \"Failed to share content: \" + error.message;\n        this.saveStatus = \"error\";\n\n        // Clear message after 3 seconds\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n      }\n    },\n    downloadPDF() {\n      try {\n        // Thông báo cho người dùng rằng chức năng đang được phát triển\n        this.saveMessage = \"PDF download feature will be available soon.\";\n        this.saveStatus = \"success\";\n\n        // Xóa thông báo sau 3 giây\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n\n        // NOTE: Chức năng này sẽ được triển khai trong bản cập nhật tới\n        // Sử dụng thư viện như jsPDF hoặc html2pdf.js để tạo PDF từ nội dung\n      } catch (error) {\n        console.error(\"Error downloading PDF:\", error);\n        this.saveMessage = \"Failed to download PDF: \" + error.message;\n        this.saveStatus = \"error\";\n\n        // Clear message after 3 seconds\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n      }\n    },\n    goToDashboard() {\n      this.$emit(\"go-to-dashboard\");\n    },\n    async generateImageForContent() {\n      try {\n        this.imageLoading = true;\n        this.imageError = null;\n\n        // Hiển thị thông báo đang xử lý\n        this.showToast(\"Đang chuẩn bị tạo hình ảnh cho nội dung...\", \"info\");\n        if (!this.contentId) {\n          throw new Error(\"Không có ID nội dung để tạo hình ảnh\");\n        }\n\n        // Kiểm tra xem có nội dung không\n        if (!this.content || this.content.trim().length === 0) {\n          this.showToast(\"Không thể tạo hình ảnh: Nội dung trống\", \"error\");\n          throw new Error(\"Nội dung trống, không thể tạo hình ảnh\");\n        }\n        console.log(`Generating image for content ID: ${this.contentId}`);\n        console.log(`Content length: ${this.content.length} characters`);\n\n        // Bước 1: Tạo prompt từ nội dung\n        console.log(\"Step 1: Generating prompt from content\");\n        const promptResponse = await axios.post(`/api/content/contents/generate-prompt`, {\n          contentId: this.contentId,\n          style: \"Realistic\",\n          template: `Generate a [STYLE] image of [SUBJECT], featuring [KEY DETAILS]. Style: [ART STYLE/MEDIUM], color palette: [COLORS], lighting: [LIGHTING], composition: [COMPOSITION]. Additional effects: [EFFECTS]. Keep the overall mood [MOOD]. Render in Kandinsky 2.2 with high detail, resolution [RESOLUTION].`,\n          content: this.content\n        }, {\n          timeout: 45000 // 45 seconds timeout for prompt generation\n        });\n        if (!promptResponse.data.success) {\n          throw new Error(promptResponse.data.error || \"Lỗi khi tạo mô tả hình ảnh\");\n        }\n        const generatedPrompt = promptResponse.data.prompt;\n        console.log(\"Generated prompt:\", generatedPrompt.substring(0, 100) + \"...\");\n\n        // Hiển thị thông báo prompt đã được tạo\n        this.showToast(\"Đã tạo mô tả hình ảnh, đang tạo hình ảnh...\", \"success\");\n\n        // Bước 2: Tạo hình ảnh từ prompt\n        const imageResponse = await axios.post(`/api/image/generate`, {\n          prompt: generatedPrompt,\n          style: \"Realistic\",\n          width: 512,\n          height: 512,\n          num_inference_steps: 30\n        }, {\n          timeout: 180000 // 3 minutes timeout for image generation\n        });\n        if (!imageResponse.data.success) {\n          throw new Error(imageResponse.data.error || \"Lỗi khi tạo hình ảnh từ mô tả\");\n        }\n        const imageUrl = `/api/content/contents/${this.contentId}/images/${imageResponse.data.filename}`;\n\n        // Bước 3: Cập nhật URL hình ảnh vào nội dung\n        const updateResponse = await axios.put(`/api/content/contents/${this.contentId}`, {\n          imageUrl\n        });\n        if (!updateResponse.data.success) {\n          throw new Error(updateResponse.data.error || \"Lỗi khi cập nhật URL hình ảnh\");\n        }\n\n        // Cập nhật URL hình ảnh vào local state\n        this.localImage = imageUrl;\n        this.$emit(\"update:image\", imageUrl);\n\n        // Hiển thị thông báo thành công\n        this.showToast(\"Đã tạo hình ảnh thành công!\", \"success\");\n      } catch (error) {\n        console.error(\"Error generating image for content:\", error);\n        let errorMessage = \"Lỗi không xác định\";\n\n        // Check for API response error\n        if (error.response) {\n          console.log(\"API response error:\", error.response.data);\n\n          // Handle specific error messages from server\n          if (error.response.data && error.response.data.error) {\n            errorMessage = error.response.data.error;\n\n            // Specific checks for common errors\n            if (errorMessage.includes(\"Missing required field\")) {\n              errorMessage = \"Thiếu trường dữ liệu cần thiết. Vui lòng thử lại.\";\n              console.log(\"Content availability:\", !!this.content);\n              console.log(\"ContentId availability:\", !!this.contentId);\n\n              // Try retrieving the content again if missing\n              if (this.contentId && (!this.content || this.content.trim().length === 0)) {\n                this.showToast(\"Đang thử tải lại nội dung...\", \"info\");\n                try {\n                  const contentResponse = await axios.get(`/api/content/contents/${this.contentId}`);\n                  if (contentResponse.data.success && contentResponse.data.data.generatedContent) {\n                    // Update the local content\n                    this.$emit(\"update:content\", contentResponse.data.data.generatedContent);\n                    this.showToast(\"Đã tải lại nội dung, vui lòng thử lại\", \"info\");\n                  }\n                } catch (reloadError) {\n                  console.error(\"Error reloading content:\", reloadError);\n                }\n              }\n            }\n          }\n        } else if (error.message) {\n          errorMessage = error.message;\n        }\n        this.imageError = `Lỗi khi tạo hình ảnh: ${errorMessage}`;\n\n        // Hiển thị thông báo lỗi\n        this.showToast(`Lỗi: ${errorMessage}`, \"error\");\n\n        // Nếu lỗi do timeout\n        if (error.message.includes(\"timeout\")) {\n          this.showToast(\"Quá thời gian chờ phản hồi. Vui lòng thử lại sau.\", \"error\");\n        }\n      } finally {\n        this.imageLoading = false;\n      }\n    },\n    showToast(message, type = \"info\") {\n      if (!this.toasts) this.toasts = [];\n      const id = Date.now();\n      this.toasts.push({\n        id,\n        message,\n        type\n      });\n\n      // Tự động xóa sau 5 giây\n      setTimeout(() => {\n        this.removeToast(id);\n      }, 5000);\n    },\n    removeToast(id) {\n      if (this.toasts) {\n        this.toasts = this.toasts.filter(toast => toast.id !== id);\n      }\n    },\n    ensureAbsoluteUrl(url) {\n      if (!url) return null;\n\n      // Log URL for debugging\n      console.log(`Resolving URL: ${url}`);\n\n      // Return as-is if already absolute or data URL\n      if (url.startsWith(\"http://\") || url.startsWith(\"https://\") || url.startsWith(\"data:\")) {\n        console.log(`URL is already absolute: ${url}`);\n        return url;\n      }\n\n      // Check if URL contains image_XXXXXXXX.png pattern (saved image format)\n      const imageFilenameMatch = url.match(/image_\\d+\\.png/);\n      if (imageFilenameMatch) {\n        // Extract filename\n        const filename = imageFilenameMatch[0];\n        console.log(`Detected image filename pattern: ${filename}`);\n        // Use correct endpoint /api/image/uploads/:fileName\n        const result = `${window.location.origin}/api/image/uploads/${filename}`;\n        console.log(`Created direct URL for image file: ${result}`);\n        return result;\n      }\n\n      // Special handling for uploads directory\n      if (url.includes(\"/uploads/\") || url.includes(\"uploads/\")) {\n        // Extract filename from path\n        const filename = url.split(\"/\").pop();\n        console.log(`Extracted filename from uploads path: ${filename}`);\n        // Use correct endpoint /api/image/uploads/:fileName\n        const result = `${window.location.origin}/api/image/uploads/${filename}`;\n        console.log(`Created uploads URL: ${result}`);\n        return result;\n      }\n\n      // If starts with /api, add domain\n      if (url.startsWith(\"/api\")) {\n        const result = `${window.location.origin}${url}`;\n        console.log(`Created API URL: ${result}`);\n        return result;\n      }\n\n      // If starts with server/ or /server/\n      if (url.startsWith(\"server/\") || url.startsWith(\"/server/\")) {\n        const result = `${window.location.origin}/api/${url.replace(/^(\\/)?server\\//, \"\")}`;\n        console.log(`Created server path URL: ${result}`);\n        return result;\n      }\n\n      // If doesn't start with / but is still a relative path, add /\n      if (!url.startsWith(\"/\")) {\n        const result = `${window.location.origin}/${url}`;\n        console.log(`Created relative path URL: ${result}`);\n        return result;\n      }\n\n      // Default case, assume relative to root\n      const result = `${window.location.origin}${url}`;\n      console.log(`Created root-relative URL: ${result}`);\n      return result;\n    },\n    handleImageError(event) {\n      console.error(\"Image loading error:\", event);\n      this.imageError = \"Failed to load image\";\n\n      // Try to debug and fix the image URL\n      if (this.localImage) {\n        this.debugImageUrl(this.localImage);\n      } else if (this.generatedImage) {\n        this.debugImageUrl(this.generatedImage);\n      }\n    },\n    debugImageUrl(originalUrl) {\n      console.log(\"Debugging image URL:\", originalUrl);\n\n      // Kiểm tra nhiều định dạng URL khác nhau\n      const possibleUrls = [];\n      if (typeof originalUrl !== \"string\") {\n        console.error(\"Original URL is not a string:\", originalUrl);\n        return;\n      }\n\n      // Lấy tên tệp nếu có\n      const filename = originalUrl.split(\"/\").pop();\n      console.log(\"Extracted filename:\", filename);\n\n      // Đường dẫn trực tiếp đến API endpoint (ưu tiên cao nhất)\n      if (filename) {\n        possibleUrls.push(`/api/image/uploads/${filename}`);\n        possibleUrls.push(`${window.location.origin}/api/image/uploads/${filename}`);\n      }\n      if (originalUrl.includes(\"uploads/\")) {\n        // Các định dạng khác cũng được thử\n        possibleUrls.push(`/server/uploads/${filename}`);\n        possibleUrls.push(`/uploads/${filename}`);\n      }\n\n      // Thử URL gốc với tên miền\n      if (!originalUrl.startsWith(\"http\") && !originalUrl.startsWith(\"data:\")) {\n        possibleUrls.push(`${window.location.origin}${originalUrl.startsWith(\"/\") ? \"\" : \"/\"}${originalUrl}`);\n      }\n\n      // Thêm URL gốc vào danh sách (nếu chưa có)\n      if (!possibleUrls.includes(originalUrl)) {\n        possibleUrls.push(originalUrl);\n      }\n      console.log(\"Trying alternate URLs:\", possibleUrls);\n\n      // Thử tải mỗi URL\n      let successFound = false;\n      possibleUrls.forEach((url, index) => {\n        setTimeout(() => {\n          // Skip if we already found a working URL\n          if (successFound) return;\n          const img = new Image();\n          img.onload = () => {\n            console.log(`Success with URL: ${url}`);\n            successFound = true;\n            this.localImage = url;\n            this.$emit(\"update:image\", url);\n            this.imageError = null;\n            this.imageLoading = false;\n          };\n          img.onerror = () => {\n            console.log(`Failed with URL: ${url}`);\n\n            // Nếu đây là URL cuối cùng và tất cả đều thất bại, hiển thị nút tạo hình ảnh mới\n            if (index === possibleUrls.length - 1 && !successFound) {\n              console.log(\"All URLs failed, showing generate button\");\n              this.imageError = \"Không thể tải hình ảnh. Bạn có thể tạo hình ảnh mới.\";\n            }\n          };\n          img.src = url;\n        }, index * 100);\n      });\n    },\n    handleImageLoad() {\n      console.log(\"Image loaded successfully\");\n      this.imageError = null;\n    },\n    loadImageFromDatabase() {\n      if (!this.contentId) return;\n      this.imageLoading = true;\n      this.imageError = null;\n      console.log(`Fetching image data for content ID: ${this.contentId}`);\n      axios.get(`/api/content/contents/${this.contentId}`).then(response => {\n        if (response.data && response.data.success && response.data.data) {\n          const content = response.data.data;\n          if (content.imageUrl) {\n            console.log(`Found image URL in database: ${content.imageUrl}`);\n\n            // Check for image_XXXXXXXX.png pattern first\n            const imageFilenameMatch = content.imageUrl.match(/image_\\d+\\.png/);\n            if (imageFilenameMatch) {\n              const filename = imageFilenameMatch[0];\n              console.log(`Detected image filename pattern in database: ${filename}`);\n\n              // Create direct URL to image uploads endpoint\n              const directUrl = `${window.location.origin}/api/image/uploads/${filename}`;\n              console.log(\"Created direct URL to image from database:\", directUrl);\n              this.localImage = directUrl;\n              this.$emit(\"update:image\", directUrl);\n              this.imageError = null;\n              this.imageLoading = false;\n\n              // Show success message\n              this.showToast(\"Đã tải hình ảnh thành công\", \"success\");\n              return;\n            }\n\n            // Try standard URL processing\n            const formattedUrl = this.ensureAbsoluteUrl(content.imageUrl);\n            this.localImage = formattedUrl;\n            this.$emit(\"update:image\", formattedUrl);\n\n            // Show success toast\n            this.showToast(\"Đã tải hình ảnh thành công\", \"success\");\n          } else {\n            console.log(\"No image URL found in database\");\n            this.localImage = null;\n            this.imageError = \"Không tìm thấy hình ảnh trong cơ sở dữ liệu\";\n          }\n        } else {\n          console.error(\"Error fetching content:\", response.data);\n          this.imageError = \"Lỗi khi tải dữ liệu nội dung\";\n        }\n      }).catch(error => {\n        console.error(\"Error fetching content:\", error);\n        this.imageError = `Lỗi kết nối: ${error.message}`;\n      }).finally(() => {\n        this.imageLoading = false;\n      });\n    },\n    // Thêm hàm mới để thử các phương pháp thay thế khi tải hình ảnh\n    tryAlternativeImageUrls(originalUrl) {\n      try {\n        console.log(\"Trying alternative methods to load image:\", originalUrl);\n\n        // First, look for image_XXXXXXXX.png pattern\n        const imageFilenameMatch = originalUrl.match(/image_\\d+\\.png/);\n        if (imageFilenameMatch) {\n          const filename = imageFilenameMatch[0];\n          console.log(`Found image filename pattern: ${filename}`);\n\n          // Create direct URL to image uploads endpoint\n          const directUrl = `${window.location.origin}/api/image/uploads/${filename}`;\n          console.log(\"Created direct URL to image:\", directUrl);\n\n          // Update URL immediately\n          this.localImage = directUrl;\n          this.$emit(\"update:image\", directUrl);\n          this.imageLoading = false;\n\n          // Still try loading to confirm\n          const img = new Image();\n          img.onload = () => {\n            console.log(\"Image loaded successfully from direct URL\");\n            this.imageError = null;\n          };\n          img.onerror = () => {\n            console.error(\"Image failed to load from direct URL\");\n            this.imageError = \"Không thể tải hình ảnh từ server\";\n            this.debugImageUrl(originalUrl);\n          };\n          img.src = directUrl;\n          return;\n        }\n\n        // Try to load the original URL image first\n        const img = new Image();\n        img.onload = () => {\n          console.log(\"Image loaded successfully from original URL\");\n          this.localImage = originalUrl;\n          this.$emit(\"update:image\", originalUrl);\n          this.imageLoading = false;\n        };\n        img.onerror = async () => {\n          console.log(\"Failed to load image from original URL, trying alternate paths\");\n\n          // Try with /api prefix for server uploads\n          if (originalUrl.includes(\"uploads/\")) {\n            const uploadPathMatch = originalUrl.match(/(uploads\\/.*$)/);\n            if (uploadPathMatch && uploadPathMatch[1]) {\n              const apiUrl = `/api/image/${uploadPathMatch[1]}`;\n              console.log(\"Trying with API URL:\", apiUrl);\n\n              // Check if this URL works\n              const altImg = new Image();\n              altImg.onload = () => {\n                console.log(\"Image loaded successfully from API URL\");\n                this.localImage = apiUrl;\n                this.$emit(\"update:image\", apiUrl);\n                this.imageLoading = false;\n              };\n              altImg.onerror = () => {\n                console.log(\"Failed to load image from API URL\");\n\n                // Try one more time with absolute URL\n                const absoluteApiUrl = `${window.location.origin}${apiUrl}`;\n                console.log(\"Trying with absolute API URL:\", absoluteApiUrl);\n                const finalImg = new Image();\n                finalImg.onload = () => {\n                  console.log(\"Image loaded successfully from absolute API URL\");\n                  this.localImage = absoluteApiUrl;\n                  this.$emit(\"update:image\", absoluteApiUrl);\n                  this.imageLoading = false;\n                };\n                finalImg.onerror = () => {\n                  console.log(\"All API URL attempts failed\");\n                  this.imageError = \"Không thể tải hình ảnh từ server\";\n                  this.localImage = null;\n                  this.imageLoading = false;\n\n                  // Final attempt - debug URL\n                  this.debugImageUrl(originalUrl);\n                };\n                finalImg.src = absoluteApiUrl;\n              };\n              altImg.src = apiUrl;\n            } else {\n              this.imageError = \"Invalid image path format\";\n              this.localImage = null;\n              this.imageLoading = false;\n\n              // Final attempt - debug URL\n              this.debugImageUrl(originalUrl);\n            }\n          } else {\n            this.imageError = \"Image not found\";\n            this.localImage = null;\n            this.imageLoading = false;\n\n            // Final attempt - debug URL\n            this.debugImageUrl(originalUrl);\n          }\n        };\n\n        // Ensure the URL is properly formatted\n        img.src = this.ensureAbsoluteUrl(originalUrl);\n      } catch (imgError) {\n        console.error(\"Error checking image:\", imgError);\n        this.localImage = originalUrl;\n        this.$emit(\"update:image\", originalUrl);\n        this.imageLoading = false;\n      }\n    }\n  },\n  watch: {\n    generatedImage: {\n      immediate: true,\n      handler(newValue, oldValue) {\n        if (newValue !== oldValue) {\n          console.log(\"generatedImage changed:\", newValue);\n\n          // If we get a new generatedImage value, update localImage\n          if (newValue) {\n            this.localImage = newValue;\n          }\n          // Don't clear localImage if newValue is null - we may already have a valid image\n          // from fetchContentImage\n        }\n      }\n    },\n    contentId: {\n      immediate: true,\n      handler(newValue, oldValue) {\n        if (newValue && newValue !== oldValue) {\n          console.log(\"Content ID changed from\", oldValue, \"to\", newValue);\n\n          // Only clear localImage if we're switching to a different content\n          if (oldValue) {\n            this.localImage = null;\n          }\n\n          // Always fetch the image when contentId changes\n          this.fetchContentImage();\n\n          // Tải dữ liệu hình ảnh từ cơ sở dữ liệu\n          this.loadImageFromDatabase();\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","content","type","String","required","generatedImage","default","projectId","projectTitle","projectDescription","contentId","fromDashboard","Boolean","data","projectStatus","loading","error","saveLoading","saveMessage","saveStatus","imageLoading","imageError","localImage","toasts","computed","apiEndpoint","process","env","VUE_APP_API_URL","hasProjectId","length","hasContentId","formattedContent","formatted","replace","imageUrl","console","log","substring","ensureAbsoluteUrl","image","created","fetchProjectStatus","fetchContentImage","mounted","loadImageFromDatabase","methods","response","get","success","status","controller","AbortController","timeoutId","setTimeout","abort","signal","then","clearTimeout","contentData","imageFilenameMatch","match","filename","directUrl","window","location","origin","$emit","includes","originalUrl","tryAlternativeImageUrls","warn","catch","message","markAsFinished","alert","patch","markAsInProgress","saveContent","put","generatedContent","Error","exportContent","exportData","title","createdAt","Date","toISOString","projectInfo","id","description","dataStr","JSON","stringify","blob","Blob","url","URL","createObjectURL","a","document","createElement","download","href","click","revokeObjectURL","shareContent","navigator","share","text","clipboard","writeText","downloadPDF","goToDashboard","generateImageForContent","showToast","trim","promptResponse","post","style","template","timeout","generatedPrompt","prompt","imageResponse","width","height","num_inference_steps","updateResponse","errorMessage","contentResponse","reloadError","now","push","removeToast","filter","toast","startsWith","result","split","pop","handleImageError","event","debugImageUrl","possibleUrls","successFound","forEach","index","img","Image","onload","onerror","src","handleImageLoad","formattedUrl","finally","uploadPathMatch","apiUrl","altImg","absoluteApiUrl","finalImg","imgError","watch","immediate","handler","newValue","oldValue"],"sources":["/Users/nhannguyen/Desktop/Duan/esmart-solutions-agency/src/components/creator-ai/FinalStep.vue"],"sourcesContent":["<template>\n  <div class=\"step-content\">\n    <h2>Final Step</h2>\n    <div v-if=\"hasProjectId\" class=\"project-info\">\n      <h3>{{ projectTitle }}</h3>\n      <p v-if=\"projectDescription\">{{ projectDescription }}</p>\n      <div class=\"project-status\">\n        <span :class=\"['status-badge', projectStatus]\">\n          {{ projectStatus === \"in_progress\" ? \"In Progress\" : \"Finished\" }}\n        </span>\n        <button\n          v-if=\"projectStatus === 'in_progress'\"\n          class=\"status-button\"\n          @click=\"markAsFinished\"\n          :disabled=\"loading\"\n        >\n          {{ loading ? \"Updating...\" : \"Mark as Finished\" }}\n        </button>\n        <button\n          v-else\n          class=\"status-button\"\n          @click=\"markAsInProgress\"\n          :disabled=\"loading\"\n        >\n          {{ loading ? \"Updating...\" : \"Mark as In Progress\" }}\n        </button>\n      </div>\n      <p v-if=\"error\" class=\"error-message\">{{ error }}</p>\n    </div>\n    <div v-else class=\"project-info warning\">\n      <p>\n        This content is not saved to a project. Create a new project to save\n        your work.\n      </p>\n    </div>\n    <div class=\"final-content\">\n      <h3 class=\"mb-3\">Generated Content</h3>\n      <div v-if=\"loading\" class=\"d-flex justify-content-center\">\n        <div class=\"spinner-border text-primary\" role=\"status\">\n          <span class=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n      <div v-else class=\"content-box\" v-html=\"formattedContent\"></div>\n    </div>\n\n    <div class=\"final-image-section\">\n      <h3>Generated Image</h3>\n      <div class=\"image-section\">\n        <div\n          v-if=\"imageLoading\"\n          class=\"d-flex justify-content-center align-items-center image-loading\"\n        >\n          <div class=\"spinner-border text-primary\" role=\"status\">\n            <span class=\"visually-hidden\">Loading...</span>\n          </div>\n          <p class=\"loading-text\">Loading image...</p>\n        </div>\n        <div v-else-if=\"imageError\" class=\"no-image-placeholder\">\n          <i class=\"fa-solid fa-triangle-exclamation fa-3x\"></i>\n          <p>{{ imageError }}</p>\n          <div class=\"image-error-actions\">\n            <button\n              v-if=\"hasContentId\"\n              @click=\"generateImageForContent\"\n              class=\"btn btn-primary mt-2\"\n            >\n              <i class=\"fa-solid fa-image\"></i> Tạo hình ảnh mới\n            </button>\n            <button\n              v-if=\"hasContentId\"\n              @click=\"loadImageFromDatabase\"\n              class=\"btn btn-secondary mt-2 ms-2\"\n            >\n              <i class=\"fa-solid fa-rotate\"></i> Tải lại hình ảnh\n            </button>\n          </div>\n        </div>\n        <img\n          v-else-if=\"imageUrl\"\n          :src=\"imageUrl\"\n          alt=\"Generated image\"\n          class=\"img-fluid rounded mb-3\"\n          @error=\"handleImageError\"\n          @load=\"handleImageLoad\"\n        />\n        <div v-else class=\"no-image-placeholder\">\n          <i class=\"fa-solid fa-image fa-5x\"></i>\n          <p>Không có hình ảnh</p>\n          <button\n            v-if=\"hasContentId\"\n            @click=\"generateImageForContent\"\n            class=\"btn btn-primary mt-3\"\n          >\n            <i class=\"fa-solid fa-image\"></i> Tạo hình ảnh\n          </button>\n        </div>\n\n        <div class=\"image-actions\">\n          <button\n            v-if=\"!imageLoading && !imageUrl && contentId\"\n            class=\"btn btn-success mt-2\"\n            @click=\"generateImageForContent\"\n          >\n            <i class=\"fas fa-magic me-1\"></i>\n            Generate Image\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"final-actions\">\n      <div class=\"action-buttons\">\n        <div class=\"additional-actions\">\n          <button class=\"btn btn-outline-primary\" @click=\"exportContent\">\n            <i class=\"fas fa-file-export me-1\"></i>\n            Export\n          </button>\n          <button class=\"btn btn-outline-primary\" @click=\"shareContent\">\n            <i class=\"fas fa-share-alt me-1\"></i>\n            Share\n          </button>\n          <button class=\"btn btn-outline-primary\" @click=\"downloadPDF\">\n            <i class=\"fas fa-file-pdf me-1\"></i>\n            Download PDF\n          </button>\n        </div>\n      </div>\n      <div class=\"navigation-buttons\">\n        <button\n          v-if=\"!fromDashboard\"\n          class=\"btn btn-light\"\n          @click=\"$emit('prev')\"\n        >\n          <i class=\"fas fa-arrow-left me-1\"></i>\n          Previous Step\n        </button>\n        <button v-else class=\"btn btn-light\" @click=\"$emit('go-to-dashboard')\">\n          <i class=\"fas fa-home me-1\"></i>\n          Back to Dashboard\n        </button>\n        <button class=\"btn btn-info\" @click=\"$emit('go-to-dashboard')\">\n          <i class=\"fas fa-home me-1\"></i>\n          Dashboard\n        </button>\n        <button class=\"btn btn-success\" @click=\"$emit('new')\">\n          <i class=\"fas fa-plus me-1\"></i>\n          Create New\n        </button>\n      </div>\n    </div>\n    <div v-if=\"saveMessage\" :class=\"['save-message', saveStatus]\">\n      {{ saveMessage }}\n    </div>\n\n    <!-- Toast Messages Container -->\n    <div class=\"toast-container\">\n      <div\n        v-for=\"toast in toasts\"\n        :key=\"toast.id\"\n        :class=\"['toast-message', `toast-${toast.type}`]\"\n        @click=\"removeToast(toast.id)\"\n      >\n        <span>{{ toast.message }}</span>\n        <button class=\"toast-close-btn\">&times;</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"FinalStep\",\n  props: {\n    content: {\n      type: String,\n      required: true,\n    },\n    generatedImage: {\n      type: String,\n      default: null,\n    },\n    projectId: {\n      type: String,\n      default: \"\",\n    },\n    projectTitle: {\n      type: String,\n      default: \"Content Project\",\n    },\n    projectDescription: {\n      type: String,\n      default: \"\",\n    },\n    contentId: {\n      type: String,\n      default: \"\",\n    },\n    fromDashboard: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      projectStatus: \"in_progress\",\n      loading: false,\n      error: null,\n      saveLoading: false,\n      saveMessage: null,\n      saveStatus: \"success\",\n      imageLoading: false,\n      imageError: null,\n      localImage: this.generatedImage,\n      toasts: [],\n    };\n  },\n  computed: {\n    apiEndpoint() {\n      return process.env.VUE_APP_API_URL || \"http://localhost:3001/api\";\n    },\n    hasProjectId() {\n      return this.projectId && this.projectId.length > 0;\n    },\n    hasContentId() {\n      return this.contentId && this.contentId.length > 0;\n    },\n    formattedContent() {\n      if (!this.content) return \"\";\n\n      // Tạo định dạng HTML cho nội dung\n      const formatted = this.content\n        // Thay thế dòng trống bằng thẻ đoạn\n        .replace(/\\n\\s*\\n/g, \"</p><p>\")\n        // Thay thế dòng mới đơn bằng thẻ br\n        .replace(/\\n/g, \"<br>\")\n        // Bọc toàn bộ nội dung trong thẻ p\n        .replace(/^(.+)$/, \"<p>$1</p>\");\n\n      return formatted;\n    },\n    imageUrl() {\n      // First, use localImage from data if available\n      if (this.localImage) {\n        console.log(\n          \"Using local image:\",\n          this.localImage.substring(0, 50) + \"...\"\n        );\n\n        // Ensure the URL is properly formatted for deployment\n        return this.ensureAbsoluteUrl(this.localImage);\n      }\n\n      // Next, try to use generated image from props\n      if (this.generatedImage) {\n        console.log(\n          \"Using generated image from props:\",\n          typeof this.generatedImage === \"string\"\n            ? this.generatedImage.substring(0, 50) + \"...\"\n            : \"object\"\n        );\n\n        // Handle string URLs (including data URLs)\n        if (typeof this.generatedImage === \"string\") {\n          return this.ensureAbsoluteUrl(this.generatedImage);\n        }\n\n        // Handle object format\n        if (\n          typeof this.generatedImage === \"object\" &&\n          this.generatedImage !== null\n        ) {\n          if (\"image\" in this.generatedImage) {\n            return this.ensureAbsoluteUrl(this.generatedImage.image);\n          }\n          if (\"imageUrl\" in this.generatedImage) {\n            return this.ensureAbsoluteUrl(this.generatedImage.imageUrl);\n          }\n        }\n      }\n\n      return null;\n    },\n  },\n  created() {\n    console.log(\"FinalStep created\");\n    console.log(\"generatedImage prop:\", this.generatedImage);\n    console.log(\"contentId prop:\", this.contentId);\n\n    // Set initial local image from props\n    if (this.generatedImage) {\n      this.localImage = this.generatedImage;\n    } else {\n      this.localImage = null;\n    }\n\n    if (this.hasProjectId) {\n      this.fetchProjectStatus();\n    }\n\n    // Always fetch content image if we have contentId, regardless of generatedImage prop\n    if (this.hasContentId) {\n      this.fetchContentImage();\n    }\n  },\n  mounted() {\n    console.log(\"FinalStep mounted, contentId:\", this.contentId);\n    console.log(\"From dashboard:\", this.fromDashboard);\n    console.log(\"Generated image from props:\", !!this.generatedImage);\n\n    // Thêm giá trị mặc định cho toasts\n    if (!this.toasts) {\n      this.toasts = [];\n    }\n\n    // Tải lại dữ liệu hình ảnh từ cơ sở dữ liệu nếu có contentId\n    if (this.contentId && (!this.generatedImage || this.fromDashboard)) {\n      console.log(\"Loading image data from database...\");\n      this.loadImageFromDatabase();\n    }\n  },\n  methods: {\n    async fetchProjectStatus() {\n      try {\n        if (!this.hasProjectId) return;\n\n        const response = await axios.get(\n          `${this.apiEndpoint}/projects/${this.projectId}`\n        );\n        if (response.data.success) {\n          this.projectStatus = response.data.data.status;\n        }\n      } catch (error) {\n        console.error(\"Error fetching project status:\", error);\n        this.error = \"Could not fetch project status\";\n      }\n    },\n    async fetchContentImage() {\n      if (!this.contentId) {\n        console.log(\"No contentId available to fetch image\");\n        this.localImage = null;\n        return;\n      }\n\n      try {\n        console.log(\n          `Starting to fetch image for content ID: ${this.contentId}`\n        );\n        this.imageLoading = true;\n        this.imageError = null;\n\n        // Use a timeout to prevent hanging requests\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), 15000); // 15 second timeout\n\n        const response = axios\n          .get(`/api/content/contents/${this.contentId}`, {\n            signal: controller.signal,\n          })\n          .then((response) => {\n            clearTimeout(timeoutId);\n\n            console.log(\n              `Content API response for ID ${this.contentId}:`,\n              response.data\n            );\n\n            if (response.data && response.data.success) {\n              const contentData = response.data.data;\n\n              console.log(\"Full content data:\", contentData);\n\n              if (contentData && contentData.imageUrl) {\n                console.log(\n                  `Found image URL for content ${this.contentId}:`,\n                  contentData.imageUrl\n                );\n\n                // Check filename pattern first - this is highest priority\n                const imageFilenameMatch =\n                  contentData.imageUrl.match(/image_\\d+\\.png/);\n                if (imageFilenameMatch) {\n                  const filename = imageFilenameMatch[0];\n                  console.log(\n                    `Detected image filename pattern directly in content data: ${filename}`\n                  );\n\n                  // Create absolute URL to image uploads endpoint\n                  const directUrl = `${window.location.origin}/api/image/uploads/${filename}`;\n                  console.log(\"Created direct URL to image:\", directUrl);\n\n                  this.localImage = directUrl;\n                  this.$emit(\"update:image\", directUrl);\n                  this.imageLoading = false;\n                  return;\n                }\n\n                // Kiểm tra đường dẫn hình ảnh\n                if (\n                  contentData.imageUrl.includes(\"undefined\") ||\n                  contentData.imageUrl === \"null\" ||\n                  contentData.imageUrl === \"\"\n                ) {\n                  console.error(\n                    \"Invalid image URL detected:\",\n                    contentData.imageUrl\n                  );\n                  this.imageError = \"URL hình ảnh không hợp lệ\";\n                  this.imageLoading = false;\n                  return;\n                }\n\n                // Store the original URL\n                const originalUrl = contentData.imageUrl;\n                console.log(\"Original image URL:\", originalUrl);\n\n                // Try alternative methods for loading image\n                this.tryAlternativeImageUrls(originalUrl);\n              } else {\n                console.log(`No image found for content ${this.contentId}`);\n                this.localImage = null;\n                this.imageLoading = false;\n                this.imageError = \"Không tìm thấy hình ảnh trong cơ sở dữ liệu\";\n              }\n            } else {\n              console.warn(\"API did not return success:\", response.data);\n              this.localImage = null;\n              this.imageLoading = false;\n              this.imageError = \"Lỗi khi lấy dữ liệu nội dung\";\n            }\n          })\n          .catch((error) => {\n            clearTimeout(timeoutId);\n            console.error(\"Error fetching content image:\", error);\n\n            if (error.name === \"AbortError\") {\n              this.imageError = \"Request timed out when loading image\";\n            } else {\n              this.imageError = \"Failed to load image: \" + error.message;\n            }\n\n            this.localImage = null;\n            this.imageLoading = false;\n          });\n      } catch (error) {\n        console.error(\"Error in fetchContentImage:\", error);\n        this.imageError = `Lỗi: ${error.message}`;\n        this.localImage = null;\n        this.imageLoading = false;\n      }\n    },\n    async markAsFinished() {\n      try {\n        if (!this.hasProjectId) {\n          alert(\"Cannot update status: No project ID available\");\n          return;\n        }\n\n        this.loading = true;\n        const response = await axios.patch(\n          `${this.apiEndpoint}/projects/${this.projectId}/status`,\n          {\n            status: \"finished\",\n          }\n        );\n\n        if (response.data.success) {\n          this.projectStatus = \"finished\";\n        }\n      } catch (error) {\n        console.error(\"Error updating project status:\", error);\n        alert(\"Failed to update project status: \" + error.message);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async markAsInProgress() {\n      try {\n        if (!this.hasProjectId) {\n          alert(\"Cannot update status: No project ID available\");\n          return;\n        }\n\n        this.loading = true;\n        const response = await axios.patch(\n          `${this.apiEndpoint}/projects/${this.projectId}/status`,\n          {\n            status: \"in_progress\",\n          }\n        );\n\n        if (response.data.success) {\n          this.projectStatus = \"in_progress\";\n        }\n      } catch (error) {\n        console.error(\"Error updating project status:\", error);\n        alert(\"Failed to update project status: \" + error.message);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async saveContent() {\n      try {\n        if (!this.hasContentId) {\n          this.saveMessage = \"No content ID available. Cannot save.\";\n          this.saveStatus = \"error\";\n          return;\n        }\n\n        this.saveLoading = true;\n        this.saveMessage = null;\n\n        const response = await axios.put(\n          `${this.apiEndpoint}/content/contents/${this.contentId}`,\n          {\n            generatedContent: this.content,\n          }\n        );\n\n        if (response.data.success) {\n          this.saveMessage = \"Content saved successfully!\";\n          this.saveStatus = \"success\";\n          // Emit event to update parent content\n          this.$emit(\"update:content\", this.content);\n        } else {\n          throw new Error(response.data.error || \"Unknown error occurred\");\n        }\n      } catch (error) {\n        console.error(\"Error saving content:\", error);\n        this.saveMessage = \"Failed to save content: \" + error.message;\n        this.saveStatus = \"error\";\n      } finally {\n        this.saveLoading = false;\n\n        // Clear message after 3 seconds\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n      }\n    },\n    exportContent() {\n      try {\n        // Tạo dữ liệu để export\n        const exportData = {\n          title: this.projectTitle || \"Untitled Content\",\n          content: this.content,\n          image: this.imageUrl,\n          createdAt: new Date().toISOString(),\n          projectInfo: {\n            id: this.projectId,\n            title: this.projectTitle,\n            description: this.projectDescription,\n          },\n        };\n\n        // Tạo JSON string\n        const dataStr = JSON.stringify(exportData, null, 2);\n\n        // Tạo blob để download\n        const blob = new Blob([dataStr], { type: \"application/json\" });\n        const url = URL.createObjectURL(blob);\n\n        // Tạo link và kích hoạt download\n        const a = document.createElement(\"a\");\n        a.download = `${this.projectTitle || \"content\"}_export.json`;\n        a.href = url;\n        a.click();\n\n        // Giải phóng URL object\n        URL.revokeObjectURL(url);\n\n        this.saveMessage = \"Content exported successfully!\";\n        this.saveStatus = \"success\";\n\n        // Clear message after 3 seconds\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n      } catch (error) {\n        console.error(\"Error exporting content:\", error);\n        this.saveMessage = \"Failed to export content: \" + error.message;\n        this.saveStatus = \"error\";\n\n        // Clear message after 3 seconds\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n      }\n    },\n    shareContent() {\n      // Xử lý chia sẻ nội dung - có thể thông qua email hoặc mạng xã hội\n      try {\n        // Kiểm tra nếu Web Share API được hỗ trợ\n        if (navigator.share) {\n          navigator\n            .share({\n              title: this.projectTitle || \"My Content\",\n              text: `Check out my content: ${this.projectTitle || \"Content\"}`,\n              url: window.location.href,\n            })\n            .then(() => {\n              this.saveMessage = \"Content shared successfully!\";\n              this.saveStatus = \"success\";\n            })\n            .catch((error) => {\n              throw error;\n            });\n        } else {\n          // Fallback - copy URL vào clipboard\n          navigator.clipboard.writeText(window.location.href).then(() => {\n            this.saveMessage = \"URL copied to clipboard!\";\n            this.saveStatus = \"success\";\n          });\n        }\n\n        // Clear message after 3 seconds\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n      } catch (error) {\n        console.error(\"Error sharing content:\", error);\n        this.saveMessage = \"Failed to share content: \" + error.message;\n        this.saveStatus = \"error\";\n\n        // Clear message after 3 seconds\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n      }\n    },\n    downloadPDF() {\n      try {\n        // Thông báo cho người dùng rằng chức năng đang được phát triển\n        this.saveMessage = \"PDF download feature will be available soon.\";\n        this.saveStatus = \"success\";\n\n        // Xóa thông báo sau 3 giây\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n\n        // NOTE: Chức năng này sẽ được triển khai trong bản cập nhật tới\n        // Sử dụng thư viện như jsPDF hoặc html2pdf.js để tạo PDF từ nội dung\n      } catch (error) {\n        console.error(\"Error downloading PDF:\", error);\n        this.saveMessage = \"Failed to download PDF: \" + error.message;\n        this.saveStatus = \"error\";\n\n        // Clear message after 3 seconds\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n      }\n    },\n    goToDashboard() {\n      this.$emit(\"go-to-dashboard\");\n    },\n    async generateImageForContent() {\n      try {\n        this.imageLoading = true;\n        this.imageError = null;\n\n        // Hiển thị thông báo đang xử lý\n        this.showToast(\"Đang chuẩn bị tạo hình ảnh cho nội dung...\", \"info\");\n\n        if (!this.contentId) {\n          throw new Error(\"Không có ID nội dung để tạo hình ảnh\");\n        }\n\n        // Kiểm tra xem có nội dung không\n        if (!this.content || this.content.trim().length === 0) {\n          this.showToast(\"Không thể tạo hình ảnh: Nội dung trống\", \"error\");\n          throw new Error(\"Nội dung trống, không thể tạo hình ảnh\");\n        }\n\n        console.log(`Generating image for content ID: ${this.contentId}`);\n        console.log(`Content length: ${this.content.length} characters`);\n\n        // Bước 1: Tạo prompt từ nội dung\n        console.log(\"Step 1: Generating prompt from content\");\n        const promptResponse = await axios.post(\n          `/api/content/contents/generate-prompt`,\n          {\n            contentId: this.contentId,\n            style: \"Realistic\",\n            template: `Generate a [STYLE] image of [SUBJECT], featuring [KEY DETAILS]. Style: [ART STYLE/MEDIUM], color palette: [COLORS], lighting: [LIGHTING], composition: [COMPOSITION]. Additional effects: [EFFECTS]. Keep the overall mood [MOOD]. Render in Kandinsky 2.2 with high detail, resolution [RESOLUTION].`,\n            content: this.content,\n          },\n          {\n            timeout: 45000, // 45 seconds timeout for prompt generation\n          }\n        );\n\n        if (!promptResponse.data.success) {\n          throw new Error(\n            promptResponse.data.error || \"Lỗi khi tạo mô tả hình ảnh\"\n          );\n        }\n\n        const generatedPrompt = promptResponse.data.prompt;\n        console.log(\n          \"Generated prompt:\",\n          generatedPrompt.substring(0, 100) + \"...\"\n        );\n\n        // Hiển thị thông báo prompt đã được tạo\n        this.showToast(\n          \"Đã tạo mô tả hình ảnh, đang tạo hình ảnh...\",\n          \"success\"\n        );\n\n        // Bước 2: Tạo hình ảnh từ prompt\n        const imageResponse = await axios.post(\n          `/api/image/generate`,\n          {\n            prompt: generatedPrompt,\n            style: \"Realistic\",\n            width: 512,\n            height: 512,\n            num_inference_steps: 30,\n          },\n          {\n            timeout: 180000, // 3 minutes timeout for image generation\n          }\n        );\n\n        if (!imageResponse.data.success) {\n          throw new Error(\n            imageResponse.data.error || \"Lỗi khi tạo hình ảnh từ mô tả\"\n          );\n        }\n\n        const imageUrl = `/api/content/contents/${this.contentId}/images/${imageResponse.data.filename}`;\n\n        // Bước 3: Cập nhật URL hình ảnh vào nội dung\n        const updateResponse = await axios.put(\n          `/api/content/contents/${this.contentId}`,\n          { imageUrl }\n        );\n\n        if (!updateResponse.data.success) {\n          throw new Error(\n            updateResponse.data.error || \"Lỗi khi cập nhật URL hình ảnh\"\n          );\n        }\n\n        // Cập nhật URL hình ảnh vào local state\n        this.localImage = imageUrl;\n        this.$emit(\"update:image\", imageUrl);\n\n        // Hiển thị thông báo thành công\n        this.showToast(\"Đã tạo hình ảnh thành công!\", \"success\");\n      } catch (error) {\n        console.error(\"Error generating image for content:\", error);\n\n        let errorMessage = \"Lỗi không xác định\";\n\n        // Check for API response error\n        if (error.response) {\n          console.log(\"API response error:\", error.response.data);\n\n          // Handle specific error messages from server\n          if (error.response.data && error.response.data.error) {\n            errorMessage = error.response.data.error;\n\n            // Specific checks for common errors\n            if (errorMessage.includes(\"Missing required field\")) {\n              errorMessage =\n                \"Thiếu trường dữ liệu cần thiết. Vui lòng thử lại.\";\n              console.log(\"Content availability:\", !!this.content);\n              console.log(\"ContentId availability:\", !!this.contentId);\n\n              // Try retrieving the content again if missing\n              if (\n                this.contentId &&\n                (!this.content || this.content.trim().length === 0)\n              ) {\n                this.showToast(\"Đang thử tải lại nội dung...\", \"info\");\n                try {\n                  const contentResponse = await axios.get(\n                    `/api/content/contents/${this.contentId}`\n                  );\n                  if (\n                    contentResponse.data.success &&\n                    contentResponse.data.data.generatedContent\n                  ) {\n                    // Update the local content\n                    this.$emit(\n                      \"update:content\",\n                      contentResponse.data.data.generatedContent\n                    );\n                    this.showToast(\n                      \"Đã tải lại nội dung, vui lòng thử lại\",\n                      \"info\"\n                    );\n                  }\n                } catch (reloadError) {\n                  console.error(\"Error reloading content:\", reloadError);\n                }\n              }\n            }\n          }\n        } else if (error.message) {\n          errorMessage = error.message;\n        }\n\n        this.imageError = `Lỗi khi tạo hình ảnh: ${errorMessage}`;\n\n        // Hiển thị thông báo lỗi\n        this.showToast(`Lỗi: ${errorMessage}`, \"error\");\n\n        // Nếu lỗi do timeout\n        if (error.message.includes(\"timeout\")) {\n          this.showToast(\n            \"Quá thời gian chờ phản hồi. Vui lòng thử lại sau.\",\n            \"error\"\n          );\n        }\n      } finally {\n        this.imageLoading = false;\n      }\n    },\n    showToast(message, type = \"info\") {\n      if (!this.toasts) this.toasts = [];\n\n      const id = Date.now();\n      this.toasts.push({ id, message, type });\n\n      // Tự động xóa sau 5 giây\n      setTimeout(() => {\n        this.removeToast(id);\n      }, 5000);\n    },\n    removeToast(id) {\n      if (this.toasts) {\n        this.toasts = this.toasts.filter((toast) => toast.id !== id);\n      }\n    },\n    ensureAbsoluteUrl(url) {\n      if (!url) return null;\n\n      // Log URL for debugging\n      console.log(`Resolving URL: ${url}`);\n\n      // Return as-is if already absolute or data URL\n      if (\n        url.startsWith(\"http://\") ||\n        url.startsWith(\"https://\") ||\n        url.startsWith(\"data:\")\n      ) {\n        console.log(`URL is already absolute: ${url}`);\n        return url;\n      }\n\n      // Check if URL contains image_XXXXXXXX.png pattern (saved image format)\n      const imageFilenameMatch = url.match(/image_\\d+\\.png/);\n      if (imageFilenameMatch) {\n        // Extract filename\n        const filename = imageFilenameMatch[0];\n        console.log(`Detected image filename pattern: ${filename}`);\n        // Use correct endpoint /api/image/uploads/:fileName\n        const result = `${window.location.origin}/api/image/uploads/${filename}`;\n        console.log(`Created direct URL for image file: ${result}`);\n        return result;\n      }\n\n      // Special handling for uploads directory\n      if (url.includes(\"/uploads/\") || url.includes(\"uploads/\")) {\n        // Extract filename from path\n        const filename = url.split(\"/\").pop();\n        console.log(`Extracted filename from uploads path: ${filename}`);\n        // Use correct endpoint /api/image/uploads/:fileName\n        const result = `${window.location.origin}/api/image/uploads/${filename}`;\n        console.log(`Created uploads URL: ${result}`);\n        return result;\n      }\n\n      // If starts with /api, add domain\n      if (url.startsWith(\"/api\")) {\n        const result = `${window.location.origin}${url}`;\n        console.log(`Created API URL: ${result}`);\n        return result;\n      }\n\n      // If starts with server/ or /server/\n      if (url.startsWith(\"server/\") || url.startsWith(\"/server/\")) {\n        const result = `${window.location.origin}/api/${url.replace(\n          /^(\\/)?server\\//,\n          \"\"\n        )}`;\n        console.log(`Created server path URL: ${result}`);\n        return result;\n      }\n\n      // If doesn't start with / but is still a relative path, add /\n      if (!url.startsWith(\"/\")) {\n        const result = `${window.location.origin}/${url}`;\n        console.log(`Created relative path URL: ${result}`);\n        return result;\n      }\n\n      // Default case, assume relative to root\n      const result = `${window.location.origin}${url}`;\n      console.log(`Created root-relative URL: ${result}`);\n      return result;\n    },\n    handleImageError(event) {\n      console.error(\"Image loading error:\", event);\n      this.imageError = \"Failed to load image\";\n\n      // Try to debug and fix the image URL\n      if (this.localImage) {\n        this.debugImageUrl(this.localImage);\n      } else if (this.generatedImage) {\n        this.debugImageUrl(this.generatedImage);\n      }\n    },\n    debugImageUrl(originalUrl) {\n      console.log(\"Debugging image URL:\", originalUrl);\n\n      // Kiểm tra nhiều định dạng URL khác nhau\n      const possibleUrls = [];\n\n      if (typeof originalUrl !== \"string\") {\n        console.error(\"Original URL is not a string:\", originalUrl);\n        return;\n      }\n\n      // Lấy tên tệp nếu có\n      const filename = originalUrl.split(\"/\").pop();\n      console.log(\"Extracted filename:\", filename);\n\n      // Đường dẫn trực tiếp đến API endpoint (ưu tiên cao nhất)\n      if (filename) {\n        possibleUrls.push(`/api/image/uploads/${filename}`);\n        possibleUrls.push(\n          `${window.location.origin}/api/image/uploads/${filename}`\n        );\n      }\n\n      if (originalUrl.includes(\"uploads/\")) {\n        // Các định dạng khác cũng được thử\n        possibleUrls.push(`/server/uploads/${filename}`);\n        possibleUrls.push(`/uploads/${filename}`);\n      }\n\n      // Thử URL gốc với tên miền\n      if (!originalUrl.startsWith(\"http\") && !originalUrl.startsWith(\"data:\")) {\n        possibleUrls.push(\n          `${window.location.origin}${\n            originalUrl.startsWith(\"/\") ? \"\" : \"/\"\n          }${originalUrl}`\n        );\n      }\n\n      // Thêm URL gốc vào danh sách (nếu chưa có)\n      if (!possibleUrls.includes(originalUrl)) {\n        possibleUrls.push(originalUrl);\n      }\n\n      console.log(\"Trying alternate URLs:\", possibleUrls);\n\n      // Thử tải mỗi URL\n      let successFound = false;\n\n      possibleUrls.forEach((url, index) => {\n        setTimeout(() => {\n          // Skip if we already found a working URL\n          if (successFound) return;\n\n          const img = new Image();\n          img.onload = () => {\n            console.log(`Success with URL: ${url}`);\n            successFound = true;\n            this.localImage = url;\n            this.$emit(\"update:image\", url);\n            this.imageError = null;\n            this.imageLoading = false;\n          };\n          img.onerror = () => {\n            console.log(`Failed with URL: ${url}`);\n\n            // Nếu đây là URL cuối cùng và tất cả đều thất bại, hiển thị nút tạo hình ảnh mới\n            if (index === possibleUrls.length - 1 && !successFound) {\n              console.log(\"All URLs failed, showing generate button\");\n              this.imageError =\n                \"Không thể tải hình ảnh. Bạn có thể tạo hình ảnh mới.\";\n            }\n          };\n          img.src = url;\n        }, index * 100);\n      });\n    },\n    handleImageLoad() {\n      console.log(\"Image loaded successfully\");\n      this.imageError = null;\n    },\n    loadImageFromDatabase() {\n      if (!this.contentId) return;\n\n      this.imageLoading = true;\n      this.imageError = null;\n\n      console.log(`Fetching image data for content ID: ${this.contentId}`);\n\n      axios\n        .get(`/api/content/contents/${this.contentId}`)\n        .then((response) => {\n          if (response.data && response.data.success && response.data.data) {\n            const content = response.data.data;\n\n            if (content.imageUrl) {\n              console.log(`Found image URL in database: ${content.imageUrl}`);\n\n              // Check for image_XXXXXXXX.png pattern first\n              const imageFilenameMatch =\n                content.imageUrl.match(/image_\\d+\\.png/);\n              if (imageFilenameMatch) {\n                const filename = imageFilenameMatch[0];\n                console.log(\n                  `Detected image filename pattern in database: ${filename}`\n                );\n\n                // Create direct URL to image uploads endpoint\n                const directUrl = `${window.location.origin}/api/image/uploads/${filename}`;\n                console.log(\n                  \"Created direct URL to image from database:\",\n                  directUrl\n                );\n\n                this.localImage = directUrl;\n                this.$emit(\"update:image\", directUrl);\n                this.imageError = null;\n                this.imageLoading = false;\n\n                // Show success message\n                this.showToast(\"Đã tải hình ảnh thành công\", \"success\");\n                return;\n              }\n\n              // Try standard URL processing\n              const formattedUrl = this.ensureAbsoluteUrl(content.imageUrl);\n              this.localImage = formattedUrl;\n              this.$emit(\"update:image\", formattedUrl);\n\n              // Show success toast\n              this.showToast(\"Đã tải hình ảnh thành công\", \"success\");\n            } else {\n              console.log(\"No image URL found in database\");\n              this.localImage = null;\n              this.imageError = \"Không tìm thấy hình ảnh trong cơ sở dữ liệu\";\n            }\n          } else {\n            console.error(\"Error fetching content:\", response.data);\n            this.imageError = \"Lỗi khi tải dữ liệu nội dung\";\n          }\n        })\n        .catch((error) => {\n          console.error(\"Error fetching content:\", error);\n          this.imageError = `Lỗi kết nối: ${error.message}`;\n        })\n        .finally(() => {\n          this.imageLoading = false;\n        });\n    },\n    // Thêm hàm mới để thử các phương pháp thay thế khi tải hình ảnh\n    tryAlternativeImageUrls(originalUrl) {\n      try {\n        console.log(\"Trying alternative methods to load image:\", originalUrl);\n\n        // First, look for image_XXXXXXXX.png pattern\n        const imageFilenameMatch = originalUrl.match(/image_\\d+\\.png/);\n        if (imageFilenameMatch) {\n          const filename = imageFilenameMatch[0];\n          console.log(`Found image filename pattern: ${filename}`);\n\n          // Create direct URL to image uploads endpoint\n          const directUrl = `${window.location.origin}/api/image/uploads/${filename}`;\n          console.log(\"Created direct URL to image:\", directUrl);\n\n          // Update URL immediately\n          this.localImage = directUrl;\n          this.$emit(\"update:image\", directUrl);\n          this.imageLoading = false;\n\n          // Still try loading to confirm\n          const img = new Image();\n          img.onload = () => {\n            console.log(\"Image loaded successfully from direct URL\");\n            this.imageError = null;\n          };\n          img.onerror = () => {\n            console.error(\"Image failed to load from direct URL\");\n            this.imageError = \"Không thể tải hình ảnh từ server\";\n            this.debugImageUrl(originalUrl);\n          };\n          img.src = directUrl;\n          return;\n        }\n\n        // Try to load the original URL image first\n        const img = new Image();\n        img.onload = () => {\n          console.log(\"Image loaded successfully from original URL\");\n          this.localImage = originalUrl;\n          this.$emit(\"update:image\", originalUrl);\n          this.imageLoading = false;\n        };\n\n        img.onerror = async () => {\n          console.log(\n            \"Failed to load image from original URL, trying alternate paths\"\n          );\n\n          // Try with /api prefix for server uploads\n          if (originalUrl.includes(\"uploads/\")) {\n            const uploadPathMatch = originalUrl.match(/(uploads\\/.*$)/);\n            if (uploadPathMatch && uploadPathMatch[1]) {\n              const apiUrl = `/api/image/${uploadPathMatch[1]}`;\n              console.log(\"Trying with API URL:\", apiUrl);\n\n              // Check if this URL works\n              const altImg = new Image();\n              altImg.onload = () => {\n                console.log(\"Image loaded successfully from API URL\");\n                this.localImage = apiUrl;\n                this.$emit(\"update:image\", apiUrl);\n                this.imageLoading = false;\n              };\n\n              altImg.onerror = () => {\n                console.log(\"Failed to load image from API URL\");\n\n                // Try one more time with absolute URL\n                const absoluteApiUrl = `${window.location.origin}${apiUrl}`;\n                console.log(\"Trying with absolute API URL:\", absoluteApiUrl);\n\n                const finalImg = new Image();\n                finalImg.onload = () => {\n                  console.log(\n                    \"Image loaded successfully from absolute API URL\"\n                  );\n                  this.localImage = absoluteApiUrl;\n                  this.$emit(\"update:image\", absoluteApiUrl);\n                  this.imageLoading = false;\n                };\n\n                finalImg.onerror = () => {\n                  console.log(\"All API URL attempts failed\");\n                  this.imageError = \"Không thể tải hình ảnh từ server\";\n                  this.localImage = null;\n                  this.imageLoading = false;\n\n                  // Final attempt - debug URL\n                  this.debugImageUrl(originalUrl);\n                };\n\n                finalImg.src = absoluteApiUrl;\n              };\n\n              altImg.src = apiUrl;\n            } else {\n              this.imageError = \"Invalid image path format\";\n              this.localImage = null;\n              this.imageLoading = false;\n\n              // Final attempt - debug URL\n              this.debugImageUrl(originalUrl);\n            }\n          } else {\n            this.imageError = \"Image not found\";\n            this.localImage = null;\n            this.imageLoading = false;\n\n            // Final attempt - debug URL\n            this.debugImageUrl(originalUrl);\n          }\n        };\n\n        // Ensure the URL is properly formatted\n        img.src = this.ensureAbsoluteUrl(originalUrl);\n      } catch (imgError) {\n        console.error(\"Error checking image:\", imgError);\n        this.localImage = originalUrl;\n        this.$emit(\"update:image\", originalUrl);\n        this.imageLoading = false;\n      }\n    },\n  },\n  watch: {\n    generatedImage: {\n      immediate: true,\n      handler(newValue, oldValue) {\n        if (newValue !== oldValue) {\n          console.log(\"generatedImage changed:\", newValue);\n\n          // If we get a new generatedImage value, update localImage\n          if (newValue) {\n            this.localImage = newValue;\n          }\n          // Don't clear localImage if newValue is null - we may already have a valid image\n          // from fetchContentImage\n        }\n      },\n    },\n    contentId: {\n      immediate: true,\n      handler(newValue, oldValue) {\n        if (newValue && newValue !== oldValue) {\n          console.log(\"Content ID changed from\", oldValue, \"to\", newValue);\n\n          // Only clear localImage if we're switching to a different content\n          if (oldValue) {\n            this.localImage = null;\n          }\n\n          // Always fetch the image when contentId changes\n          this.fetchContentImage();\n\n          // Tải dữ liệu hình ảnh từ cơ sở dữ liệu\n          this.loadImageFromDatabase();\n        }\n      },\n    },\n  },\n};\n</script>\n\n<style scoped>\n.step-content {\n  background: white;\n  border-radius: 12px;\n  padding: 2rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\nh2 {\n  color: #1c1c4c;\n  margin-bottom: 1.5rem;\n  text-align: center;\n  font-weight: 600;\n}\n\n.project-info {\n  background: #f8f9fa;\n  border-radius: 8px;\n  padding: 1rem;\n  margin-bottom: 2rem;\n}\n\n.project-info h3 {\n  color: #1c1c4c;\n  margin: 0 0 0.5rem 0;\n}\n\n.project-info p {\n  color: #6c757d;\n  margin: 0 0 1rem 0;\n}\n\n.project-status {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 0.5rem;\n}\n\n.status-badge {\n  font-size: 0.75rem;\n  padding: 0.25rem 0.5rem;\n  border-radius: 12px;\n  font-weight: bold;\n}\n\n.status-badge.in_progress {\n  background-color: #ecedf7;\n  color: #1c1c4c;\n}\n\n.status-badge.finished {\n  background-color: #e8f5e9;\n  color: #28a745;\n}\n\n.status-button {\n  background: transparent;\n  border: 1px solid #1c1c4c;\n  color: #1c1c4c;\n  padding: 0.25rem 0.75rem;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 0.8rem;\n  transition: all 0.3s ease;\n}\n\n.status-button:hover {\n  background: #ecedf7;\n}\n\n.final-content {\n  display: grid;\n  gap: 2rem;\n  margin-bottom: 2rem;\n}\n\n.final-content h3 {\n  margin-bottom: 1rem;\n  color: #1c1c4c;\n  font-weight: 600;\n}\n\n.content-box {\n  white-space: pre-wrap;\n  line-height: 1.6;\n  font-family: \"Arial\", sans-serif;\n  padding: 1.5rem;\n  background: white;\n  border-radius: 8px;\n  border: 1px solid #e9ecef;\n  max-height: 400px;\n  overflow-y: auto;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n}\n\n.content-box p {\n  margin-bottom: 1rem;\n}\n\n.content-box h1,\n.content-box h2,\n.content-box h3,\n.content-box h4,\n.content-box h5,\n.content-box h6 {\n  margin-top: 1.5rem;\n  margin-bottom: 1rem;\n  color: #1c1c4c;\n}\n\n.final-image-section {\n  background: #f8f9fa;\n  border-radius: 8px;\n  padding: 2rem;\n  margin-bottom: 2rem;\n}\n\n.final-image-section h3 {\n  margin-bottom: 1.5rem;\n  color: #1c1c4c;\n  font-weight: 600;\n}\n\n.image-section {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.image-loading {\n  width: 100%;\n  height: 200px;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.loading-text {\n  color: #6c757d;\n  font-size: 0.9rem;\n  text-align: center;\n}\n\n.image-section img {\n  max-width: 100%;\n  max-height: 300px;\n  object-fit: contain;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.no-image-placeholder {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 200px;\n  color: #6c757d;\n  background-color: #f8f9fa;\n  border-radius: 6px;\n  margin-bottom: 1rem;\n}\n\n.no-image-placeholder p {\n  margin-top: 0.5rem;\n  font-size: 0.9rem;\n}\n\n.image-actions {\n  margin-top: 1rem;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n}\n\n.final-actions {\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n}\n\n.additional-actions {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n  justify-content: center;\n}\n\n.navigation-buttons {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  justify-content: center;\n}\n\n.action-buttons {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n  justify-content: center;\n}\n\n.btn {\n  min-width: 120px;\n  text-align: center;\n  padding: 0.75rem 1.25rem;\n  border-radius: 6px;\n  font-size: 0.9rem;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n}\n\n.btn-primary {\n  background: #1c1c4c;\n  color: white;\n  border: none;\n}\n\n.btn-primary:hover {\n  background: #2a2a6c;\n}\n\n.btn-outline-primary {\n  background: transparent;\n  border: 1px solid #1c1c4c;\n  color: #1c1c4c;\n}\n\n.btn-outline-primary:hover {\n  background: #ecedf7;\n}\n\n.btn-light {\n  background: white;\n  color: #1c1c4c;\n  border: 1px solid #1c1c4c;\n}\n\n.btn-light:hover {\n  background: #f8f9fa;\n}\n\n.btn-info {\n  background: white;\n  color: #1c1c4c;\n  border: 1px solid #1c1c4c;\n}\n\n.btn-info:hover {\n  background: #f8f9fa;\n}\n\n.btn-success {\n  background: #1c1c4c;\n  color: white;\n  border: none;\n}\n\n.btn-success:hover {\n  background: #2a2a6c;\n}\n\n.error-message {\n  color: #dc3545;\n  font-size: 0.9rem;\n  margin-top: 0.5rem;\n}\n\n.project-info.warning {\n  background-color: #fff3cd;\n  border: 1px solid #ffeeba;\n  color: #856404;\n}\n\n.status-button:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.save-message {\n  margin-top: 1rem;\n  padding: 0.75rem;\n  border-radius: 4px;\n  text-align: center;\n  font-size: 0.9rem;\n}\n\n.save-message.success {\n  background-color: #e8f5e9;\n  color: #28a745;\n}\n\n.save-message.error {\n  background-color: #ffebee;\n  color: #dc3545;\n}\n\n@media (max-width: 768px) {\n  .action-buttons,\n  .navigation-buttons,\n  .additional-actions {\n    flex-direction: column;\n    width: 100%;\n  }\n\n  .action-buttons button,\n  .navigation-buttons button,\n  .additional-actions button {\n    width: 100%;\n    margin-bottom: 0.5rem;\n  }\n\n  .btn {\n    width: 100%;\n  }\n}\n\n/* Toast Styles */\n.toast-container {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  max-width: 350px;\n}\n\n.toast-message {\n  padding: 12px 16px;\n  border-radius: 6px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  animation: slide-in 0.3s ease-out forwards;\n  cursor: pointer;\n  color: white;\n}\n\n.toast-success {\n  background-color: #42b983;\n}\n\n.toast-error {\n  background-color: #e74c3c;\n}\n\n.toast-info {\n  background-color: #3498db;\n}\n\n.toast-close-btn {\n  background: none;\n  border: none;\n  color: white;\n  font-size: 20px;\n  cursor: pointer;\n  margin-left: 8px;\n  opacity: 0.7;\n}\n\n.toast-close-btn:hover {\n  opacity: 1;\n}\n\n@keyframes slide-in {\n  from {\n    transform: translateX(100%);\n    opacity: 0;\n  }\n  to {\n    transform: translateX(0);\n    opacity: 1;\n  }\n}\n\n.image-error-actions {\n  display: flex;\n  justify-content: center;\n  gap: 0.5rem;\n  margin-top: 0.5rem;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}