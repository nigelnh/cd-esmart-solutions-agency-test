{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, renderList as _renderList, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-408afc78\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"step-content\"\n};\nconst _hoisted_2 = {\n  class: \"editor-container\"\n};\nconst _hoisted_3 = {\n  class: \"main-content\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"editor-actions\"\n}, null, -1));\nconst _hoisted_5 = {\n  class: \"sidebar\"\n};\nconst _hoisted_6 = {\n  class: \"sidebar-section\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"SEO Score\", -1));\nconst _hoisted_8 = {\n  key: 0,\n  class: \"loading-indicator\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"spinner\"\n}, null, -1));\nconst _hoisted_10 = {\n  class: \"score-number\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"score-percent\"\n}, \"%\", -1));\nconst _hoisted_12 = {\n  class: \"score-bar\"\n};\nconst _hoisted_13 = {\n  key: 2,\n  class: \"no-data-message\"\n};\nconst _hoisted_14 = {\n  class: \"sidebar-section\"\n};\nconst _hoisted_15 = {\n  key: 0\n};\nconst _hoisted_16 = {\n  class: \"suggested-keywords\"\n};\nconst _hoisted_17 = {\n  class: \"sidebar-section\"\n};\nconst _hoisted_18 = {\n  class: \"length\"\n};\nconst _hoisted_19 = {\n  key: 0,\n  class: \"sidebar-section seo-analysis\"\n};\nconst _hoisted_20 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"SEO Analysis\", -1));\nconst _hoisted_21 = {\n  key: 0,\n  class: \"improvement-list\"\n};\nconst _hoisted_22 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"improvement-title\"\n}, \"Improvement Suggestions:\", -1));\nconst _hoisted_23 = {\n  class: \"button-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, _toDisplayString(_ctx.$t(\"creatorAI.editor.title\")), 1), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.content = $event),\n    placeholder: \"Your AI-generated content will appear here...\",\n    onInput: _cache[1] || (_cache[1] = (...args) => $options.updateContent && $options.updateContent(...args)),\n    style: {\n      \"height\": \"600px\",\n      \"resize\": \"none\"\n    }\n  }, null, 544), [[_vModelText, $data.content]]), _hoisted_4]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"div\", {\n    class: _normalizeClass([\"seo-score-box\", {\n      loading: $data.isAnalyzing || $data.isFetchingSeo\n    }])\n  }, [$data.isAnalyzing || $data.isFetchingSeo ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_hoisted_9, _createElementVNode(\"p\", null, _toDisplayString(_ctx.$t(\"creatorAI.editor.seoAnalyzing\")), 1)])) : $data.seoData ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: _normalizeClass([\"score-display\", $options.getSEOScoreClass()])\n  }, [_createElementVNode(\"div\", _hoisted_10, [_createTextVNode(_toDisplayString($data.lastSeoScore || $data.seoData.seoScore || $data.seoData.score || 0), 1), _hoisted_11]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"score-bar-fill\", $options.getSEOScoreClass()]),\n    style: _normalizeStyle({\n      width: ($data.lastSeoScore || $data.seoData.seoScore || $data.seoData.score || 0) + '%'\n    })\n  }, null, 6)])], 2)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.$t(\"creatorAI.editor.seoAnalyzing\")), 1)]))], 2)]), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"h3\", null, _toDisplayString(_ctx.$t(\"creatorAI.editor.keywordsTitle\")), 1), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.keywordsList, (keyword, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, _toDisplayString(keyword), 1);\n  }), 128))]), $data.seoData && $data.seoData.suggestedKeywords && $data.seoData.suggestedKeywords.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createElementVNode(\"h4\", null, _toDisplayString(_ctx.$t(\"creatorAI.editor.keywordsTitle\")), 1), _createElementVNode(\"ul\", _hoisted_16, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.seoData.suggestedKeywords, (keyword, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: `sug-${index}`\n    }, _toDisplayString(keyword), 1);\n  }), 128))])])) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"h3\", null, _toDisplayString(_ctx.$t(\"creatorAI.editor.contentLength\")), 1), _createElementVNode(\"div\", _hoisted_18, _toDisplayString($options.wordCount) + \" \" + _toDisplayString(_ctx.$t(\"creatorAI.editor.words\")), 1)]), $data.seoData && $data.seoData.detailedAnalysis ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [_hoisted_20, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.seoData.detailedAnalysis, (category, key) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: key,\n      class: \"analysis-category\"\n    }, [_createElementVNode(\"h4\", null, _toDisplayString($options.formatCategoryName(key)) + \" (\" + _toDisplayString(category.score) + \"/100)\", 1), category.improvements ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [_hoisted_22, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category.improvements.slice(0, 3), (improvement, i) => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: i\n      }, _toDisplayString(improvement), 1);\n    }), 128))])])) : _createCommentVNode(\"\", true)]);\n  }), 128))])) : _createCommentVNode(\"\", true)])]), _createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"button\", {\n    class: \"secondary-button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.goBack && $options.goBack(...args))\n  }, _toDisplayString(_ctx.$t(\"creatorAI.editor.previous\")), 1), $props.contentId ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"primary-button-save\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.saveContent && $options.saveContent(...args))\n  }, _toDisplayString(_ctx.$t(\"creatorAI.editor.save\")), 1)) : _createCommentVNode(\"\", true), _createElementVNode(\"button\", {\n    class: \"primary-button\",\n    onClick: _cache[4] || (_cache[4] = $event => _ctx.$emit('next'))\n  }, _toDisplayString(_ctx.$t(\"creatorAI.editor.next\")), 1)])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_toDisplayString","_ctx","$t","_hoisted_2","_hoisted_3","_cache","$event","$data","content","placeholder","onInput","args","$options","updateContent","style","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_normalizeClass","loading","isAnalyzing","isFetchingSeo","_hoisted_8","_hoisted_9","seoData","getSEOScoreClass","_hoisted_10","_createTextVNode","lastSeoScore","seoScore","score","_hoisted_11","_hoisted_12","_normalizeStyle","_hoisted_13","_hoisted_14","_Fragment","_renderList","keywordsList","keyword","index","suggestedKeywords","length","_hoisted_15","_hoisted_16","_createCommentVNode","_hoisted_17","_hoisted_18","wordCount","detailedAnalysis","_hoisted_19","_hoisted_20","category","formatCategoryName","improvements","_hoisted_21","_hoisted_22","slice","improvement","i","_hoisted_23","onClick","goBack","$props","contentId","saveContent","$emit"],"sources":["/Users/nhannguyen/Desktop/Duan/esmart-solutions-agency/src/components/creator-ai/EditorStep.vue"],"sourcesContent":["<template>\n  <div class=\"step-content\">\n    <h2>{{ $t(\"creatorAI.editor.title\") }}</h2>\n    <div class=\"editor-container\">\n      <div class=\"main-content\">\n        <textarea\n          v-model=\"content\"\n          placeholder=\"Your AI-generated content will appear here...\"\n          @input=\"updateContent\"\n          style=\"height: 600px; resize: none\"\n        ></textarea>\n\n        <div class=\"editor-actions\">\n          <!-- Đã xóa ô optimization-status và loading-indicator -->\n        </div>\n      </div>\n      <div class=\"sidebar\">\n        <div class=\"sidebar-section\">\n          <h3>SEO Score</h3>\n          <div\n            class=\"seo-score-box\"\n            :class=\"{ loading: isAnalyzing || isFetchingSeo }\"\n          >\n            <div v-if=\"isAnalyzing || isFetchingSeo\" class=\"loading-indicator\">\n              <div class=\"spinner\"></div>\n              <p>{{ $t(\"creatorAI.editor.seoAnalyzing\") }}</p>\n            </div>\n            <div\n              v-else-if=\"seoData\"\n              class=\"score-display\"\n              :class=\"getSEOScoreClass()\"\n            >\n              <div class=\"score-number\">\n                {{ lastSeoScore || seoData.seoScore || seoData.score || 0\n                }}<span class=\"score-percent\">%</span>\n              </div>\n              <div class=\"score-bar\">\n                <div\n                  class=\"score-bar-fill\"\n                  :style=\"{\n                    width:\n                      (lastSeoScore || seoData.seoScore || seoData.score || 0) +\n                      '%',\n                  }\"\n                  :class=\"getSEOScoreClass()\"\n                ></div>\n              </div>\n            </div>\n            <div v-else class=\"no-data-message\">\n              <p>{{ $t(\"creatorAI.editor.seoAnalyzing\") }}</p>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"sidebar-section\">\n          <h3>{{ $t(\"creatorAI.editor.keywordsTitle\") }}</h3>\n          <ul>\n            <li v-for=\"(keyword, index) in keywordsList\" :key=\"index\">\n              {{ keyword }}\n            </li>\n          </ul>\n          <div\n            v-if=\"\n              seoData &&\n              seoData.suggestedKeywords &&\n              seoData.suggestedKeywords.length > 0\n            \"\n          >\n            <h4>{{ $t(\"creatorAI.editor.keywordsTitle\") }}</h4>\n            <ul class=\"suggested-keywords\">\n              <li\n                v-for=\"(keyword, index) in seoData.suggestedKeywords\"\n                :key=\"`sug-${index}`\"\n              >\n                {{ keyword }}\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <div class=\"sidebar-section\">\n          <h3>{{ $t(\"creatorAI.editor.contentLength\") }}</h3>\n          <div class=\"length\">\n            {{ wordCount }} {{ $t(\"creatorAI.editor.words\") }}\n          </div>\n        </div>\n\n        <div\n          v-if=\"seoData && seoData.detailedAnalysis\"\n          class=\"sidebar-section seo-analysis\"\n        >\n          <h3>SEO Analysis</h3>\n          <div\n            v-for=\"(category, key) in seoData.detailedAnalysis\"\n            :key=\"key\"\n            class=\"analysis-category\"\n          >\n            <h4>{{ formatCategoryName(key) }} ({{ category.score }}/100)</h4>\n            <div class=\"improvement-list\" v-if=\"category.improvements\">\n              <p class=\"improvement-title\">Improvement Suggestions:</p>\n              <ul>\n                <li\n                  v-for=\"(improvement, i) in category.improvements.slice(0, 3)\"\n                  :key=\"i\"\n                >\n                  {{ improvement }}\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"button-group\">\n      <button class=\"secondary-button\" @click=\"goBack\">\n        {{ $t(\"creatorAI.editor.previous\") }}\n      </button>\n      <button class=\"primary-button-save\" @click=\"saveContent\" v-if=\"contentId\">\n        {{ $t(\"creatorAI.editor.save\") }}\n      </button>\n      <button class=\"primary-button\" @click=\"$emit('next')\">\n        {{ $t(\"creatorAI.editor.next\") }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"EditorStep\",\n  props: {\n    initialContent: {\n      type: String,\n      required: true,\n    },\n    suggestedKeywords: {\n      type: Array,\n      default: () => [],\n    },\n    readabilityScore: {\n      type: Number,\n      default: 0,\n    },\n    contentLength: {\n      type: Number,\n      default: 0,\n    },\n    contentId: {\n      type: String,\n      default: \"\",\n    },\n    isAnalyzingSeo: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      content: this.initialContent,\n      seoData: null,\n      isAnalyzing: false,\n      isOptimizing: false,\n      isFetchingSeo: false,\n      optimizationCount: 0,\n      maxOptimizations: 3,\n      lastSavedContent: this.initialContent,\n      showNotification: function (type, title, message) {\n        if (this.$notify) {\n          this.$notify({\n            group: \"seo\",\n            type: type,\n            title: title,\n            text: message,\n          });\n        } else {\n          console.log(`${type} notification: ${title} - ${message}`);\n          if (type === \"error\") {\n            alert(`${title}: ${message}`);\n          }\n        }\n      },\n      updateContentTimer: null,\n      lastSeoScore: 0,\n      hasBeenOptimized: false,\n      lastAnalysisTime: null,\n      optimizationStage: \"\",\n    };\n  },\n  computed: {\n    keywordsList() {\n      return this.suggestedKeywords || [];\n    },\n    wordCount() {\n      if (!this.content) return 0;\n      return this.content.trim().split(/\\s+/).length;\n    },\n  },\n  methods: {\n    updateContent() {\n      if (this.content !== null && this.content !== undefined) {\n        console.log(\"[SEO_CLIENT] Updating content in parent component\");\n        this.$emit(\"update:content\", this.content);\n\n        // Bỏ qua autoAnalyzeAndOptimize nếu đang có thao tác nhập liệu\n        clearTimeout(this.updateContentTimer);\n        this.updateContentTimer = null;\n      }\n    },\n    goBack() {\n      if (this.contentId) {\n        this.$emit(\"go-to-dashboard\");\n      } else {\n        this.$emit(\"prev\");\n      }\n    },\n    async saveContent() {\n      if (!this.contentId) {\n        return;\n      }\n\n      try {\n        if (this.content === this.lastSavedContent) {\n          console.log(\"[SEO_CLIENT] Nội dung không thay đổi, không cần lưu\");\n          return;\n        }\n\n        console.log(\"[SEO_CLIENT] Đang lưu nội dung...\");\n\n        // Gọi API lưu nội dung\n        const response = await axios.put(\n          `/api/content/contents/${this.contentId}`,\n          {\n            generatedContent: this.content,\n          }\n        );\n\n        if (response.data.success) {\n          console.log(\"[SEO_CLIENT] Lưu nội dung thành công\");\n          this.lastSavedContent = this.content;\n\n          // Hiển thị thông báo thành công\n          this.showNotification(\n            \"success\",\n            \"Save Content\",\n            \"Content saved successfully\"\n          );\n\n          // Tự động phân tích và tối ưu SEO sau khi lưu\n          this.optimizationCount = 0; // Reset count khi có nội dung mới\n          await this.autoAnalyzeAndOptimize();\n        } else {\n          console.error(\n            \"[SEO_CLIENT] Lỗi khi lưu nội dung:\",\n            response.data.error\n          );\n          this.showNotification(\n            \"error\",\n            \"Save Content\",\n            \"Error saving content: \" + response.data.error\n          );\n        }\n      } catch (error) {\n        console.error(\"[SEO_CLIENT] Lỗi khi lưu nội dung:\", error);\n        this.showNotification(\n          \"error\",\n          \"Save Content\",\n          \"Error saving content: \" + error.message\n        );\n      }\n    },\n\n    async autoAnalyzeAndOptimize() {\n      console.log(\"[SEO_CLIENT] Bắt đầu tự động phân tích và tối ưu hóa SEO\");\n\n      // Kiểm tra nếu gần đây đã phân tích\n      const now = new Date().getTime();\n      if (this.lastAnalysisTime && now - this.lastAnalysisTime < 5000) {\n        console.log(\"[SEO_CLIENT] Đã phân tích gần đây, bỏ qua để tránh lặp\");\n        return;\n      }\n\n      // Nếu đã đạt giới hạn tối ưu, không tiếp tục\n      if (this.optimizationCount >= this.maxOptimizations) {\n        console.log(\n          `[SEO_CLIENT] Đã đạt giới hạn tối ưu (${this.maxOptimizations}), không tối ưu thêm`\n        );\n        return;\n      }\n\n      // Không tiếp tục nếu đang phân tích hoặc tối ưu\n      if (this.isAnalyzing || this.isOptimizing) {\n        console.log(\"[SEO_CLIENT] Đang phân tích hoặc tối ưu, không tiếp tục\");\n        return;\n      }\n\n      // Lưu thời điểm phân tích hiện tại\n      this.lastAnalysisTime = now;\n\n      await this.analyzeSEO();\n\n      // Thêm độ trễ nhỏ trước khi tối ưu để tránh gọi API liên tục\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n\n      // Nếu điểm SEO dưới 80, tự động tối ưu hóa\n      if (\n        this.seoData &&\n        (this.seoData.seoScore || this.seoData.score) < 80 &&\n        this.optimizationCount < this.maxOptimizations &&\n        !this.hasBeenOptimized\n      ) {\n        console.log(\"[SEO_CLIENT] Điểm SEO dưới 80, tự động tối ưu hóa\");\n        await this.autoOptimizeSEO();\n        this.hasBeenOptimized = true;\n      } else {\n        console.log(\n          \"[SEO_CLIENT] Điểm SEO đạt yêu cầu hoặc đã đạt giới hạn tối ưu, không cần tối ưu hóa\"\n        );\n      }\n    },\n\n    async analyzeSEO() {\n      if (!this.contentId) {\n        return;\n      }\n\n      try {\n        this.isAnalyzing = true;\n        console.log(\"[SEO_CLIENT] Bắt đầu phân tích SEO với Gemini API\");\n        this.seoAnalysisStage = \"Đang gọi Gemini API để phân tích SEO...\";\n\n        // Gọi API phân tích SEO\n        const response = await axios.post(`/api/seo/analyze/${this.contentId}`);\n\n        if (response.data.success) {\n          this.seoData = response.data.data.analysis;\n          console.log(\"[SEO_CLIENT] Phân tích SEO hoàn tất:\", this.seoData);\n          this.seoAnalysisStage = \"Phân tích SEO hoàn tất\";\n        } else {\n          console.error(\"[SEO_CLIENT] Lỗi phân tích SEO:\", response.data.error);\n          this.seoAnalysisStage = \"Phân tích SEO thất bại\";\n        }\n      } catch (error) {\n        console.error(\"[SEO_CLIENT] Lỗi phân tích SEO:\", error);\n        this.seoAnalysisStage = \"Lỗi phân tích SEO\";\n      } finally {\n        this.isAnalyzing = false;\n      }\n    },\n\n    async optimizeSEO() {\n      if (!this.contentId) {\n        return;\n      }\n\n      try {\n        this.isOptimizing = true;\n        this.optimizationStage =\n          \"Đang tối ưu hóa nội dung với DeepSeek và Gemini...\";\n        console.log(\"[SEO_CLIENT] Bắt đầu tối ưu hóa SEO thủ công\");\n\n        this.showNotification(\n          \"info\",\n          \"SEO Optimization\",\n          \"Optimizing your content...\"\n        );\n\n        // Lưu điểm SEO trước khi tối ưu\n        const previousScore =\n          this.lastSeoScore ||\n          (this.seoData ? this.seoData.seoScore || this.seoData.score || 0 : 0);\n        console.log(\n          `[SEO_CLIENT] Điểm SEO trước khi tối ưu thủ công: ${previousScore}`\n        );\n\n        // Gọi API tối ưu hóa SEO\n        const response = await axios.post(\n          `/api/seo/optimize/${this.contentId}`\n        );\n\n        if (response.data.success) {\n          const result = response.data.data;\n          console.log(\"[SEO_CLIENT] Kết quả tối ưu hóa SEO:\", result);\n\n          if (result.optimized) {\n            // Lấy dữ liệu SEO trước khi cập nhật nội dung\n            this.seoData = await this.fetchSEOData();\n\n            // Lưu lại điểm SEO mới\n            this.lastSeoScore = result.newScore;\n\n            // Cập nhật nội dung sau khi đã có dữ liệu SEO\n            console.log(\n              \"[SEO_CLIENT] Cập nhật nội dung và điểm số sau khi tối ưu\"\n            );\n            this.content = result.content.generatedContent;\n            this.lastSavedContent = this.content; // Cập nhật nội dung đã lưu\n\n            // Gọi updateContent() sau khi đã cập nhật SEO data\n            this.updateContent();\n            this.optimizationStage = \"Tối ưu hóa SEO hoàn tất\";\n\n            // Đánh dấu đã tối ưu\n            this.hasBeenOptimized = true;\n\n            // Tăng bộ đếm tối ưu\n            this.optimizationCount++;\n\n            // Hiển thị thông báo thành công\n            this.showNotification(\n              \"success\",\n              \"SEO Optimization\",\n              `Content optimized! SEO Score: ${result.previousScore} → ${result.newScore}`\n            );\n          } else {\n            // Hiển thị thông báo nếu không thể tối ưu thêm\n            this.optimizationStage = \"Không thể tối ưu thêm\";\n            this.showNotification(\"info\", \"SEO Optimization\", result.message);\n          }\n        } else {\n          console.error(\n            \"[SEO_CLIENT] Lỗi tối ưu hóa SEO:\",\n            response.data.error\n          );\n          this.optimizationStage = \"Tối ưu hóa SEO thất bại\";\n        }\n      } catch (error) {\n        console.error(\"[SEO_CLIENT] Lỗi tối ưu hóa SEO:\", error);\n        this.optimizationStage = \"Lỗi tối ưu hóa SEO\";\n      } finally {\n        this.isOptimizing = false;\n      }\n    },\n\n    async fetchSEOData() {\n      try {\n        const response = await axios.get(`/api/seo/report/${this.contentId}`);\n\n        if (response.data.success) {\n          return {\n            seoScore: response.data.data.seoScore,\n            keywordDensity: response.data.data.keywordDensity,\n            readabilityScore: response.data.data.readabilityScore,\n            suggestedKeywords: response.data.data.suggestedKeywords,\n            detailedAnalysis: response.data.data.detailedAnalysis,\n          };\n        }\n        return null;\n      } catch (error) {\n        console.error(\"Error fetching SEO data:\", error);\n        return null;\n      }\n    },\n\n    getSEOScoreClass() {\n      if (!this.seoData && !this.lastSeoScore) return \"poor\";\n\n      const score =\n        this.lastSeoScore ||\n        (this.seoData ? this.seoData.seoScore || this.seoData.score || 0 : 0);\n      if (score >= 80) return \"excellent\";\n      if (score >= 60) return \"good\";\n      if (score >= 40) return \"average\";\n      return \"poor\";\n    },\n\n    formatCategoryName(key) {\n      return key\n        .replace(/([A-Z])/g, \" $1\")\n        .replace(/^./, (str) => str.toUpperCase());\n    },\n\n    async autoOptimizeSEO() {\n      if (!this.contentId) {\n        return;\n      }\n\n      try {\n        this.isOptimizing = true;\n        console.log(\"[SEO_CLIENT] Bắt đầu tự động tối ưu hóa SEO\");\n\n        // Lưu điểm SEO trước khi tối ưu\n        const previousScore =\n          this.lastSeoScore ||\n          (this.seoData ? this.seoData.seoScore || this.seoData.score || 0 : 0);\n        console.log(\n          `[SEO_CLIENT] Điểm SEO trước khi tự động tối ưu: ${previousScore}`\n        );\n\n        // Gọi API tự động tối ưu hóa\n        const response = await axios.post(\n          `/api/seo/auto-optimize/${this.contentId}`,\n          {\n            maxOptimizations: 3,\n            targetScore: 80,\n          }\n        );\n\n        if (response.data.success) {\n          const result = response.data.data;\n\n          // Lưu dữ liệu SEO trước khi cập nhật nội dung\n          this.seoData = {\n            seoScore: result.finalScore,\n            keywordDensity: result.finalReport.keywordDensity,\n            readabilityScore: result.finalReport.readabilityScore,\n            suggestedKeywords: result.finalReport.suggestedKeywords,\n            detailedAnalysis: result.finalReport.detailedAnalysis,\n          };\n\n          // Cập nhật điểm cuối cùng\n          this.lastSeoScore = result.finalScore;\n\n          // Đánh dấu đã tối ưu\n          this.hasBeenOptimized = true;\n\n          // Sau đó cập nhật nội dung\n          this.content = result.finalReport.content;\n          this.lastSavedContent = this.content; // Cập nhật nội dung đã lưu\n\n          // Gọi update content sau khi đã cập nhật dữ liệu SEO\n          this.updateContent();\n\n          // Hiển thị thông báo thành công\n          this.showNotification(\n            \"success\",\n            \"SEO Optimization\",\n            `Automatic optimization completed! SEO Score: ${result.initialScore} → ${result.finalScore}`\n          );\n\n          // Tăng bộ đếm tối ưu hóa\n          this.optimizationCount++;\n        } else {\n          console.error(\"Failed to auto optimize SEO:\", response.data.error);\n        }\n      } catch (error) {\n        console.error(\"Error auto optimizing SEO:\", error);\n      } finally {\n        this.isOptimizing = false;\n      }\n    },\n  },\n  watch: {\n    initialContent(newValue) {\n      this.content = newValue || \"\";\n      if (newValue && newValue !== this.lastSavedContent) {\n        this.lastSavedContent = newValue;\n      }\n    },\n    content(newValue) {\n      // Khi nội dung thay đổi, không phân tích ngay lập tức\n      // Chỉ đặt timer để phân tích sau khi người dùng ngừng gõ một khoảng thời gian\n      if (this.updateContentTimer) {\n        clearTimeout(this.updateContentTimer);\n      }\n\n      // Chỉ phân tích nếu người dùng đã lưu nội dung\n      if (newValue === this.lastSavedContent) {\n        return;\n      }\n\n      // Tạo timer mới để phân tích sau 5 giây ngừng gõ\n      this.updateContentTimer = setTimeout(() => {\n        // Đặt lại cờ hasBeenOptimized để có thể tối ưu lại nếu cần\n        this.hasBeenOptimized = false;\n      }, 5000);\n    },\n    contentId: {\n      immediate: true,\n      async handler(newValue) {\n        if (newValue) {\n          // Reset optimization count when a new content is loaded\n          this.optimizationCount = 0;\n          this.hasBeenOptimized = false;\n          this.lastAnalysisTime = null;\n\n          // Nếu có contentId, kiểm tra xem đã có dữ liệu SEO chưa\n          const seoData = await this.fetchSEOData();\n          if (seoData) {\n            this.seoData = seoData;\n            this.lastSeoScore = seoData.seoScore || seoData.score || 0;\n\n            // Nếu SEO score dưới 80, tự động tối ưu\n            if (\n              (seoData.seoScore || seoData.score) < 80 &&\n              !this.hasBeenOptimized\n            ) {\n              await this.autoOptimizeSEO();\n              this.hasBeenOptimized = true;\n            }\n          } else {\n            // Nếu chưa có dữ liệu SEO, tự động phân tích và tối ưu\n            await this.autoAnalyzeAndOptimize();\n            this.hasBeenOptimized = true;\n          }\n        }\n      },\n    },\n  },\n  mounted() {\n    this.content = this.initialContent || \"\";\n    this.lastSavedContent = this.initialContent || \"\";\n\n    if (this.content) {\n      this.updateContent();\n    }\n\n    // Thêm biến để lưu điểm SEO cuối cùng\n    this.lastSeoScore = 0;\n\n    // Nếu có contentId nhưng chưa có seoData, phân tích ngay khi component được tạo\n    if (this.contentId && !this.seoData) {\n      this.$nextTick(async () => {\n        // Lấy dữ liệu SEO nếu đã có\n        const seoData = await this.fetchSEOData();\n        if (seoData) {\n          this.seoData = seoData;\n          this.lastSeoScore = seoData.seoScore || seoData.score || 0;\n\n          // Chỉ tối ưu nếu điểm dưới 80 và chưa có phân tích trước đó\n          if (\n            (seoData.seoScore || seoData.score) < 80 &&\n            !this.hasBeenOptimized\n          ) {\n            await this.autoOptimizeSEO();\n            this.hasBeenOptimized = true;\n          }\n        } else {\n          await this.autoAnalyzeAndOptimize();\n          this.hasBeenOptimized = true;\n        }\n      });\n    }\n\n    // Nếu đang trong trạng thái phân tích SEO, cập nhật UI\n    if (this.isAnalyzingSeo) {\n      this.isFetchingSeo = true;\n\n      // Thiết lập interval để kiểm tra dữ liệu SEO mỗi 3 giây\n      const checkSeoInterval = setInterval(async () => {\n        if (this.contentId) {\n          try {\n            const seoData = await this.fetchSEOData();\n            if (seoData) {\n              clearInterval(checkSeoInterval);\n              this.isFetchingSeo = false;\n              this.lastSeoScore = seoData.seoScore || seoData.score || 0;\n            }\n          } catch (error) {\n            console.error(\"Error checking SEO data:\", error);\n          }\n        }\n      }, 3000);\n\n      // Xóa interval sau 30 giây để tránh lãng phí tài nguyên\n      setTimeout(() => {\n        clearInterval(checkSeoInterval);\n        this.isFetchingSeo = false;\n      }, 30000);\n    }\n  },\n};\n</script>\n\n<style scoped>\n.step-content {\n  background: white;\n  border-radius: 12px;\n  padding: 2rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\nh2 {\n  color: #1c1c4c;\n  margin-bottom: 2rem;\n  text-align: center;\n}\n\n.editor-container {\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 2rem;\n}\n\n.main-content textarea {\n  width: 100%;\n  height: 400px;\n  padding: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 6px;\n  resize: vertical;\n  font-family: \"Arial\", sans-serif;\n  line-height: 1.6;\n}\n\n.editor-actions {\n  display: flex;\n  justify-content: flex-start;\n  gap: 10px;\n  margin-top: 10px;\n}\n\n.action-button {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  transition: background-color 0.3s;\n}\n\n.spinner {\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  border: 2px solid rgba(46, 125, 50, 0.3);\n  border-radius: 50%;\n  border-top-color: #2e7d32;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.sidebar {\n  background: #f8f9fa;\n  border-radius: 8px;\n  padding: 1.5rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  max-height: 600px;\n  overflow-y: auto;\n}\n\n.sidebar-section {\n  margin-bottom: 1.5rem;\n}\n\n.sidebar-section h3 {\n  color: #1c1c4c;\n  margin-bottom: 0.5rem;\n  border-bottom: 1px solid #eaeaea;\n  padding-bottom: 8px;\n}\n\n.sidebar-section h4 {\n  color: #1c1c4c;\n  font-size: 0.9rem;\n  margin-top: 0.8rem;\n  margin-bottom: 0.3rem;\n}\n\n.sidebar-section ul {\n  list-style-type: none;\n  padding-left: 0;\n}\n\n.sidebar-section li {\n  padding: 0.3rem 0.5rem;\n  background: #e9ecef;\n  margin-bottom: 0.5rem;\n  border-radius: 4px;\n  font-size: 0.9rem;\n}\n\n.suggested-keywords li {\n  background: #e3f2fd;\n  color: #0d47a1;\n}\n\n.seo-score-box {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n}\n\n.score-display {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n}\n\n.score-number {\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #1c1c4c;\n}\n\n.score-percent {\n  font-size: 0.8rem;\n  font-weight: normal;\n  color: #6c757d;\n}\n\n.score-bar {\n  width: 100%;\n  height: 20px;\n  background-color: #f0f0f0;\n  border-radius: 10px;\n  overflow: hidden;\n}\n\n.score-bar-fill {\n  height: 100%;\n  background-color: #4caf50;\n}\n\n.score-bar.excellent {\n  background-color: #4caf50;\n}\n\n.score-bar.good {\n  background-color: #8bc34a;\n}\n\n.score-bar.average {\n  background-color: #ffc107;\n}\n\n.score-bar.poor {\n  background-color: #f44336;\n}\n\n.loading-indicator {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n  color: #2e7d32;\n  font-size: 0.9rem;\n}\n\n.no-data-message {\n  text-align: center;\n  color: #6c757d;\n  font-size: 0.9rem;\n  padding: 10px;\n  background: #f0f0f0;\n  border-radius: 4px;\n}\n\n.analysis-category {\n  background: #f0f4f8;\n  border-radius: 4px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\n\n.improvement-title {\n  font-size: 0.85rem;\n  font-weight: bold;\n  margin: 5px 0;\n}\n\n.improvement-list ul {\n  margin-top: 5px;\n}\n\n.improvement-list li {\n  background: #e6f7ff;\n  color: #0d47a1;\n  font-size: 0.85rem;\n}\n\n.score,\n.length {\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #1c1c4c;\n  text-align: center;\n  padding: 0.5rem;\n  background: #e9ecef;\n  border-radius: 4px;\n}\n\n.button-group {\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n  margin-top: 2rem;\n}\n\n.primary-button {\n  background: #1c1c4c;\n  color: white;\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background-color 0.3s ease;\n}\n\n.primary-button:hover {\n  background: #2a2a6c;\n}\n\n.primary-button-save {\n  background: #28a745;\n  color: white;\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background-color 0.3s ease;\n}\n\n.primary-button-save:hover {\n  background: #218838;\n}\n\n.secondary-button {\n  background: white;\n  color: #1c1c4c;\n  border: 1px solid #1c1c4c;\n  padding: 0.75rem 1.5rem;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: all 0.3s ease;\n}\n\n.secondary-button:hover {\n  background: #f8f9fa;\n}\n\n.analysis-stage,\n.optimization-stage {\n  display: none;\n}\n\n@media (max-width: 768px) {\n  .editor-container {\n    grid-template-columns: 1fr;\n  }\n\n  .button-group {\n    flex-direction: column;\n  }\n\n  .primary-button,\n  .secondary-button {\n    width: 100%;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}