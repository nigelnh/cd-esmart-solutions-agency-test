{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"FinalStep\",\n  props: {\n    content: {\n      type: String,\n      required: true\n    },\n    generatedImage: {\n      type: String,\n      default: null\n    },\n    projectId: {\n      type: String,\n      default: \"\"\n    },\n    projectTitle: {\n      type: String,\n      default: \"Content Project\"\n    },\n    projectDescription: {\n      type: String,\n      default: \"\"\n    },\n    contentId: {\n      type: String,\n      default: \"\"\n    },\n    fromDashboard: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      projectStatus: \"in_progress\",\n      loading: false,\n      error: null,\n      saveLoading: false,\n      saveMessage: null,\n      saveStatus: \"success\",\n      imageLoading: false,\n      imageError: null,\n      localImage: this.generatedImage,\n      toasts: []\n    };\n  },\n  computed: {\n    apiEndpoint() {\n      return process.env.VUE_APP_API_URL || \"http://localhost:3001/api\";\n    },\n    hasProjectId() {\n      return this.projectId && this.projectId.length > 0;\n    },\n    hasContentId() {\n      return this.contentId && this.contentId.length > 0;\n    },\n    formattedContent() {\n      if (!this.content) return \"\";\n\n      // Tạo định dạng HTML cho nội dung\n      const formatted = this.content\n      // Thay thế dòng trống bằng thẻ đoạn\n      .replace(/\\n\\s*\\n/g, \"</p><p>\")\n      // Thay thế dòng mới đơn bằng thẻ br\n      .replace(/\\n/g, \"<br>\")\n      // Bọc toàn bộ nội dung trong thẻ p\n      .replace(/^(.+)$/, \"<p>$1</p>\");\n      return formatted;\n    },\n    imageUrl() {\n      // First, use localImage from data if available\n      if (this.localImage) {\n        console.log(\"Using local image:\", this.localImage.substring(0, 50) + \"...\");\n        return this.localImage;\n      }\n\n      // Next, try to use generated image from props\n      if (this.generatedImage) {\n        console.log(\"Using generated image from props:\", typeof this.generatedImage === \"string\" ? this.generatedImage.substring(0, 50) + \"...\" : \"object\");\n\n        // Handle string URLs (including data URLs)\n        if (typeof this.generatedImage === \"string\") {\n          return this.generatedImage;\n        }\n\n        // Handle object format\n        if (typeof this.generatedImage === \"object\" && this.generatedImage !== null) {\n          if (\"image\" in this.generatedImage) {\n            return this.generatedImage.image;\n          }\n          if (\"imageUrl\" in this.generatedImage) {\n            return this.generatedImage.imageUrl;\n          }\n        }\n      }\n      return null;\n    }\n  },\n  created() {\n    if (this.hasProjectId) {\n      this.fetchProjectStatus();\n    }\n    if (this.hasContentId) {\n      this.localImage = null;\n      console.log(\"FinalStep created with contentId:\", this.contentId);\n      this.fetchContentImage();\n    }\n  },\n  mounted() {\n    console.log(\"[FinalStep] Component mounted with contentId:\", this.contentId);\n\n    // Luôn tìm nạp ảnh mới khi component được tạo\n    if (this.hasContentId) {\n      this.localImage = null;\n      this.fetchContentImage();\n    }\n  },\n  methods: {\n    async fetchProjectStatus() {\n      try {\n        if (!this.hasProjectId) return;\n        const response = await axios.get(`${this.apiEndpoint}/projects/${this.projectId}`);\n        if (response.data.success) {\n          this.projectStatus = response.data.data.status;\n        }\n      } catch (error) {\n        console.error(\"Error fetching project status:\", error);\n        this.error = \"Could not fetch project status\";\n      }\n    },\n    async fetchContentImage() {\n      if (!this.contentId) {\n        console.log(\"[FinalStep] No contentId available to fetch image\");\n        this.localImage = null;\n        return;\n      }\n      try {\n        console.log(`[FinalStep] Starting to fetch image for content ID: ${this.contentId} (fromDashboard: ${this.fromDashboard})`);\n        this.imageLoading = true;\n        this.imageError = null;\n\n        // Thêm timestamp để tránh cache\n        const response = await axios.get(`/api/content/contents/${this.contentId}?_t=${Date.now()}`);\n        console.log(`[FinalStep] Content API response for ID ${this.contentId}:`, response.data);\n        if (response.data && response.data.success) {\n          const contentData = response.data.data;\n          if (contentData && contentData.imageUrl) {\n            console.log(`[FinalStep] Found image URL for content ${this.contentId}:`, contentData.imageUrl);\n\n            // Kiểm tra nếu URL có chứa tên tệp từ thư mục outputs\n            const isServiceImage = contentData.imageUrl.includes(\"/images/\") || contentData.imageUrl.includes(\"localhost:8000\");\n\n            // Xử lý URL dựa trên loại ảnh\n            let finalImageUrl = contentData.imageUrl;\n            if (isServiceImage) {\n              console.log(\"[FinalStep] Detected image from FastAPI service\");\n\n              // Kiểm tra xem URL đã đầy đủ chưa\n              if (!finalImageUrl.startsWith(\"http\")) {\n                const FASTAPI_URL = \"http://localhost:8000\"; // Hoặc lấy từ biến môi trường\n\n                // Nếu URL chỉ chứa filename\n                if (finalImageUrl.includes(\"/images/\") && !finalImageUrl.includes(FASTAPI_URL)) {\n                  finalImageUrl = `${FASTAPI_URL}${finalImageUrl.startsWith(\"/\") ? finalImageUrl : \"/\" + finalImageUrl}`;\n                }\n                // Nếu URL chỉ chứa filename không có /images/\n                else if (!finalImageUrl.includes(\"/images/\")) {\n                  const filename = finalImageUrl.split(\"/\").pop();\n                  finalImageUrl = `${FASTAPI_URL}/images/${filename}`;\n                }\n              }\n            } else if (!finalImageUrl.startsWith(\"http\") && !finalImageUrl.startsWith(\"/api/\")) {\n              finalImageUrl = `/api/${finalImageUrl.startsWith(\"/\") ? finalImageUrl.slice(1) : finalImageUrl}`;\n            }\n            console.log(`[FinalStep] Final image URL: ${finalImageUrl}`);\n\n            // Kiểm tra xem ảnh có tồn tại không bằng cách gửi HEAD request\n            try {\n              await axios.head(finalImageUrl);\n              console.log(`[FinalStep] Image exists at URL: ${finalImageUrl}`);\n              this.localImage = finalImageUrl;\n              this.$emit(\"update:image\", finalImageUrl);\n            } catch (headError) {\n              console.error(`[FinalStep] Image not accessible at ${finalImageUrl}:`, headError);\n              this.imageError = `Hình ảnh không tồn tại hoặc không thể truy cập`;\n              this.localImage = null;\n            }\n          } else {\n            console.log(`[FinalStep] No image found for content ${this.contentId}`);\n            this.localImage = null;\n          }\n        } else {\n          console.warn(\"[FinalStep] API did not return success:\", response.data);\n          this.localImage = null;\n        }\n      } catch (error) {\n        console.error(\"[FinalStep] Error fetching content image:\", error);\n        this.imageError = \"Failed to load image: \" + error.message;\n        this.localImage = null;\n      } finally {\n        this.imageLoading = false;\n      }\n    },\n    async markAsFinished() {\n      try {\n        if (!this.hasProjectId) {\n          alert(\"Cannot update status: No project ID available\");\n          return;\n        }\n        this.loading = true;\n        const response = await axios.patch(`${this.apiEndpoint}/projects/${this.projectId}/status`, {\n          status: \"finished\"\n        });\n        if (response.data.success) {\n          this.projectStatus = \"finished\";\n        }\n      } catch (error) {\n        console.error(\"Error updating project status:\", error);\n        alert(\"Failed to update project status: \" + error.message);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async markAsInProgress() {\n      try {\n        if (!this.hasProjectId) {\n          alert(\"Cannot update status: No project ID available\");\n          return;\n        }\n        this.loading = true;\n        const response = await axios.patch(`${this.apiEndpoint}/projects/${this.projectId}/status`, {\n          status: \"in_progress\"\n        });\n        if (response.data.success) {\n          this.projectStatus = \"in_progress\";\n        }\n      } catch (error) {\n        console.error(\"Error updating project status:\", error);\n        alert(\"Failed to update project status: \" + error.message);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async saveContent() {\n      try {\n        if (!this.hasContentId) {\n          this.saveMessage = \"No content ID available. Cannot save.\";\n          this.saveStatus = \"error\";\n          return;\n        }\n        this.saveLoading = true;\n        this.saveMessage = null;\n        const response = await axios.put(`${this.apiEndpoint}/content/contents/${this.contentId}`, {\n          generatedContent: this.content\n        });\n        if (response.data.success) {\n          this.saveMessage = \"Content saved successfully!\";\n          this.saveStatus = \"success\";\n        } else {\n          throw new Error(response.data.error || \"Unknown error occurred\");\n        }\n      } catch (error) {\n        console.error(\"Error saving content:\", error);\n        this.saveMessage = \"Failed to save content: \" + error.message;\n        this.saveStatus = \"error\";\n      } finally {\n        this.saveLoading = false;\n\n        // Clear message after 3 seconds\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n      }\n    },\n    exportContent() {\n      try {\n        // Tạo dữ liệu để export\n        const exportData = {\n          title: this.projectTitle || \"Untitled Content\",\n          content: this.content,\n          image: this.imageUrl,\n          createdAt: new Date().toISOString(),\n          projectInfo: {\n            id: this.projectId,\n            title: this.projectTitle,\n            description: this.projectDescription\n          }\n        };\n\n        // Tạo JSON string\n        const dataStr = JSON.stringify(exportData, null, 2);\n\n        // Tạo blob để download\n        const blob = new Blob([dataStr], {\n          type: \"application/json\"\n        });\n        const url = URL.createObjectURL(blob);\n\n        // Tạo link và kích hoạt download\n        const a = document.createElement(\"a\");\n        a.download = `${this.projectTitle || \"content\"}_export.json`;\n        a.href = url;\n        a.click();\n\n        // Giải phóng URL object\n        URL.revokeObjectURL(url);\n        this.saveMessage = \"Content exported successfully!\";\n        this.saveStatus = \"success\";\n\n        // Clear message after 3 seconds\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n      } catch (error) {\n        console.error(\"Error exporting content:\", error);\n        this.saveMessage = \"Failed to export content: \" + error.message;\n        this.saveStatus = \"error\";\n\n        // Clear message after 3 seconds\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n      }\n    },\n    shareContent() {\n      // Xử lý chia sẻ nội dung - có thể thông qua email hoặc mạng xã hội\n      try {\n        // Kiểm tra nếu Web Share API được hỗ trợ\n        if (navigator.share) {\n          navigator.share({\n            title: this.projectTitle || \"My Content\",\n            text: `Check out my content: ${this.projectTitle || \"Content\"}`,\n            url: window.location.href\n          }).then(() => {\n            this.saveMessage = \"Content shared successfully!\";\n            this.saveStatus = \"success\";\n          }).catch(error => {\n            throw error;\n          });\n        } else {\n          // Fallback - copy URL vào clipboard\n          navigator.clipboard.writeText(window.location.href).then(() => {\n            this.saveMessage = \"URL copied to clipboard!\";\n            this.saveStatus = \"success\";\n          });\n        }\n\n        // Clear message after 3 seconds\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n      } catch (error) {\n        console.error(\"Error sharing content:\", error);\n        this.saveMessage = \"Failed to share content: \" + error.message;\n        this.saveStatus = \"error\";\n\n        // Clear message after 3 seconds\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n      }\n    },\n    downloadPDF() {\n      try {\n        // Thông báo cho người dùng rằng chức năng đang được phát triển\n        this.saveMessage = \"PDF download feature will be available soon.\";\n        this.saveStatus = \"success\";\n\n        // Xóa thông báo sau 3 giây\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n\n        // NOTE: Chức năng này sẽ được triển khai trong bản cập nhật tới\n        // Sử dụng thư viện như jsPDF hoặc html2pdf.js để tạo PDF từ nội dung\n      } catch (error) {\n        console.error(\"Error downloading PDF:\", error);\n        this.saveMessage = \"Failed to download PDF: \" + error.message;\n        this.saveStatus = \"error\";\n\n        // Clear message after 3 seconds\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n      }\n    },\n    goToDashboard() {\n      this.$emit(\"go-to-dashboard\");\n    },\n    async generateImageForContent() {\n      try {\n        this.imageLoading = true;\n        this.imageError = null;\n\n        // Hiển thị thông báo đang xử lý\n        this.showToast(\"Đang chuẩn bị tạo hình ảnh cho nội dung...\", \"info\");\n        if (!this.contentId) {\n          throw new Error(\"Không có ID nội dung để tạo hình ảnh\");\n        }\n        console.log(`[FinalStep] Generating image for content ID: ${this.contentId}`);\n\n        // Bước 1: Tạo prompt từ nội dung\n        const promptResponse = await axios.post(`/api/content/contents/generate-prompt`, {\n          contentId: this.contentId,\n          style: \"Realistic\",\n          template: `Generate a [STYLE] image of [SUBJECT], featuring [KEY DETAILS]. Style: [ART STYLE/MEDIUM], color palette: [COLORS], lighting: [LIGHTING], composition: [COMPOSITION]. Additional effects: [EFFECTS]. Keep the overall mood [MOOD]. Render in Kandinsky 2.2 with high detail, resolution [RESOLUTION].`\n        }, {\n          timeout: 45000 // 45 seconds timeout for prompt generation\n        });\n        if (!promptResponse.data.success) {\n          throw new Error(promptResponse.data.error || \"Lỗi khi tạo mô tả hình ảnh\");\n        }\n        const generatedPrompt = promptResponse.data.prompt;\n        console.log(\"[FinalStep] Generated prompt:\", generatedPrompt.substring(0, 100) + \"...\");\n\n        // Hiển thị thông báo prompt đã được tạo\n        this.showToast(\"Đã tạo mô tả hình ảnh, đang tạo hình ảnh...\", \"success\");\n\n        // Bước 2: Tạo hình ảnh từ prompt\n        const imageResponse = await axios.post(`/api/image/generate`, {\n          prompt: generatedPrompt,\n          style: \"Realistic\",\n          width: 512,\n          height: 512,\n          num_inference_steps: 30\n        }, {\n          timeout: 180000 // 3 minutes timeout for image generation\n        });\n        if (!imageResponse.data.success) {\n          throw new Error(imageResponse.data.error || \"Lỗi khi tạo hình ảnh từ mô tả\");\n        }\n\n        // Xử lý URL ảnh từ FastAPI\n        let imageUrl = \"\";\n        if (imageResponse.data.filename) {\n          // Nếu API trả về tên tệp, tạo URL đầy đủ\n          const FASTAPI_URL = \"http://localhost:8000\"; // Hoặc lấy từ biến môi trường\n          imageUrl = `${FASTAPI_URL}/images/${imageResponse.data.filename}`;\n        } else if (imageResponse.data.imageUrl) {\n          // Nếu API đã trả về URL đầy đủ\n          imageUrl = imageResponse.data.imageUrl;\n        } else {\n          throw new Error(\"API không trả về đường dẫn hình ảnh hợp lệ\");\n        }\n        console.log(`[FinalStep] Image URL from API: ${imageUrl}`);\n\n        // Bước 3: Cập nhật URL hình ảnh vào nội dung\n        const updateResponse = await axios.put(`/api/content/contents/${this.contentId}`, {\n          imageUrl\n        });\n        if (!updateResponse.data.success) {\n          throw new Error(updateResponse.data.error || \"Lỗi khi cập nhật URL hình ảnh\");\n        }\n\n        // Cập nhật URL hình ảnh vào local state\n        console.log(`[FinalStep] Image created successfully: ${imageUrl}`);\n        this.localImage = imageUrl;\n        this.$emit(\"update:image\", imageUrl);\n\n        // Hiển thị thông báo thành công\n        this.showToast(`Đã tạo hình ảnh thành công! Đường dẫn: ${imageUrl}`, \"success\");\n\n        // Tự động tải lại ảnh sau khi tạo để đảm bảo hiển thị đúng\n        setTimeout(() => {\n          if (this.hasContentId) {\n            this.fetchContentImage();\n          }\n        }, 1000);\n      } catch (error) {\n        console.error(\"[FinalStep] Error generating image for content:\", error);\n        const errorMessage = error.response?.data?.error || error.message || \"Lỗi không xác định\";\n        this.imageError = `Lỗi khi tạo hình ảnh: ${errorMessage}`;\n\n        // Hiển thị thông báo lỗi chi tiết hơn\n        if (error.response?.data?.details) {\n          this.showToast(`Lỗi: ${errorMessage} (${error.response.data.details})`, \"error\");\n        } else {\n          this.showToast(`Lỗi: ${errorMessage}`, \"error\");\n        }\n\n        // Thêm hướng dẫn cho người dùng tùy thuộc vào loại lỗi\n        if (error.message.includes(\"timeout\")) {\n          this.showToast(\"Quá thời gian chờ phản hồi. Vui lòng thử lại sau hoặc giảm độ phức tạp của nội dung.\", \"error\");\n        } else if (error.message.includes(\"connect\")) {\n          this.showToast(\"Không thể kết nối đến máy chủ tạo ảnh. Vui lòng kiểm tra kết nối và thử lại sau.\", \"error\");\n        }\n      } finally {\n        this.imageLoading = false;\n      }\n    },\n    showToast(message, type = \"info\") {\n      if (!this.toasts) this.toasts = [];\n      const id = Date.now();\n      this.toasts.push({\n        id,\n        message,\n        type\n      });\n\n      // Tự động xóa sau 5 giây\n      setTimeout(() => {\n        this.removeToast(id);\n      }, 5000);\n    },\n    removeToast(id) {\n      if (this.toasts) {\n        this.toasts = this.toasts.filter(toast => toast.id !== id);\n      }\n    },\n    forceRefreshImage() {\n      console.log(\"[FinalStep] Force refreshing image for content:\", this.contentId);\n      this.localImage = null;\n      this.imageError = null;\n      this.showToast(\"Đang tải lại hình ảnh...\", \"info\");\n      this.fetchContentImage();\n    }\n  },\n  watch: {\n    generatedImage: {\n      immediate: true,\n      handler(newValue, oldValue) {\n        if (newValue !== oldValue) {\n          console.log(\"generatedImage changed:\", newValue);\n          this.localImage = newValue;\n        }\n      }\n    },\n    contentId: {\n      immediate: true,\n      handler(newValue, oldValue) {\n        if (newValue && newValue !== oldValue) {\n          console.log(\"Content ID changed from\", oldValue, \"to\", newValue);\n          this.localImage = null;\n          this.fetchContentImage();\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","content","type","String","required","generatedImage","default","projectId","projectTitle","projectDescription","contentId","fromDashboard","Boolean","data","projectStatus","loading","error","saveLoading","saveMessage","saveStatus","imageLoading","imageError","localImage","toasts","computed","apiEndpoint","process","env","VUE_APP_API_URL","hasProjectId","length","hasContentId","formattedContent","formatted","replace","imageUrl","console","log","substring","image","created","fetchProjectStatus","fetchContentImage","mounted","methods","response","get","success","status","Date","now","contentData","isServiceImage","includes","finalImageUrl","startsWith","FASTAPI_URL","filename","split","pop","slice","head","$emit","headError","warn","message","markAsFinished","alert","patch","markAsInProgress","saveContent","put","generatedContent","Error","setTimeout","exportContent","exportData","title","createdAt","toISOString","projectInfo","id","description","dataStr","JSON","stringify","blob","Blob","url","URL","createObjectURL","a","document","createElement","download","href","click","revokeObjectURL","shareContent","navigator","share","text","window","location","then","catch","clipboard","writeText","downloadPDF","goToDashboard","generateImageForContent","showToast","promptResponse","post","style","template","timeout","generatedPrompt","prompt","imageResponse","width","height","num_inference_steps","updateResponse","errorMessage","details","push","removeToast","filter","toast","forceRefreshImage","watch","immediate","handler","newValue","oldValue"],"sources":["/Users/nhannguyen/Desktop/Duan/esmart-solutions-agency/src/components/creator-ai/FinalStep.vue"],"sourcesContent":["<template>\n  <div class=\"step-content\">\n    <h2>Final Step</h2>\n    <div v-if=\"hasProjectId\" class=\"project-info\">\n      <h3>{{ projectTitle }}</h3>\n      <p v-if=\"projectDescription\">{{ projectDescription }}</p>\n      <div class=\"project-status\">\n        <span :class=\"['status-badge', projectStatus]\">\n          {{ projectStatus === \"in_progress\" ? \"In Progress\" : \"Finished\" }}\n        </span>\n        <button\n          v-if=\"projectStatus === 'in_progress'\"\n          class=\"status-button\"\n          @click=\"markAsFinished\"\n          :disabled=\"loading\"\n        >\n          {{ loading ? \"Updating...\" : \"Mark as Finished\" }}\n        </button>\n        <button\n          v-else\n          class=\"status-button\"\n          @click=\"markAsInProgress\"\n          :disabled=\"loading\"\n        >\n          {{ loading ? \"Updating...\" : \"Mark as In Progress\" }}\n        </button>\n      </div>\n      <p v-if=\"error\" class=\"error-message\">{{ error }}</p>\n    </div>\n    <div v-else class=\"project-info warning\">\n      <p>\n        This content is not saved to a project. Create a new project to save\n        your work.\n      </p>\n    </div>\n    <div class=\"final-content\">\n      <h3 class=\"mb-3\">Generated Content</h3>\n      <div v-if=\"loading\" class=\"d-flex justify-content-center\">\n        <div class=\"spinner-border text-primary\" role=\"status\">\n          <span class=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n      <div v-else class=\"content-box\" v-html=\"formattedContent\"></div>\n    </div>\n\n    <div class=\"final-image-section\">\n      <h3>Generated Image</h3>\n      <div class=\"image-section\">\n        <div\n          v-if=\"imageLoading\"\n          class=\"d-flex justify-content-center align-items-center\"\n          style=\"height: 200px\"\n        >\n          <div class=\"spinner-border text-primary\" role=\"status\">\n            <span class=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n        <div v-else-if=\"imageError\" class=\"no-image-placeholder\">\n          <i class=\"fa-solid fa-triangle-exclamation fa-3x\"></i>\n          <p>{{ imageError }}</p>\n        </div>\n        <img\n          v-else-if=\"imageUrl\"\n          :src=\"imageUrl\"\n          alt=\"Generated image\"\n          class=\"img-fluid rounded mb-3\"\n        />\n        <div v-else class=\"no-image-placeholder\">\n          <i class=\"fa-solid fa-image fa-5x\"></i>\n          <p>No image available</p>\n        </div>\n\n        <div class=\"image-actions\">\n          <button\n            v-if=\"!imageLoading && !imageUrl && contentId\"\n            class=\"btn btn-success mt-2\"\n            @click=\"generateImageForContent\"\n          >\n            <i class=\"fas fa-magic me-1\"></i>\n            Generate Image\n          </button>\n\n          <button\n            v-if=\"!imageLoading && contentId\"\n            class=\"btn btn-outline-primary mt-2 ms-2\"\n            @click=\"forceRefreshImage\"\n            :disabled=\"imageLoading\"\n          >\n            <i class=\"fas fa-sync-alt me-1\"></i>\n            Refresh Image\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"final-actions\">\n      <div class=\"action-buttons\">\n        <div class=\"additional-actions\">\n          <button class=\"btn btn-outline-primary\" @click=\"exportContent\">\n            <i class=\"fas fa-file-export me-1\"></i>\n            Export\n          </button>\n          <button class=\"btn btn-outline-primary\" @click=\"shareContent\">\n            <i class=\"fas fa-share-alt me-1\"></i>\n            Share\n          </button>\n          <button class=\"btn btn-outline-primary\" @click=\"downloadPDF\">\n            <i class=\"fas fa-file-pdf me-1\"></i>\n            Download PDF\n          </button>\n        </div>\n      </div>\n      <div class=\"navigation-buttons\">\n        <button\n          v-if=\"!fromDashboard\"\n          class=\"btn btn-light\"\n          @click=\"$emit('prev')\"\n        >\n          <i class=\"fas fa-arrow-left me-1\"></i>\n          Previous Step\n        </button>\n        <button v-else class=\"btn btn-light\" @click=\"$emit('go-to-dashboard')\">\n          <i class=\"fas fa-home me-1\"></i>\n          Back to Dashboard\n        </button>\n        <button class=\"btn btn-info\" @click=\"$emit('go-to-dashboard')\">\n          <i class=\"fas fa-home me-1\"></i>\n          Dashboard\n        </button>\n        <button class=\"btn btn-success\" @click=\"$emit('new')\">\n          <i class=\"fas fa-plus me-1\"></i>\n          Create New\n        </button>\n      </div>\n    </div>\n    <div v-if=\"saveMessage\" :class=\"['save-message', saveStatus]\">\n      {{ saveMessage }}\n    </div>\n\n    <!-- Toast Messages Container -->\n    <div class=\"toast-container\">\n      <div\n        v-for=\"toast in toasts\"\n        :key=\"toast.id\"\n        :class=\"['toast-message', `toast-${toast.type}`]\"\n        @click=\"removeToast(toast.id)\"\n      >\n        <span>{{ toast.message }}</span>\n        <button class=\"toast-close-btn\">&times;</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"FinalStep\",\n  props: {\n    content: {\n      type: String,\n      required: true,\n    },\n    generatedImage: {\n      type: String,\n      default: null,\n    },\n    projectId: {\n      type: String,\n      default: \"\",\n    },\n    projectTitle: {\n      type: String,\n      default: \"Content Project\",\n    },\n    projectDescription: {\n      type: String,\n      default: \"\",\n    },\n    contentId: {\n      type: String,\n      default: \"\",\n    },\n    fromDashboard: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      projectStatus: \"in_progress\",\n      loading: false,\n      error: null,\n      saveLoading: false,\n      saveMessage: null,\n      saveStatus: \"success\",\n      imageLoading: false,\n      imageError: null,\n      localImage: this.generatedImage,\n      toasts: [],\n    };\n  },\n  computed: {\n    apiEndpoint() {\n      return process.env.VUE_APP_API_URL || \"http://localhost:3001/api\";\n    },\n    hasProjectId() {\n      return this.projectId && this.projectId.length > 0;\n    },\n    hasContentId() {\n      return this.contentId && this.contentId.length > 0;\n    },\n    formattedContent() {\n      if (!this.content) return \"\";\n\n      // Tạo định dạng HTML cho nội dung\n      const formatted = this.content\n        // Thay thế dòng trống bằng thẻ đoạn\n        .replace(/\\n\\s*\\n/g, \"</p><p>\")\n        // Thay thế dòng mới đơn bằng thẻ br\n        .replace(/\\n/g, \"<br>\")\n        // Bọc toàn bộ nội dung trong thẻ p\n        .replace(/^(.+)$/, \"<p>$1</p>\");\n\n      return formatted;\n    },\n    imageUrl() {\n      // First, use localImage from data if available\n      if (this.localImage) {\n        console.log(\n          \"Using local image:\",\n          this.localImage.substring(0, 50) + \"...\"\n        );\n        return this.localImage;\n      }\n\n      // Next, try to use generated image from props\n      if (this.generatedImage) {\n        console.log(\n          \"Using generated image from props:\",\n          typeof this.generatedImage === \"string\"\n            ? this.generatedImage.substring(0, 50) + \"...\"\n            : \"object\"\n        );\n\n        // Handle string URLs (including data URLs)\n        if (typeof this.generatedImage === \"string\") {\n          return this.generatedImage;\n        }\n\n        // Handle object format\n        if (\n          typeof this.generatedImage === \"object\" &&\n          this.generatedImage !== null\n        ) {\n          if (\"image\" in this.generatedImage) {\n            return this.generatedImage.image;\n          }\n          if (\"imageUrl\" in this.generatedImage) {\n            return this.generatedImage.imageUrl;\n          }\n        }\n      }\n\n      return null;\n    },\n  },\n  created() {\n    if (this.hasProjectId) {\n      this.fetchProjectStatus();\n    }\n\n    if (this.hasContentId) {\n      this.localImage = null;\n      console.log(\"FinalStep created with contentId:\", this.contentId);\n      this.fetchContentImage();\n    }\n  },\n  mounted() {\n    console.log(\n      \"[FinalStep] Component mounted with contentId:\",\n      this.contentId\n    );\n\n    // Luôn tìm nạp ảnh mới khi component được tạo\n    if (this.hasContentId) {\n      this.localImage = null;\n      this.fetchContentImage();\n    }\n  },\n  methods: {\n    async fetchProjectStatus() {\n      try {\n        if (!this.hasProjectId) return;\n\n        const response = await axios.get(\n          `${this.apiEndpoint}/projects/${this.projectId}`\n        );\n        if (response.data.success) {\n          this.projectStatus = response.data.data.status;\n        }\n      } catch (error) {\n        console.error(\"Error fetching project status:\", error);\n        this.error = \"Could not fetch project status\";\n      }\n    },\n    async fetchContentImage() {\n      if (!this.contentId) {\n        console.log(\"[FinalStep] No contentId available to fetch image\");\n        this.localImage = null;\n        return;\n      }\n\n      try {\n        console.log(\n          `[FinalStep] Starting to fetch image for content ID: ${this.contentId} (fromDashboard: ${this.fromDashboard})`\n        );\n        this.imageLoading = true;\n        this.imageError = null;\n\n        // Thêm timestamp để tránh cache\n        const response = await axios.get(\n          `/api/content/contents/${this.contentId}?_t=${Date.now()}`\n        );\n\n        console.log(\n          `[FinalStep] Content API response for ID ${this.contentId}:`,\n          response.data\n        );\n\n        if (response.data && response.data.success) {\n          const contentData = response.data.data;\n\n          if (contentData && contentData.imageUrl) {\n            console.log(\n              `[FinalStep] Found image URL for content ${this.contentId}:`,\n              contentData.imageUrl\n            );\n\n            // Kiểm tra nếu URL có chứa tên tệp từ thư mục outputs\n            const isServiceImage =\n              contentData.imageUrl.includes(\"/images/\") ||\n              contentData.imageUrl.includes(\"localhost:8000\");\n\n            // Xử lý URL dựa trên loại ảnh\n            let finalImageUrl = contentData.imageUrl;\n\n            if (isServiceImage) {\n              console.log(\"[FinalStep] Detected image from FastAPI service\");\n\n              // Kiểm tra xem URL đã đầy đủ chưa\n              if (!finalImageUrl.startsWith(\"http\")) {\n                const FASTAPI_URL = \"http://localhost:8000\"; // Hoặc lấy từ biến môi trường\n\n                // Nếu URL chỉ chứa filename\n                if (\n                  finalImageUrl.includes(\"/images/\") &&\n                  !finalImageUrl.includes(FASTAPI_URL)\n                ) {\n                  finalImageUrl = `${FASTAPI_URL}${\n                    finalImageUrl.startsWith(\"/\")\n                      ? finalImageUrl\n                      : \"/\" + finalImageUrl\n                  }`;\n                }\n                // Nếu URL chỉ chứa filename không có /images/\n                else if (!finalImageUrl.includes(\"/images/\")) {\n                  const filename = finalImageUrl.split(\"/\").pop();\n                  finalImageUrl = `${FASTAPI_URL}/images/${filename}`;\n                }\n              }\n            } else if (\n              !finalImageUrl.startsWith(\"http\") &&\n              !finalImageUrl.startsWith(\"/api/\")\n            ) {\n              finalImageUrl = `/api/${\n                finalImageUrl.startsWith(\"/\")\n                  ? finalImageUrl.slice(1)\n                  : finalImageUrl\n              }`;\n            }\n\n            console.log(`[FinalStep] Final image URL: ${finalImageUrl}`);\n\n            // Kiểm tra xem ảnh có tồn tại không bằng cách gửi HEAD request\n            try {\n              await axios.head(finalImageUrl);\n              console.log(`[FinalStep] Image exists at URL: ${finalImageUrl}`);\n              this.localImage = finalImageUrl;\n              this.$emit(\"update:image\", finalImageUrl);\n            } catch (headError) {\n              console.error(\n                `[FinalStep] Image not accessible at ${finalImageUrl}:`,\n                headError\n              );\n              this.imageError = `Hình ảnh không tồn tại hoặc không thể truy cập`;\n              this.localImage = null;\n            }\n          } else {\n            console.log(\n              `[FinalStep] No image found for content ${this.contentId}`\n            );\n            this.localImage = null;\n          }\n        } else {\n          console.warn(\n            \"[FinalStep] API did not return success:\",\n            response.data\n          );\n          this.localImage = null;\n        }\n      } catch (error) {\n        console.error(\"[FinalStep] Error fetching content image:\", error);\n        this.imageError = \"Failed to load image: \" + error.message;\n        this.localImage = null;\n      } finally {\n        this.imageLoading = false;\n      }\n    },\n    async markAsFinished() {\n      try {\n        if (!this.hasProjectId) {\n          alert(\"Cannot update status: No project ID available\");\n          return;\n        }\n\n        this.loading = true;\n        const response = await axios.patch(\n          `${this.apiEndpoint}/projects/${this.projectId}/status`,\n          {\n            status: \"finished\",\n          }\n        );\n\n        if (response.data.success) {\n          this.projectStatus = \"finished\";\n        }\n      } catch (error) {\n        console.error(\"Error updating project status:\", error);\n        alert(\"Failed to update project status: \" + error.message);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async markAsInProgress() {\n      try {\n        if (!this.hasProjectId) {\n          alert(\"Cannot update status: No project ID available\");\n          return;\n        }\n\n        this.loading = true;\n        const response = await axios.patch(\n          `${this.apiEndpoint}/projects/${this.projectId}/status`,\n          {\n            status: \"in_progress\",\n          }\n        );\n\n        if (response.data.success) {\n          this.projectStatus = \"in_progress\";\n        }\n      } catch (error) {\n        console.error(\"Error updating project status:\", error);\n        alert(\"Failed to update project status: \" + error.message);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async saveContent() {\n      try {\n        if (!this.hasContentId) {\n          this.saveMessage = \"No content ID available. Cannot save.\";\n          this.saveStatus = \"error\";\n          return;\n        }\n\n        this.saveLoading = true;\n        this.saveMessage = null;\n\n        const response = await axios.put(\n          `${this.apiEndpoint}/content/contents/${this.contentId}`,\n          {\n            generatedContent: this.content,\n          }\n        );\n\n        if (response.data.success) {\n          this.saveMessage = \"Content saved successfully!\";\n          this.saveStatus = \"success\";\n        } else {\n          throw new Error(response.data.error || \"Unknown error occurred\");\n        }\n      } catch (error) {\n        console.error(\"Error saving content:\", error);\n        this.saveMessage = \"Failed to save content: \" + error.message;\n        this.saveStatus = \"error\";\n      } finally {\n        this.saveLoading = false;\n\n        // Clear message after 3 seconds\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n      }\n    },\n    exportContent() {\n      try {\n        // Tạo dữ liệu để export\n        const exportData = {\n          title: this.projectTitle || \"Untitled Content\",\n          content: this.content,\n          image: this.imageUrl,\n          createdAt: new Date().toISOString(),\n          projectInfo: {\n            id: this.projectId,\n            title: this.projectTitle,\n            description: this.projectDescription,\n          },\n        };\n\n        // Tạo JSON string\n        const dataStr = JSON.stringify(exportData, null, 2);\n\n        // Tạo blob để download\n        const blob = new Blob([dataStr], { type: \"application/json\" });\n        const url = URL.createObjectURL(blob);\n\n        // Tạo link và kích hoạt download\n        const a = document.createElement(\"a\");\n        a.download = `${this.projectTitle || \"content\"}_export.json`;\n        a.href = url;\n        a.click();\n\n        // Giải phóng URL object\n        URL.revokeObjectURL(url);\n\n        this.saveMessage = \"Content exported successfully!\";\n        this.saveStatus = \"success\";\n\n        // Clear message after 3 seconds\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n      } catch (error) {\n        console.error(\"Error exporting content:\", error);\n        this.saveMessage = \"Failed to export content: \" + error.message;\n        this.saveStatus = \"error\";\n\n        // Clear message after 3 seconds\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n      }\n    },\n    shareContent() {\n      // Xử lý chia sẻ nội dung - có thể thông qua email hoặc mạng xã hội\n      try {\n        // Kiểm tra nếu Web Share API được hỗ trợ\n        if (navigator.share) {\n          navigator\n            .share({\n              title: this.projectTitle || \"My Content\",\n              text: `Check out my content: ${this.projectTitle || \"Content\"}`,\n              url: window.location.href,\n            })\n            .then(() => {\n              this.saveMessage = \"Content shared successfully!\";\n              this.saveStatus = \"success\";\n            })\n            .catch((error) => {\n              throw error;\n            });\n        } else {\n          // Fallback - copy URL vào clipboard\n          navigator.clipboard.writeText(window.location.href).then(() => {\n            this.saveMessage = \"URL copied to clipboard!\";\n            this.saveStatus = \"success\";\n          });\n        }\n\n        // Clear message after 3 seconds\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n      } catch (error) {\n        console.error(\"Error sharing content:\", error);\n        this.saveMessage = \"Failed to share content: \" + error.message;\n        this.saveStatus = \"error\";\n\n        // Clear message after 3 seconds\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n      }\n    },\n    downloadPDF() {\n      try {\n        // Thông báo cho người dùng rằng chức năng đang được phát triển\n        this.saveMessage = \"PDF download feature will be available soon.\";\n        this.saveStatus = \"success\";\n\n        // Xóa thông báo sau 3 giây\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n\n        // NOTE: Chức năng này sẽ được triển khai trong bản cập nhật tới\n        // Sử dụng thư viện như jsPDF hoặc html2pdf.js để tạo PDF từ nội dung\n      } catch (error) {\n        console.error(\"Error downloading PDF:\", error);\n        this.saveMessage = \"Failed to download PDF: \" + error.message;\n        this.saveStatus = \"error\";\n\n        // Clear message after 3 seconds\n        setTimeout(() => {\n          this.saveMessage = null;\n        }, 3000);\n      }\n    },\n    goToDashboard() {\n      this.$emit(\"go-to-dashboard\");\n    },\n    async generateImageForContent() {\n      try {\n        this.imageLoading = true;\n        this.imageError = null;\n\n        // Hiển thị thông báo đang xử lý\n        this.showToast(\"Đang chuẩn bị tạo hình ảnh cho nội dung...\", \"info\");\n\n        if (!this.contentId) {\n          throw new Error(\"Không có ID nội dung để tạo hình ảnh\");\n        }\n\n        console.log(\n          `[FinalStep] Generating image for content ID: ${this.contentId}`\n        );\n\n        // Bước 1: Tạo prompt từ nội dung\n        const promptResponse = await axios.post(\n          `/api/content/contents/generate-prompt`,\n          {\n            contentId: this.contentId,\n            style: \"Realistic\",\n            template: `Generate a [STYLE] image of [SUBJECT], featuring [KEY DETAILS]. Style: [ART STYLE/MEDIUM], color palette: [COLORS], lighting: [LIGHTING], composition: [COMPOSITION]. Additional effects: [EFFECTS]. Keep the overall mood [MOOD]. Render in Kandinsky 2.2 with high detail, resolution [RESOLUTION].`,\n          },\n          {\n            timeout: 45000, // 45 seconds timeout for prompt generation\n          }\n        );\n\n        if (!promptResponse.data.success) {\n          throw new Error(\n            promptResponse.data.error || \"Lỗi khi tạo mô tả hình ảnh\"\n          );\n        }\n\n        const generatedPrompt = promptResponse.data.prompt;\n        console.log(\n          \"[FinalStep] Generated prompt:\",\n          generatedPrompt.substring(0, 100) + \"...\"\n        );\n\n        // Hiển thị thông báo prompt đã được tạo\n        this.showToast(\n          \"Đã tạo mô tả hình ảnh, đang tạo hình ảnh...\",\n          \"success\"\n        );\n\n        // Bước 2: Tạo hình ảnh từ prompt\n        const imageResponse = await axios.post(\n          `/api/image/generate`,\n          {\n            prompt: generatedPrompt,\n            style: \"Realistic\",\n            width: 512,\n            height: 512,\n            num_inference_steps: 30,\n          },\n          {\n            timeout: 180000, // 3 minutes timeout for image generation\n          }\n        );\n\n        if (!imageResponse.data.success) {\n          throw new Error(\n            imageResponse.data.error || \"Lỗi khi tạo hình ảnh từ mô tả\"\n          );\n        }\n\n        // Xử lý URL ảnh từ FastAPI\n        let imageUrl = \"\";\n        if (imageResponse.data.filename) {\n          // Nếu API trả về tên tệp, tạo URL đầy đủ\n          const FASTAPI_URL = \"http://localhost:8000\"; // Hoặc lấy từ biến môi trường\n          imageUrl = `${FASTAPI_URL}/images/${imageResponse.data.filename}`;\n        } else if (imageResponse.data.imageUrl) {\n          // Nếu API đã trả về URL đầy đủ\n          imageUrl = imageResponse.data.imageUrl;\n        } else {\n          throw new Error(\"API không trả về đường dẫn hình ảnh hợp lệ\");\n        }\n\n        console.log(`[FinalStep] Image URL from API: ${imageUrl}`);\n\n        // Bước 3: Cập nhật URL hình ảnh vào nội dung\n        const updateResponse = await axios.put(\n          `/api/content/contents/${this.contentId}`,\n          { imageUrl }\n        );\n\n        if (!updateResponse.data.success) {\n          throw new Error(\n            updateResponse.data.error || \"Lỗi khi cập nhật URL hình ảnh\"\n          );\n        }\n\n        // Cập nhật URL hình ảnh vào local state\n        console.log(`[FinalStep] Image created successfully: ${imageUrl}`);\n        this.localImage = imageUrl;\n        this.$emit(\"update:image\", imageUrl);\n\n        // Hiển thị thông báo thành công\n        this.showToast(\n          `Đã tạo hình ảnh thành công! Đường dẫn: ${imageUrl}`,\n          \"success\"\n        );\n\n        // Tự động tải lại ảnh sau khi tạo để đảm bảo hiển thị đúng\n        setTimeout(() => {\n          if (this.hasContentId) {\n            this.fetchContentImage();\n          }\n        }, 1000);\n      } catch (error) {\n        console.error(\"[FinalStep] Error generating image for content:\", error);\n\n        const errorMessage =\n          error.response?.data?.error || error.message || \"Lỗi không xác định\";\n        this.imageError = `Lỗi khi tạo hình ảnh: ${errorMessage}`;\n\n        // Hiển thị thông báo lỗi chi tiết hơn\n        if (error.response?.data?.details) {\n          this.showToast(\n            `Lỗi: ${errorMessage} (${error.response.data.details})`,\n            \"error\"\n          );\n        } else {\n          this.showToast(`Lỗi: ${errorMessage}`, \"error\");\n        }\n\n        // Thêm hướng dẫn cho người dùng tùy thuộc vào loại lỗi\n        if (error.message.includes(\"timeout\")) {\n          this.showToast(\n            \"Quá thời gian chờ phản hồi. Vui lòng thử lại sau hoặc giảm độ phức tạp của nội dung.\",\n            \"error\"\n          );\n        } else if (error.message.includes(\"connect\")) {\n          this.showToast(\n            \"Không thể kết nối đến máy chủ tạo ảnh. Vui lòng kiểm tra kết nối và thử lại sau.\",\n            \"error\"\n          );\n        }\n      } finally {\n        this.imageLoading = false;\n      }\n    },\n    showToast(message, type = \"info\") {\n      if (!this.toasts) this.toasts = [];\n\n      const id = Date.now();\n      this.toasts.push({ id, message, type });\n\n      // Tự động xóa sau 5 giây\n      setTimeout(() => {\n        this.removeToast(id);\n      }, 5000);\n    },\n    removeToast(id) {\n      if (this.toasts) {\n        this.toasts = this.toasts.filter((toast) => toast.id !== id);\n      }\n    },\n    forceRefreshImage() {\n      console.log(\n        \"[FinalStep] Force refreshing image for content:\",\n        this.contentId\n      );\n      this.localImage = null;\n      this.imageError = null;\n      this.showToast(\"Đang tải lại hình ảnh...\", \"info\");\n      this.fetchContentImage();\n    },\n  },\n  watch: {\n    generatedImage: {\n      immediate: true,\n      handler(newValue, oldValue) {\n        if (newValue !== oldValue) {\n          console.log(\"generatedImage changed:\", newValue);\n          this.localImage = newValue;\n        }\n      },\n    },\n    contentId: {\n      immediate: true,\n      handler(newValue, oldValue) {\n        if (newValue && newValue !== oldValue) {\n          console.log(\"Content ID changed from\", oldValue, \"to\", newValue);\n          this.localImage = null;\n          this.fetchContentImage();\n        }\n      },\n    },\n  },\n};\n</script>\n\n<style scoped>\n.step-content {\n  background: white;\n  border-radius: 12px;\n  padding: 2rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\nh2 {\n  color: #1c1c4c;\n  margin-bottom: 1.5rem;\n  text-align: center;\n  font-weight: 600;\n}\n\n.project-info {\n  background: #f8f9fa;\n  border-radius: 8px;\n  padding: 1rem;\n  margin-bottom: 2rem;\n}\n\n.project-info h3 {\n  color: #1c1c4c;\n  margin: 0 0 0.5rem 0;\n}\n\n.project-info p {\n  color: #6c757d;\n  margin: 0 0 1rem 0;\n}\n\n.project-status {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 0.5rem;\n}\n\n.status-badge {\n  font-size: 0.75rem;\n  padding: 0.25rem 0.5rem;\n  border-radius: 12px;\n  font-weight: bold;\n}\n\n.status-badge.in_progress {\n  background-color: #ecedf7;\n  color: #1c1c4c;\n}\n\n.status-badge.finished {\n  background-color: #e8f5e9;\n  color: #28a745;\n}\n\n.status-button {\n  background: transparent;\n  border: 1px solid #1c1c4c;\n  color: #1c1c4c;\n  padding: 0.25rem 0.75rem;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 0.8rem;\n  transition: all 0.3s ease;\n}\n\n.status-button:hover {\n  background: #ecedf7;\n}\n\n.final-content {\n  display: grid;\n  gap: 2rem;\n  margin-bottom: 2rem;\n}\n\n.final-content h3 {\n  margin-bottom: 1rem;\n  color: #1c1c4c;\n  font-weight: 600;\n}\n\n.content-box {\n  white-space: pre-wrap;\n  line-height: 1.6;\n  font-family: \"Arial\", sans-serif;\n  padding: 1.5rem;\n  background: white;\n  border-radius: 8px;\n  border: 1px solid #e9ecef;\n  max-height: 400px;\n  overflow-y: auto;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n}\n\n.content-box p {\n  margin-bottom: 1rem;\n}\n\n.content-box h1,\n.content-box h2,\n.content-box h3,\n.content-box h4,\n.content-box h5,\n.content-box h6 {\n  margin-top: 1.5rem;\n  margin-bottom: 1rem;\n  color: #1c1c4c;\n}\n\n.final-image-section {\n  background: #f8f9fa;\n  border-radius: 8px;\n  padding: 2rem;\n  margin-bottom: 2rem;\n}\n\n.final-image-section h3 {\n  margin-bottom: 1.5rem;\n  color: #1c1c4c;\n  font-weight: 600;\n}\n\n.image-section {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.image-section img {\n  max-width: 100%;\n  max-height: 300px;\n  object-fit: contain;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.no-image-placeholder {\n  width: 100%;\n  height: 200px;\n  background: #e9ecef;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border-radius: 8px;\n  color: #6c757d;\n  font-style: italic;\n  padding: 1rem;\n  text-align: center;\n  margin-bottom: 1rem;\n}\n\n.no-image-placeholder p {\n  margin-top: 0.5rem;\n  font-size: 0.9rem;\n}\n\n.image-actions {\n  margin-top: 1rem;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n}\n\n.final-actions {\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n}\n\n.additional-actions {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n  justify-content: center;\n}\n\n.navigation-buttons {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  justify-content: center;\n}\n\n.action-buttons {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n  justify-content: center;\n}\n\n.btn {\n  min-width: 120px;\n  text-align: center;\n  padding: 0.75rem 1.25rem;\n  border-radius: 6px;\n  font-size: 0.9rem;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n}\n\n.btn-primary {\n  background: #1c1c4c;\n  color: white;\n  border: none;\n}\n\n.btn-primary:hover {\n  background: #2a2a6c;\n}\n\n.btn-outline-primary {\n  background: transparent;\n  border: 1px solid #1c1c4c;\n  color: #1c1c4c;\n}\n\n.btn-outline-primary:hover {\n  background: #ecedf7;\n}\n\n.btn-light {\n  background: white;\n  color: #1c1c4c;\n  border: 1px solid #1c1c4c;\n}\n\n.btn-light:hover {\n  background: #f8f9fa;\n}\n\n.btn-info {\n  background: white;\n  color: #1c1c4c;\n  border: 1px solid #1c1c4c;\n}\n\n.btn-info:hover {\n  background: #f8f9fa;\n}\n\n.btn-success {\n  background: #1c1c4c;\n  color: white;\n  border: none;\n}\n\n.btn-success:hover {\n  background: #2a2a6c;\n}\n\n.error-message {\n  color: #dc3545;\n  font-size: 0.9rem;\n  margin-top: 0.5rem;\n}\n\n.project-info.warning {\n  background-color: #fff3cd;\n  border: 1px solid #ffeeba;\n  color: #856404;\n}\n\n.status-button:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n.save-message {\n  margin-top: 1rem;\n  padding: 0.75rem;\n  border-radius: 4px;\n  text-align: center;\n  font-size: 0.9rem;\n}\n\n.save-message.success {\n  background-color: #e8f5e9;\n  color: #2e7d32;\n}\n\n.save-message.error {\n  background-color: #ffebee;\n  color: #c62828;\n}\n\n@media (max-width: 768px) {\n  .action-buttons,\n  .navigation-buttons,\n  .additional-actions {\n    flex-direction: column;\n    width: 100%;\n  }\n\n  .action-buttons button,\n  .navigation-buttons button,\n  .additional-actions button {\n    width: 100%;\n    margin-bottom: 0.5rem;\n  }\n\n  .btn {\n    width: 100%;\n  }\n}\n\n/* Toast Styles */\n.toast-container {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  max-width: 350px;\n}\n\n.toast-message {\n  padding: 12px 16px;\n  border-radius: 6px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  animation: slide-in 0.3s ease-out forwards;\n  cursor: pointer;\n  color: white;\n}\n\n.toast-success {\n  background-color: #42b983;\n}\n\n.toast-error {\n  background-color: #e74c3c;\n}\n\n.toast-info {\n  background-color: #3498db;\n}\n\n.toast-close-btn {\n  background: none;\n  border: none;\n  color: white;\n  font-size: 20px;\n  cursor: pointer;\n  margin-left: 8px;\n  opacity: 0.7;\n}\n\n.toast-close-btn:hover {\n  opacity: 1;\n}\n\n@keyframes slide-in {\n  from {\n    transform: translateX(100%);\n    opacity: 0;\n  }\n  to {\n    transform: translateX(0);\n    opacity: 1;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}