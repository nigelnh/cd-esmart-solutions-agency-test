{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"EditorStep\",\n  props: {\n    initialContent: {\n      type: String,\n      default: \"\"\n    },\n    suggestedKeywords: {\n      type: Array,\n      default: () => []\n    },\n    readabilityScore: {\n      type: Number,\n      default: 0\n    },\n    contentLength: {\n      type: Number,\n      default: 0\n    },\n    contentId: {\n      type: String,\n      default: \"\"\n    }\n  },\n  data() {\n    return {\n      content: this.initialContent || \"\",\n      seoData: null,\n      isAnalyzing: false,\n      isOptimizing: false,\n      lastSavedContent: \"\",\n      optimizationCount: 0,\n      maxOptimizations: 3\n    };\n  },\n  computed: {\n    keywordsList() {\n      return this.suggestedKeywords || [];\n    },\n    wordCount() {\n      if (!this.content) return 0;\n      return this.content.trim().split(/\\s+/).length;\n    }\n  },\n  methods: {\n    updateContent() {\n      if (this.content !== null && this.content !== undefined) {\n        this.$emit(\"update:content\", this.content);\n      }\n    },\n    goBack() {\n      if (this.contentId) {\n        this.$emit(\"go-to-dashboard\");\n      } else {\n        this.$emit(\"prev\");\n      }\n    },\n    async saveContent() {\n      try {\n        if (!this.contentId) {\n          console.error(\"Cannot save: No content ID provided\");\n          return;\n        }\n\n        // Nếu nội dung không thay đổi, không cần lưu và phân tích lại\n        if (this.content === this.lastSavedContent) {\n          this.showNotification(\"info\", \"Save Content\", \"No changes to save\");\n          return;\n        }\n\n        // Nếu đang phân tích hoặc đang tối ưu, không thực hiện lưu và phân tích lại\n        if (this.isAnalyzing || this.isOptimizing) {\n          this.showNotification(\"info\", \"Save Content\", \"Please wait for current analysis to complete\");\n          return;\n        }\n        this.showNotification(\"info\", \"Save Content\", \"Saving your content...\");\n        const response = await axios.put(`/api/content/contents/${this.contentId}`, {\n          generatedContent: this.content\n        });\n        if (response.data.success) {\n          this.lastSavedContent = this.content;\n          this.showNotification(\"success\", \"Save Content\", \"Content saved successfully!\");\n\n          // Chỉ phân tích SEO nếu chưa đạt giới hạn và chưa có phân tích SEO hoặc điểm < 80\n          if (this.optimizationCount < this.maxOptimizations && (!this.seoData || (this.seoData.seoScore || this.seoData.score) < 80)) {\n            // Thêm độ trễ 1 giây để tránh gọi API liên tục\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            await this.autoAnalyzeAndOptimize();\n          }\n        } else {\n          this.showNotification(\"error\", \"Save Content\", \"Failed to save content: \" + response.data.error);\n        }\n      } catch (error) {\n        console.error(\"Error saving content:\", error);\n        this.showNotification(\"error\", \"Save Content\", \"Error saving content: \" + error.message);\n      }\n    },\n    async autoAnalyzeAndOptimize() {\n      // Nếu đã đạt giới hạn số lần tối ưu, hiển thị thông báo và không tiếp tục\n      if (this.optimizationCount >= this.maxOptimizations) {\n        console.log(`Đã đạt giới hạn tối ưu (${this.maxOptimizations} lần)`);\n        return;\n      }\n\n      // Nếu đang phân tích hoặc đang tối ưu, không thực hiện thêm\n      if (this.isAnalyzing || this.isOptimizing) {\n        console.log(\"Đang trong quá trình phân tích hoặc tối ưu, không thực hiện thêm\");\n        return;\n      }\n      try {\n        await this.analyzeSEO();\n\n        // Kiểm tra nếu có seoData và điểm số < 80\n        if (this.seoData && (this.seoData.seoScore || this.seoData.score) < 80) {\n          // Kiểm tra nếu có điểm số hợp lệ và chưa đạt giới hạn số lần\n          if (this.optimizationCount < this.maxOptimizations) {\n            // Thêm độ trễ 1 giây để tránh gọi API liên tục\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            await this.autoOptimizeSEO();\n          }\n        } else {\n          console.log(\"Điểm SEO đã đạt chuẩn hoặc không có dữ liệu SEO, không cần tối ưu\");\n        }\n      } catch (error) {\n        console.error(\"Lỗi trong quá trình phân tích hoặc tối ưu SEO:\", error);\n      }\n    },\n    async analyzeSEO() {\n      if (!this.contentId) {\n        return;\n      }\n      try {\n        this.isAnalyzing = true;\n\n        // Gọi API phân tích SEO\n        const response = await axios.post(`/api/seo/analyze/${this.contentId}`);\n        if (response.data.success) {\n          this.seoData = response.data.data.analysis;\n          console.log(\"SEO Analysis completed:\", this.seoData);\n        } else {\n          console.error(\"Failed to analyze SEO:\", response.data.error);\n        }\n      } catch (error) {\n        console.error(\"Error analyzing SEO:\", error);\n      } finally {\n        this.isAnalyzing = false;\n      }\n    },\n    async optimizeSEO() {\n      if (!this.contentId) {\n        return;\n      }\n\n      // Kiểm tra giới hạn số lần tối ưu hóa\n      if (this.optimizationCount >= this.maxOptimizations) {\n        this.showNotification(\"info\", \"SEO Optimization\", `Reached maximum optimizations limit (${this.maxOptimizations}).`);\n        return;\n      }\n      try {\n        this.isOptimizing = true;\n        this.showNotification(\"info\", \"SEO Optimization\", \"Optimizing your content...\");\n\n        // Gọi API tối ưu hóa SEO\n        const response = await axios.post(`/api/seo/optimize/${this.contentId}`);\n        if (response.data.success) {\n          const result = response.data.data;\n          if (result.optimized) {\n            // Cập nhật nội dung và điểm số\n            this.content = result.content.generatedContent;\n            this.lastSavedContent = this.content; // Cập nhật nội dung đã lưu\n            this.seoData = await this.fetchSEOData();\n            this.updateContent();\n\n            // Tăng số lần đã tối ưu hóa\n            this.optimizationCount++;\n\n            // Hiển thị thông báo thành công\n            this.showNotification(\"success\", \"SEO Optimization\", `Content optimized! SEO Score: ${result.previousScore} → ${result.newScore} (${this.optimizationCount}/${this.maxOptimizations})`);\n          } else {\n            // Hiển thị thông báo nếu không thể tối ưu thêm\n            this.showNotification(\"info\", \"SEO Optimization\", result.message);\n          }\n        } else {\n          console.error(\"Failed to optimize SEO:\", response.data.error);\n        }\n      } catch (error) {\n        console.error(\"Error optimizing SEO:\", error);\n      } finally {\n        this.isOptimizing = false;\n      }\n    },\n    async autoOptimizeSEO() {\n      if (!this.contentId) {\n        return;\n      }\n\n      // Kiểm tra giới hạn số lần tối ưu hóa\n      if (this.optimizationCount >= this.maxOptimizations) {\n        this.showNotification(\"info\", \"SEO Optimization\", `Reached maximum optimizations limit (${this.maxOptimizations}).`);\n        return;\n      }\n      try {\n        this.isOptimizing = true;\n\n        // Gọi API tự động tối ưu hóa với giới hạn số lần còn lại\n        const remainingOptimizations = this.maxOptimizations - this.optimizationCount;\n        const response = await axios.post(`/api/seo/auto-optimize/${this.contentId}`, {\n          maxOptimizations: remainingOptimizations,\n          targetScore: 80\n        });\n        if (response.data.success) {\n          const result = response.data.data;\n\n          // Cập nhật nội dung và điểm số\n          this.content = result.finalReport.content;\n          this.lastSavedContent = this.content; // Cập nhật nội dung đã lưu\n          this.updateContent();\n          this.seoData = {\n            seoScore: result.finalScore,\n            keywordDensity: result.finalReport.keywordDensity,\n            readabilityScore: result.finalReport.readabilityScore,\n            suggestedKeywords: result.finalReport.suggestedKeywords,\n            detailedAnalysis: result.finalReport.detailedAnalysis\n          };\n\n          // Cập nhật số lần tối ưu hóa\n          this.optimizationCount += result.optimizationCount || 1;\n\n          // Hiển thị thông báo thành công\n          this.showNotification(\"success\", \"SEO Optimization\", `Automatic optimization completed! SEO Score: ${result.initialScore} → ${result.finalScore} (${this.optimizationCount}/${this.maxOptimizations})`);\n        } else {\n          console.error(\"Failed to auto optimize SEO:\", response.data.error);\n        }\n      } catch (error) {\n        console.error(\"Error auto optimizing SEO:\", error);\n      } finally {\n        this.isOptimizing = false;\n      }\n    },\n    async fetchSEOData() {\n      try {\n        const response = await axios.get(`/api/seo/report/${this.contentId}`);\n        if (response.data.success) {\n          return {\n            seoScore: response.data.data.seoScore,\n            keywordDensity: response.data.data.keywordDensity,\n            readabilityScore: response.data.data.readabilityScore,\n            suggestedKeywords: response.data.data.suggestedKeywords,\n            detailedAnalysis: response.data.data.detailedAnalysis\n          };\n        }\n        return null;\n      } catch (error) {\n        console.error(\"Error fetching SEO data:\", error);\n        return null;\n      }\n    },\n    getSEOScoreClass() {\n      if (!this.seoData) return \"poor\";\n      const score = this.seoData.seoScore || this.seoData.score || 0;\n      if (score >= 80) return \"excellent\";\n      if (score >= 60) return \"good\";\n      if (score >= 40) return \"average\";\n      return \"poor\";\n    },\n    formatCategoryName(key) {\n      return key.replace(/([A-Z])/g, \" $1\").replace(/^./, str => str.toUpperCase());\n    },\n    showNotification(type, title, text) {\n      try {\n        if (this.$notify) {\n          this.$notify({\n            type: type,\n            title: title,\n            text: text\n          });\n        } else {\n          console.log(`${title}: ${text}`);\n          if (type === \"success\" || type === \"info\") {\n            alert(`${title}: ${text}`);\n          }\n        }\n      } catch (error) {\n        console.log(`${title}: ${text}`);\n        alert(`${title}: ${text}`);\n      }\n    },\n    // Reset các biến theo dõi khi có nội dung mới\n    resetOptimizationCount() {\n      this.optimizationCount = 0;\n    }\n  },\n  watch: {\n    initialContent(newValue) {\n      this.content = newValue || \"\";\n      if (newValue && newValue !== this.lastSavedContent) {\n        this.lastSavedContent = newValue;\n        // Reset số lần tối ưu hóa khi có nội dung mới\n        this.resetOptimizationCount();\n      }\n    },\n    contentId: {\n      immediate: true,\n      async handler(newValue) {\n        if (newValue) {\n          // Nếu có contentId, kiểm tra xem đã có dữ liệu SEO chưa\n          const seoData = await this.fetchSEOData();\n          if (seoData) {\n            this.seoData = seoData;\n          } else {\n            // Nếu chưa có dữ liệu SEO, tự động phân tích\n            await this.analyzeSEO();\n          }\n        }\n      }\n    }\n  },\n  mounted() {\n    this.content = this.initialContent || \"\";\n    this.lastSavedContent = this.initialContent || \"\";\n    if (this.content) {\n      this.updateContent();\n    }\n\n    // Kiểm tra trước khi phân tích SEO tự động\n    if (this.contentId && !this.seoData && !this.isAnalyzing && !this.isOptimizing) {\n      // Thêm độ trễ nhỏ để đảm bảo component đã render xong\n      this.$nextTick(() => {\n        // Sử dụng setTimeout để tránh gọi API quá sớm\n        setTimeout(async () => {\n          // Chỉ phân tích nếu chưa đạt giới hạn tối ưu\n          if (this.optimizationCount < this.maxOptimizations) {\n            console.log(\"Initial SEO analysis...\");\n            await this.analyzeSEO();\n\n            // Chỉ tối ưu nếu điểm thấp và chưa đạt giới hạn\n            if (this.seoData && (this.seoData.seoScore || this.seoData.score) < 80 && this.optimizationCount < this.maxOptimizations) {\n              await this.autoOptimizeSEO();\n            }\n          }\n        }, 1000);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","initialContent","type","String","default","suggestedKeywords","Array","readabilityScore","Number","contentLength","contentId","data","content","seoData","isAnalyzing","isOptimizing","lastSavedContent","optimizationCount","maxOptimizations","computed","keywordsList","wordCount","trim","split","length","methods","updateContent","undefined","$emit","goBack","saveContent","console","error","showNotification","response","put","generatedContent","success","seoScore","score","Promise","resolve","setTimeout","autoAnalyzeAndOptimize","message","log","analyzeSEO","autoOptimizeSEO","post","analysis","optimizeSEO","result","optimized","fetchSEOData","previousScore","newScore","remainingOptimizations","targetScore","finalReport","finalScore","keywordDensity","detailedAnalysis","initialScore","get","getSEOScoreClass","formatCategoryName","key","replace","str","toUpperCase","title","text","$notify","alert","resetOptimizationCount","watch","newValue","immediate","handler","mounted","$nextTick"],"sources":["/Users/nhannguyen/Desktop/Duan/esmart-solutions-agency/src/components/creator-ai/EditorStep.vue"],"sourcesContent":["<template>\n  <div class=\"step-content\">\n    <h2>Content Editor</h2>\n    <div class=\"editor-container\">\n      <div class=\"main-content\">\n        <textarea\n          v-model=\"content\"\n          placeholder=\"Your AI-generated content will appear here...\"\n          @input=\"updateContent\"\n        ></textarea>\n\n        <div class=\"editor-actions\">\n          <button\n            class=\"action-button seo-optimize\"\n            @click=\"optimizeSEO\"\n            v-if=\"\n              contentId &&\n              seoData &&\n              seoData.seoScore < 80 &&\n              !isOptimizing &&\n              optimizationCount < maxOptimizations\n            \"\n          >\n            <i class=\"fas fa-magic\"></i> Optimize Content ({{\n              optimizationCount\n            }}/{{ maxOptimizations }})\n          </button>\n          <button\n            class=\"action-button seo-optimize disabled\"\n            v-else-if=\"\n              contentId &&\n              seoData &&\n              optimizationCount >= maxOptimizations &&\n              !isOptimizing\n            \"\n            disabled\n          >\n            <i class=\"fas fa-magic\"></i> Optimization Limit Reached\n          </button>\n          <div v-if=\"isOptimizing\" class=\"optimizing-indicator\">\n            <span class=\"spinner\"></span> Optimizing SEO...\n          </div>\n          <div v-if=\"isAnalyzing\" class=\"analyzing-indicator\">\n            <span class=\"spinner\"></span> Analyzing content...\n          </div>\n        </div>\n      </div>\n      <div class=\"sidebar\">\n        <div class=\"sidebar-section\">\n          <h3>SEO Score</h3>\n          <div class=\"seo-score-container\" v-if=\"seoData\">\n            <div class=\"score-circle\" :class=\"getSEOScoreClass()\">\n              {{ seoData.seoScore || seoData.score || 0 }}/100\n            </div>\n            <div class=\"score-details\">\n              <div v-if=\"seoData.keywordDensity\" class=\"detail-item\">\n                <span class=\"detail-label\">Keyword Density:</span>\n                <span class=\"detail-value\"\n                  >{{ parseFloat(seoData.keywordDensity).toFixed(1) }}%</span\n                >\n              </div>\n              <div v-if=\"seoData.readabilityScore\" class=\"detail-item\">\n                <span class=\"detail-label\">Readability:</span>\n                <span class=\"detail-value\"\n                  >{{ seoData.readabilityScore }}/100</span\n                >\n              </div>\n              <div class=\"detail-item optimization-count\">\n                <span class=\"detail-label\">Optimizations:</span>\n                <span\n                  class=\"detail-value\"\n                  :class=\"{\n                    'limit-reached': optimizationCount >= maxOptimizations,\n                  }\"\n                >\n                  {{ optimizationCount }}/{{ maxOptimizations }}\n                </span>\n              </div>\n            </div>\n          </div>\n          <div v-else class=\"empty-seo-data\">\n            <p v-if=\"isAnalyzing\">Analyzing SEO...</p>\n            <p v-else>\n              SEO analysis will run automatically when content is saved.\n            </p>\n          </div>\n        </div>\n\n        <div class=\"sidebar-section\">\n          <h3>SEO Keywords</h3>\n          <ul>\n            <li v-for=\"(keyword, index) in keywordsList\" :key=\"index\">\n              {{ keyword }}\n            </li>\n          </ul>\n          <div\n            v-if=\"\n              seoData &&\n              seoData.suggestedKeywords &&\n              seoData.suggestedKeywords.length > 0\n            \"\n          >\n            <h4>Suggested Keywords</h4>\n            <ul class=\"suggested-keywords\">\n              <li\n                v-for=\"(keyword, index) in seoData.suggestedKeywords\"\n                :key=\"`sug-${index}`\"\n              >\n                {{ keyword }}\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <div class=\"sidebar-section\">\n          <h3>Content Length</h3>\n          <div class=\"length\">{{ wordCount }} words</div>\n        </div>\n\n        <div\n          v-if=\"seoData && seoData.detailedAnalysis\"\n          class=\"sidebar-section seo-analysis\"\n        >\n          <h3>SEO Analysis</h3>\n          <div\n            v-for=\"(category, key) in seoData.detailedAnalysis\"\n            :key=\"key\"\n            class=\"analysis-category\"\n          >\n            <h4>{{ formatCategoryName(key) }} ({{ category.score }}/100)</h4>\n            <div class=\"improvement-list\" v-if=\"category.improvements\">\n              <p class=\"improvement-title\">Improvement Suggestions:</p>\n              <ul>\n                <li\n                  v-for=\"(improvement, i) in category.improvements.slice(0, 3)\"\n                  :key=\"i\"\n                >\n                  {{ improvement }}\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"button-group\">\n      <button class=\"secondary-button\" @click=\"goBack\">Back</button>\n      <button class=\"primary-button-save\" @click=\"saveContent\" v-if=\"contentId\">\n        Save Changes\n      </button>\n      <button class=\"primary-button\" @click=\"$emit('next')\">\n        Generate Image\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"EditorStep\",\n  props: {\n    initialContent: {\n      type: String,\n      default: \"\",\n    },\n    suggestedKeywords: {\n      type: Array,\n      default: () => [],\n    },\n    readabilityScore: {\n      type: Number,\n      default: 0,\n    },\n    contentLength: {\n      type: Number,\n      default: 0,\n    },\n    contentId: {\n      type: String,\n      default: \"\",\n    },\n  },\n  data() {\n    return {\n      content: this.initialContent || \"\",\n      seoData: null,\n      isAnalyzing: false,\n      isOptimizing: false,\n      lastSavedContent: \"\",\n      optimizationCount: 0,\n      maxOptimizations: 3,\n    };\n  },\n  computed: {\n    keywordsList() {\n      return this.suggestedKeywords || [];\n    },\n    wordCount() {\n      if (!this.content) return 0;\n      return this.content.trim().split(/\\s+/).length;\n    },\n  },\n  methods: {\n    updateContent() {\n      if (this.content !== null && this.content !== undefined) {\n        this.$emit(\"update:content\", this.content);\n      }\n    },\n    goBack() {\n      if (this.contentId) {\n        this.$emit(\"go-to-dashboard\");\n      } else {\n        this.$emit(\"prev\");\n      }\n    },\n    async saveContent() {\n      try {\n        if (!this.contentId) {\n          console.error(\"Cannot save: No content ID provided\");\n          return;\n        }\n\n        // Nếu nội dung không thay đổi, không cần lưu và phân tích lại\n        if (this.content === this.lastSavedContent) {\n          this.showNotification(\"info\", \"Save Content\", \"No changes to save\");\n          return;\n        }\n\n        // Nếu đang phân tích hoặc đang tối ưu, không thực hiện lưu và phân tích lại\n        if (this.isAnalyzing || this.isOptimizing) {\n          this.showNotification(\n            \"info\",\n            \"Save Content\",\n            \"Please wait for current analysis to complete\"\n          );\n          return;\n        }\n\n        this.showNotification(\"info\", \"Save Content\", \"Saving your content...\");\n\n        const response = await axios.put(\n          `/api/content/contents/${this.contentId}`,\n          {\n            generatedContent: this.content,\n          }\n        );\n\n        if (response.data.success) {\n          this.lastSavedContent = this.content;\n          this.showNotification(\n            \"success\",\n            \"Save Content\",\n            \"Content saved successfully!\"\n          );\n\n          // Chỉ phân tích SEO nếu chưa đạt giới hạn và chưa có phân tích SEO hoặc điểm < 80\n          if (\n            this.optimizationCount < this.maxOptimizations &&\n            (!this.seoData ||\n              (this.seoData.seoScore || this.seoData.score) < 80)\n          ) {\n            // Thêm độ trễ 1 giây để tránh gọi API liên tục\n            await new Promise((resolve) => setTimeout(resolve, 1000));\n            await this.autoAnalyzeAndOptimize();\n          }\n        } else {\n          this.showNotification(\n            \"error\",\n            \"Save Content\",\n            \"Failed to save content: \" + response.data.error\n          );\n        }\n      } catch (error) {\n        console.error(\"Error saving content:\", error);\n        this.showNotification(\n          \"error\",\n          \"Save Content\",\n          \"Error saving content: \" + error.message\n        );\n      }\n    },\n\n    async autoAnalyzeAndOptimize() {\n      // Nếu đã đạt giới hạn số lần tối ưu, hiển thị thông báo và không tiếp tục\n      if (this.optimizationCount >= this.maxOptimizations) {\n        console.log(`Đã đạt giới hạn tối ưu (${this.maxOptimizations} lần)`);\n        return;\n      }\n\n      // Nếu đang phân tích hoặc đang tối ưu, không thực hiện thêm\n      if (this.isAnalyzing || this.isOptimizing) {\n        console.log(\n          \"Đang trong quá trình phân tích hoặc tối ưu, không thực hiện thêm\"\n        );\n        return;\n      }\n\n      try {\n        await this.analyzeSEO();\n\n        // Kiểm tra nếu có seoData và điểm số < 80\n        if (\n          this.seoData &&\n          (this.seoData.seoScore || this.seoData.score) < 80\n        ) {\n          // Kiểm tra nếu có điểm số hợp lệ và chưa đạt giới hạn số lần\n          if (this.optimizationCount < this.maxOptimizations) {\n            // Thêm độ trễ 1 giây để tránh gọi API liên tục\n            await new Promise((resolve) => setTimeout(resolve, 1000));\n            await this.autoOptimizeSEO();\n          }\n        } else {\n          console.log(\n            \"Điểm SEO đã đạt chuẩn hoặc không có dữ liệu SEO, không cần tối ưu\"\n          );\n        }\n      } catch (error) {\n        console.error(\"Lỗi trong quá trình phân tích hoặc tối ưu SEO:\", error);\n      }\n    },\n\n    async analyzeSEO() {\n      if (!this.contentId) {\n        return;\n      }\n\n      try {\n        this.isAnalyzing = true;\n\n        // Gọi API phân tích SEO\n        const response = await axios.post(`/api/seo/analyze/${this.contentId}`);\n\n        if (response.data.success) {\n          this.seoData = response.data.data.analysis;\n          console.log(\"SEO Analysis completed:\", this.seoData);\n        } else {\n          console.error(\"Failed to analyze SEO:\", response.data.error);\n        }\n      } catch (error) {\n        console.error(\"Error analyzing SEO:\", error);\n      } finally {\n        this.isAnalyzing = false;\n      }\n    },\n\n    async optimizeSEO() {\n      if (!this.contentId) {\n        return;\n      }\n\n      // Kiểm tra giới hạn số lần tối ưu hóa\n      if (this.optimizationCount >= this.maxOptimizations) {\n        this.showNotification(\n          \"info\",\n          \"SEO Optimization\",\n          `Reached maximum optimizations limit (${this.maxOptimizations}).`\n        );\n        return;\n      }\n\n      try {\n        this.isOptimizing = true;\n        this.showNotification(\n          \"info\",\n          \"SEO Optimization\",\n          \"Optimizing your content...\"\n        );\n\n        // Gọi API tối ưu hóa SEO\n        const response = await axios.post(\n          `/api/seo/optimize/${this.contentId}`\n        );\n\n        if (response.data.success) {\n          const result = response.data.data;\n\n          if (result.optimized) {\n            // Cập nhật nội dung và điểm số\n            this.content = result.content.generatedContent;\n            this.lastSavedContent = this.content; // Cập nhật nội dung đã lưu\n            this.seoData = await this.fetchSEOData();\n            this.updateContent();\n\n            // Tăng số lần đã tối ưu hóa\n            this.optimizationCount++;\n\n            // Hiển thị thông báo thành công\n            this.showNotification(\n              \"success\",\n              \"SEO Optimization\",\n              `Content optimized! SEO Score: ${result.previousScore} → ${result.newScore} (${this.optimizationCount}/${this.maxOptimizations})`\n            );\n          } else {\n            // Hiển thị thông báo nếu không thể tối ưu thêm\n            this.showNotification(\"info\", \"SEO Optimization\", result.message);\n          }\n        } else {\n          console.error(\"Failed to optimize SEO:\", response.data.error);\n        }\n      } catch (error) {\n        console.error(\"Error optimizing SEO:\", error);\n      } finally {\n        this.isOptimizing = false;\n      }\n    },\n\n    async autoOptimizeSEO() {\n      if (!this.contentId) {\n        return;\n      }\n\n      // Kiểm tra giới hạn số lần tối ưu hóa\n      if (this.optimizationCount >= this.maxOptimizations) {\n        this.showNotification(\n          \"info\",\n          \"SEO Optimization\",\n          `Reached maximum optimizations limit (${this.maxOptimizations}).`\n        );\n        return;\n      }\n\n      try {\n        this.isOptimizing = true;\n\n        // Gọi API tự động tối ưu hóa với giới hạn số lần còn lại\n        const remainingOptimizations =\n          this.maxOptimizations - this.optimizationCount;\n        const response = await axios.post(\n          `/api/seo/auto-optimize/${this.contentId}`,\n          {\n            maxOptimizations: remainingOptimizations,\n            targetScore: 80,\n          }\n        );\n\n        if (response.data.success) {\n          const result = response.data.data;\n\n          // Cập nhật nội dung và điểm số\n          this.content = result.finalReport.content;\n          this.lastSavedContent = this.content; // Cập nhật nội dung đã lưu\n          this.updateContent();\n\n          this.seoData = {\n            seoScore: result.finalScore,\n            keywordDensity: result.finalReport.keywordDensity,\n            readabilityScore: result.finalReport.readabilityScore,\n            suggestedKeywords: result.finalReport.suggestedKeywords,\n            detailedAnalysis: result.finalReport.detailedAnalysis,\n          };\n\n          // Cập nhật số lần tối ưu hóa\n          this.optimizationCount += result.optimizationCount || 1;\n\n          // Hiển thị thông báo thành công\n          this.showNotification(\n            \"success\",\n            \"SEO Optimization\",\n            `Automatic optimization completed! SEO Score: ${result.initialScore} → ${result.finalScore} (${this.optimizationCount}/${this.maxOptimizations})`\n          );\n        } else {\n          console.error(\"Failed to auto optimize SEO:\", response.data.error);\n        }\n      } catch (error) {\n        console.error(\"Error auto optimizing SEO:\", error);\n      } finally {\n        this.isOptimizing = false;\n      }\n    },\n\n    async fetchSEOData() {\n      try {\n        const response = await axios.get(`/api/seo/report/${this.contentId}`);\n\n        if (response.data.success) {\n          return {\n            seoScore: response.data.data.seoScore,\n            keywordDensity: response.data.data.keywordDensity,\n            readabilityScore: response.data.data.readabilityScore,\n            suggestedKeywords: response.data.data.suggestedKeywords,\n            detailedAnalysis: response.data.data.detailedAnalysis,\n          };\n        }\n        return null;\n      } catch (error) {\n        console.error(\"Error fetching SEO data:\", error);\n        return null;\n      }\n    },\n\n    getSEOScoreClass() {\n      if (!this.seoData) return \"poor\";\n\n      const score = this.seoData.seoScore || this.seoData.score || 0;\n      if (score >= 80) return \"excellent\";\n      if (score >= 60) return \"good\";\n      if (score >= 40) return \"average\";\n      return \"poor\";\n    },\n\n    formatCategoryName(key) {\n      return key\n        .replace(/([A-Z])/g, \" $1\")\n        .replace(/^./, (str) => str.toUpperCase());\n    },\n\n    showNotification(type, title, text) {\n      try {\n        if (this.$notify) {\n          this.$notify({\n            type: type,\n            title: title,\n            text: text,\n          });\n        } else {\n          console.log(`${title}: ${text}`);\n          if (type === \"success\" || type === \"info\") {\n            alert(`${title}: ${text}`);\n          }\n        }\n      } catch (error) {\n        console.log(`${title}: ${text}`);\n        alert(`${title}: ${text}`);\n      }\n    },\n\n    // Reset các biến theo dõi khi có nội dung mới\n    resetOptimizationCount() {\n      this.optimizationCount = 0;\n    },\n  },\n  watch: {\n    initialContent(newValue) {\n      this.content = newValue || \"\";\n      if (newValue && newValue !== this.lastSavedContent) {\n        this.lastSavedContent = newValue;\n        // Reset số lần tối ưu hóa khi có nội dung mới\n        this.resetOptimizationCount();\n      }\n    },\n    contentId: {\n      immediate: true,\n      async handler(newValue) {\n        if (newValue) {\n          // Nếu có contentId, kiểm tra xem đã có dữ liệu SEO chưa\n          const seoData = await this.fetchSEOData();\n          if (seoData) {\n            this.seoData = seoData;\n          } else {\n            // Nếu chưa có dữ liệu SEO, tự động phân tích\n            await this.analyzeSEO();\n          }\n        }\n      },\n    },\n  },\n  mounted() {\n    this.content = this.initialContent || \"\";\n    this.lastSavedContent = this.initialContent || \"\";\n\n    if (this.content) {\n      this.updateContent();\n    }\n\n    // Kiểm tra trước khi phân tích SEO tự động\n    if (\n      this.contentId &&\n      !this.seoData &&\n      !this.isAnalyzing &&\n      !this.isOptimizing\n    ) {\n      // Thêm độ trễ nhỏ để đảm bảo component đã render xong\n      this.$nextTick(() => {\n        // Sử dụng setTimeout để tránh gọi API quá sớm\n        setTimeout(async () => {\n          // Chỉ phân tích nếu chưa đạt giới hạn tối ưu\n          if (this.optimizationCount < this.maxOptimizations) {\n            console.log(\"Initial SEO analysis...\");\n            await this.analyzeSEO();\n\n            // Chỉ tối ưu nếu điểm thấp và chưa đạt giới hạn\n            if (\n              this.seoData &&\n              (this.seoData.seoScore || this.seoData.score) < 80 &&\n              this.optimizationCount < this.maxOptimizations\n            ) {\n              await this.autoOptimizeSEO();\n            }\n          }\n        }, 1000);\n      });\n    }\n  },\n};\n</script>\n\n<style scoped>\n.step-content {\n  background: white;\n  border-radius: 12px;\n  padding: 2rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\nh2 {\n  color: #1c1c4c;\n  margin-bottom: 2rem;\n  text-align: center;\n}\n\n.editor-container {\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 2rem;\n}\n\n.main-content textarea {\n  width: 100%;\n  height: 400px;\n  padding: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 6px;\n  resize: vertical;\n  font-family: \"Arial\", sans-serif;\n  line-height: 1.6;\n}\n\n.editor-actions {\n  display: flex;\n  justify-content: flex-start;\n  gap: 10px;\n  margin-top: 10px;\n}\n\n.action-button {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  transition: background-color 0.3s;\n}\n\n.seo-optimize {\n  background-color: #e3f2fd;\n  color: #0d47a1;\n}\n\n.seo-optimize:hover {\n  background-color: #bbdefb;\n}\n\n.optimizing-indicator {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: #2e7d32;\n  font-size: 0.9rem;\n}\n\n.spinner {\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  border: 2px solid rgba(46, 125, 50, 0.3);\n  border-radius: 50%;\n  border-top-color: #2e7d32;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.analyzing-indicator {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: #2e7d32;\n  font-size: 0.9rem;\n}\n\n.sidebar {\n  background: #f8f9fa;\n  border-radius: 8px;\n  padding: 1.5rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  max-height: 600px;\n  overflow-y: auto;\n}\n\n.sidebar-section {\n  margin-bottom: 1.5rem;\n}\n\n.sidebar-section h3 {\n  color: #1c1c4c;\n  margin-bottom: 0.5rem;\n  border-bottom: 1px solid #eaeaea;\n  padding-bottom: 8px;\n}\n\n.sidebar-section h4 {\n  color: #1c1c4c;\n  font-size: 0.9rem;\n  margin-top: 0.8rem;\n  margin-bottom: 0.3rem;\n}\n\n.sidebar-section ul {\n  list-style-type: none;\n  padding-left: 0;\n}\n\n.sidebar-section li {\n  padding: 0.3rem 0.5rem;\n  background: #e9ecef;\n  margin-bottom: 0.5rem;\n  border-radius: 4px;\n  font-size: 0.9rem;\n}\n\n.suggested-keywords li {\n  background: #e3f2fd;\n  color: #0d47a1;\n}\n\n.seo-score-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n}\n\n.score-circle {\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.2rem;\n  font-weight: bold;\n  color: white;\n  margin-bottom: 10px;\n}\n\n.score-circle.excellent {\n  background-color: #4caf50;\n}\n\n.score-circle.good {\n  background-color: #8bc34a;\n}\n\n.score-circle.average {\n  background-color: #ffc107;\n}\n\n.score-circle.poor {\n  background-color: #f44336;\n}\n\n.score-details {\n  width: 100%;\n}\n\n.detail-item {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 5px;\n  font-size: 0.9rem;\n}\n\n.empty-seo-data {\n  text-align: center;\n  color: #6c757d;\n  font-size: 0.9rem;\n  padding: 10px;\n  background: #f0f0f0;\n  border-radius: 4px;\n}\n\n.analysis-category {\n  background: #f0f4f8;\n  border-radius: 4px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\n\n.improvement-title {\n  font-size: 0.85rem;\n  font-weight: bold;\n  margin: 5px 0;\n}\n\n.improvement-list ul {\n  margin-top: 5px;\n}\n\n.improvement-list li {\n  background: #e6f7ff;\n  color: #0d47a1;\n  font-size: 0.85rem;\n}\n\n.score,\n.length {\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #1c1c4c;\n  text-align: center;\n  padding: 0.5rem;\n  background: #e9ecef;\n  border-radius: 4px;\n}\n\n.button-group {\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n  margin-top: 2rem;\n}\n\n.primary-button {\n  background: #1c1c4c;\n  color: white;\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background-color 0.3s ease;\n}\n\n.primary-button:hover {\n  background: #2a2a6c;\n}\n\n.primary-button-save {\n  background: #28a745;\n  color: white;\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background-color 0.3s ease;\n}\n\n.primary-button-save:hover {\n  background: #218838;\n}\n\n.secondary-button {\n  background: white;\n  color: #1c1c4c;\n  border: 1px solid #1c1c4c;\n  padding: 0.75rem 1.5rem;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: all 0.3s ease;\n}\n\n.secondary-button:hover {\n  background: #f8f9fa;\n}\n\n@media (max-width: 768px) {\n  .editor-container {\n    grid-template-columns: 1fr;\n  }\n\n  .button-group {\n    flex-direction: column;\n  }\n\n  .primary-button,\n  .secondary-button {\n    width: 100%;\n  }\n}\n\n.detail-item.optimization-count .detail-value.limit-reached {\n  color: #f44336;\n  font-weight: bold;\n}\n\n.detail-item.optimization-count .detail-value {\n  color: #2e7d32;\n}\n\n.action-button.disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n  background-color: #e0e0e0;\n  color: #757575;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}