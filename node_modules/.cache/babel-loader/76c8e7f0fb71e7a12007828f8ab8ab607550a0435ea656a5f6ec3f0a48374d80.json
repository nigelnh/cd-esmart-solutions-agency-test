{"ast":null,"code":"import DashboardStep from \"./creator-ai/DashboardStep.vue\";\nimport RequirementsStep from \"./creator-ai/RequirementsStep.vue\";\nimport EditorStep from \"./creator-ai/EditorStep.vue\";\nimport ImageStep from \"./creator-ai/ImageStep.vue\";\nimport FinalStep from \"./creator-ai/FinalStep.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"EsmartCreatorAIPage\",\n  components: {\n    DashboardStep,\n    RequirementsStep,\n    EditorStep,\n    ImageStep,\n    FinalStep\n  },\n  props: {\n    id: {\n      type: String,\n      default: null\n    },\n    type: {\n      type: String,\n      default: \"project\" // Can be \"project\" or \"content\"\n    }\n  },\n  data() {\n    return {\n      currentStep: 1,\n      contentData: {\n        title: \"\",\n        description: \"\",\n        projectId: \"\",\n        contentId: \"\",\n        topic: \"\",\n        keywords: \"\",\n        tone: \"professional\",\n        type: \"blog\",\n        content: \"\"\n      },\n      previousContent: [],\n      suggestedKeywords: [\"AI\", \"Content Creation\", \"Digital Marketing\"],\n      readabilityScore: 85,\n      contentLength: 500,\n      generatedImage: null,\n      selectedStyle: \"Realistic\",\n      imageStyles: [this.$t(\"creatorAI.image.styles.realistic\") || \"Realistic\", this.$t(\"creatorAI.image.styles.threeD\") || \"3D\", this.$t(\"creatorAI.image.styles.minimalist\") || \"Minimalist\", this.$t(\"creatorAI.image.styles.watercolor\") || \"Watercolor\", this.$t(\"creatorAI.image.styles.flatVector\") || \"Flat Vector\"],\n      debugMode: false,\n      isLoading: false,\n      error: null,\n      isAnalyzingSeo: false,\n      fromDashboard: false,\n      rawImageData: null,\n      preventUnintendedNavigation: false // Flag to prevent unintended navigation\n    };\n  },\n  created() {\n    // Setup global error handler for axios to prevent navigation issues\n    axios.interceptors.response.use(response => response, error => {\n      // Handle errors that shouldn't cause navigation\n      this.handleApiError(error);\n      return Promise.reject(error);\n    });\n\n    // If we're on the dashboard route, always show dashboard\n    if (this.$route.path === \"/dashboard\") {\n      this.currentStep = 1;\n    }\n\n    // If we have an ID in the route\n    if (this.id) {\n      if (this.type === \"project\") {\n        this.loadProject(this.id);\n      } else if (this.type === \"content\") {\n        this.loadContent(this.id);\n      }\n    }\n  },\n  methods: {\n    // Add a central error handler for API errors\n    handleApiError(error) {\n      console.error(\"API error intercepted:\", error);\n\n      // Don't trigger navigation for certain API errors\n      if (error.config && (error.config.url.includes(\"/generate-prompt\") || error.config.url.includes(\"/image/generate\"))) {\n        this.preventUnintendedNavigation = true;\n        console.log(\"Preventing navigation due to API error in image/prompt generation\");\n\n        // Clear the flag after a short delay\n        setTimeout(() => {\n          this.preventUnintendedNavigation = false;\n        }, 1000);\n\n        // Don't set global error that would show error screen\n        return;\n      }\n\n      // For other errors, we can handle them normally\n    },\n    async loadProject(projectId) {\n      try {\n        this.isLoading = true;\n        this.error = null;\n        const response = await axios.get(`/api/projects/${projectId}`);\n        if (response.data.success) {\n          const project = response.data.data;\n\n          // If project has contents, get the first one\n          if (project.Contents && project.Contents.length > 0) {\n            const content = project.Contents[0];\n            this.contentData = {\n              projectId: project.id,\n              contentId: content.id,\n              title: project.title,\n              description: project.description,\n              topic: content.topic,\n              keywords: content.keywords,\n              tone: content.tone,\n              type: content.contentType,\n              content: content.generatedContent\n            };\n\n            // Go directly to final step\n            this.currentStep = 5;\n          } else {\n            this.error = \"Project found but no content available\";\n          }\n        } else {\n          this.error = \"Failed to load project\";\n        }\n      } catch (error) {\n        console.error(\"Error loading project:\", error);\n        this.error = \"Error loading project: \" + error.message;\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async loadContent(contentId) {\n      try {\n        this.isLoading = true;\n        this.error = null;\n        const response = await axios.get(`/api/content/contents/${contentId}`);\n        if (response.data.success) {\n          const content = response.data.data;\n\n          // If the content has a projectId, load the project data\n          if (content.projectId) {\n            try {\n              const projectResponse = await axios.get(`/api/projects/${content.projectId}`);\n              if (projectResponse.data.success) {\n                const project = projectResponse.data.data;\n                this.contentData = {\n                  projectId: content.projectId,\n                  contentId: content.id,\n                  title: project.title,\n                  description: project.description,\n                  topic: content.topic,\n                  keywords: content.keywords,\n                  tone: content.tone,\n                  type: content.contentType,\n                  content: content.generatedContent\n                };\n              }\n            } catch (projectError) {\n              console.error(\"Error loading project for content:\", projectError);\n              // Still continue even if project info can't be loaded\n              this.contentData = {\n                contentId: content.id,\n                projectId: content.projectId,\n                title: \"Unknown Project\",\n                description: \"\",\n                topic: content.topic,\n                keywords: content.keywords,\n                tone: content.tone,\n                type: content.contentType,\n                content: content.generatedContent\n              };\n            }\n          } else {\n            this.contentData = {\n              contentId: content.id,\n              projectId: \"\",\n              title: content.topic,\n              description: \"\",\n              topic: content.topic,\n              keywords: content.keywords,\n              tone: content.tone,\n              type: content.contentType,\n              content: content.generatedContent\n            };\n          }\n\n          // Go directly to final step\n          this.currentStep = 5;\n        } else {\n          this.error = \"Failed to load content\";\n        }\n      } catch (error) {\n        console.error(\"Error loading content:\", error);\n        this.error = \"Error loading content: \" + error.message;\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    nextStep() {\n      // Check if we should prevent navigation due to recent API errors\n      if (this.preventUnintendedNavigation) {\n        console.log(\"Navigation prevented due to recent API error\");\n        return;\n      }\n      if (this.currentStep < 5) {\n        this.currentStep++;\n        if (this.currentStep === 5) {\n          this.fromDashboard = false;\n        }\n      }\n    },\n    prevStep() {\n      // Check if we should prevent navigation due to recent API errors\n      if (this.preventUnintendedNavigation) {\n        console.log(\"Navigation prevented due to recent API error\");\n        return;\n      }\n      if (this.currentStep > 1) {\n        this.currentStep--;\n        if (this.currentStep !== 5) {\n          this.fromDashboard = false;\n        }\n      }\n    },\n    updateContentData(data) {\n      console.log(\"Updating content data:\", data);\n      this.contentData = data;\n      if (data.content) {\n        this.readabilityScore = this.calculateReadabilityScore(data.content);\n      }\n    },\n    updateContent(content) {\n      if (!content) {\n        console.warn(\"Received null or empty content, skipping update\");\n        return;\n      }\n      console.log(\"Updating content:\", content.substring(0, 50) + \"...\");\n\n      // Lưu điểm SEO hiện tại trước khi cập nhật nội dung\n      const currentSeoScore = this.contentData.seoScore;\n\n      // Cập nhật nội dung\n      this.contentData.content = content;\n\n      // Đảm bảo giữ nguyên điểm SEO sau khi cập nhật\n      if (currentSeoScore) {\n        this.contentData.seoScore = currentSeoScore;\n      }\n      this.readabilityScore = this.calculateReadabilityScore(content);\n    },\n    updateSelectedStyle(style) {\n      this.selectedStyle = style;\n    },\n    updateGeneratedImage(imageData) {\n      console.log(\"Image data received:\", typeof imageData === \"object\" ? \"object\" : \"string\");\n\n      // Lưu trữ imageData nguyên bản cho trường hợp cần thiết\n      this.rawImageData = imageData;\n\n      // Xử lý imageData là null hoặc undefined\n      if (!imageData) {\n        console.log(\"Received null or undefined image data, clearing image\");\n        this.generatedImage = null;\n        return;\n      }\n\n      // Xử lý cẩn thận với nhiều trường hợp format khác nhau\n      if (typeof imageData === \"object\") {\n        if (imageData === null) {\n          console.log(\"Received null image data, clearing image\");\n          this.generatedImage = null;\n        } else if (imageData.image) {\n          console.log(\"Using image from object.image property:\", imageData.image.substring(0, 50) + \"...\");\n          this.generatedImage = this.handleImagePath(imageData.image);\n        } else if (imageData.imageUrl) {\n          console.log(\"Using image from object.imageUrl property:\", imageData.imageUrl);\n          this.generatedImage = this.handleImagePath(imageData.imageUrl);\n        }\n      } else if (typeof imageData === \"string\") {\n        if (imageData === \"null\" || imageData === \"\") {\n          console.log(\"Received empty string as image data\");\n          this.generatedImage = null;\n        } else {\n          console.log(\"Using string directly as image:\", imageData.substring(0, 50) + \"...\");\n          this.generatedImage = this.handleImagePath(imageData);\n        }\n      } else {\n        console.warn(\"Unrecognized image data format, cannot process\");\n      }\n      console.log(\"Final generatedImage value:\", this.generatedImage ? typeof this.generatedImage === \"string\" && this.generatedImage.length > 50 ? this.generatedImage.substring(0, 50) + \"...\" : this.generatedImage : \"null\");\n    },\n    handleImagePath(url) {\n      if (!url) return null;\n\n      // Handle URLs from the uploads folder\n      if (url.includes(\"uploads/\")) {\n        const filename = url.split(\"/\").pop();\n        return `/api/image/uploads/${filename}`;\n      }\n\n      // Handle FastAPI URLs\n      if (url.includes(\"/images/\")) {\n        // If it's already a full URL (from FastAPI), keep it as is\n        if (url.startsWith(\"http\")) {\n          return url;\n        }\n\n        // If not, make sure it has the right prefix\n        const FASTAPI_URL = process.env.VUE_APP_FASTAPI_URL || \"http://localhost:8000\";\n        return `${FASTAPI_URL}${url.startsWith(\"/\") ? \"\" : \"/\"}${url}`;\n      }\n\n      // If it starts with /api, it's already a relative server URL\n      if (url.startsWith(\"/api\")) {\n        return url;\n      }\n\n      // Default: return URL as is\n      return url;\n    },\n    exportContent() {\n      console.log(\"Exporting content...\");\n    },\n    downloadPDF() {\n      console.log(\"Downloading PDF...\");\n    },\n    shareContent() {\n      console.log(\"Sharing content...\");\n    },\n    startNew() {\n      this.currentStep = 1;\n      this.contentData = {\n        title: \"\",\n        description: \"\",\n        projectId: \"\",\n        contentId: \"\",\n        topic: \"\",\n        keywords: \"\",\n        tone: \"professional\",\n        type: \"blog\",\n        content: \"\"\n      };\n    },\n    createNewContent() {\n      // Reset tất cả dữ liệu về mặc định trước khi chuyển sang RequirementsStep\n      this.contentData = {\n        title: \"\",\n        description: \"\",\n        projectId: \"\",\n        contentId: \"\",\n        topic: \"\",\n        keywords: \"\",\n        tone: \"professional\",\n        type: \"blog\",\n        content: \"\"\n      };\n      // Chuyển sang bước RequirementsStep\n      this.currentStep = 2;\n    },\n    async editProject(projectId) {\n      try {\n        this.isLoading = true;\n        this.error = null;\n        const response = await axios.get(`/api/projects/${projectId}`);\n        if (response.data.success) {\n          const project = response.data.data;\n\n          // If project has contents, get the first one\n          if (project.Contents && project.Contents.length > 0) {\n            const content = project.Contents[0];\n            this.contentData = {\n              projectId: project.id,\n              contentId: content.id,\n              title: project.title,\n              description: project.description,\n              topic: content.topic,\n              keywords: content.keywords,\n              tone: content.tone,\n              type: content.contentType,\n              content: content.generatedContent\n            };\n\n            // Go directly to editor step\n            this.currentStep = 3;\n          } else {\n            this.error = \"Project found but no content available\";\n          }\n        } else {\n          this.error = \"Failed to load project\";\n        }\n      } catch (error) {\n        console.error(\"Error loading project for editing:\", error);\n        this.error = \"Error loading project: \" + error.message;\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    goToImageStep() {\n      this.currentStep = 4;\n    },\n    parseKeywords(keywordsString) {\n      if (!keywordsString) return this.suggestedKeywords;\n      return keywordsString.split(\",\").map(keyword => keyword.trim()).filter(keyword => keyword.length > 0);\n    },\n    calculateContentLength(content) {\n      if (!content) return 0;\n      return content.trim().split(/\\s+/).length;\n    },\n    calculateReadabilityScore(content) {\n      if (!content) return 0;\n      const words = content.trim().split(/\\s+/).length;\n      const sentences = content.split(/[.!?]+/).length;\n      const avgWordsPerSentence = words / Math.max(1, sentences);\n      let score = Math.min(100, Math.max(50, 85 - Math.abs(avgWordsPerSentence - 15) + Math.min(words / 50, 15)));\n      return Math.round(score);\n    },\n    goToDashboard() {\n      // Check if we should prevent navigation due to recent API errors\n      if (this.preventUnintendedNavigation) {\n        console.log(\"Navigation to dashboard prevented due to recent API error\");\n        return;\n      }\n      this.currentStep = 1;\n      this.fromDashboard = false;\n    },\n    handleSeoAnalyzing(status) {\n      this.isAnalyzingSeo = status;\n    },\n    async viewFinalContent(projectId) {\n      try {\n        this.isLoading = true;\n        this.error = null;\n        this.fromDashboard = true;\n\n        // Reset image state when switching between contents\n        this.generatedImage = null;\n        this.rawImageData = null;\n        const response = await axios.get(`/api/projects/${projectId}`);\n        if (response.data.success) {\n          const project = response.data.data;\n\n          // If project has contents, get the first one\n          if (project.Contents && project.Contents.length > 0) {\n            const content = project.Contents[0];\n            this.contentData = {\n              projectId: project.id,\n              contentId: content.id,\n              title: project.title,\n              description: project.description,\n              topic: content.topic,\n              keywords: content.keywords,\n              tone: content.tone,\n              type: content.contentType,\n              content: content.generatedContent\n            };\n            console.log(\"Loading content with ID:\", content.id);\n            console.log(\"Content has image:\", !!content.imageUrl);\n\n            // Directly fetch image from content API to ensure we have the latest image\n            try {\n              const contentResponse = await axios.get(`/api/content/contents/${content.id}`);\n              if (contentResponse.data && contentResponse.data.success && contentResponse.data.data) {\n                const contentData = contentResponse.data.data;\n\n                // Update content with the latest data\n                if (contentData.generatedContent) {\n                  this.contentData.content = contentData.generatedContent;\n                  console.log(\"Updated content length:\", this.contentData.content.length);\n                }\n                if (contentData.imageUrl) {\n                  console.log(\"Found image URL in viewFinalContent:\", contentData.imageUrl);\n\n                  // Handle server upload paths differently\n                  const imageUrl = contentData.imageUrl;\n\n                  // Debug the image URL\n                  console.log(\"Image URL being set:\", imageUrl);\n                  console.log(\"Is in uploads folder:\", imageUrl.includes(\"uploads/\"));\n\n                  // For uploads, try to fix the path\n                  if (imageUrl.includes(\"uploads/\")) {\n                    // Get the filename from the path\n                    const filename = imageUrl.split(\"/\").pop();\n                    console.log(\"Image filename:\", filename);\n\n                    // Try with the correct path\n                    const correctedUrl = `/api/image/uploads/${filename}`;\n                    console.log(\"Corrected image URL:\", correctedUrl);\n\n                    // Store the corrected URL\n                    this.generatedImage = correctedUrl;\n                  } else {\n                    // Store the original URL\n                    this.generatedImage = imageUrl;\n                  }\n\n                  // Preload the image to ensure it's available\n                  if (typeof imageUrl === \"string\") {\n                    // Create a proper absolute URL considering different path formats\n                    let fullImageUrl = imageUrl;\n                    if (!imageUrl.startsWith(\"http\") && !imageUrl.startsWith(\"data:\")) {\n                      // Handle uploads folder special case\n                      if (imageUrl.includes(\"uploads/\")) {\n                        const uploadPath = imageUrl.match(/(uploads\\/.*$)/);\n                        if (uploadPath && uploadPath[1]) {\n                          fullImageUrl = `${window.location.origin}/api/${uploadPath[1]}`;\n                        }\n                      }\n                      // Handle api paths\n                      else if (imageUrl.startsWith(\"/api/\")) {\n                        fullImageUrl = `${window.location.origin}${imageUrl}`;\n                      }\n                      // Handle other relative paths\n                      else {\n                        fullImageUrl = `${window.location.origin}/${imageUrl.replace(/^\\//, \"\")}`;\n                      }\n                    }\n                    console.log(\"Preloading image from URL:\", fullImageUrl);\n                    const img = new Image();\n                    img.src = fullImageUrl;\n                  }\n                } else {\n                  console.log(\"No image found for content:\", content.id);\n                  this.generatedImage = null;\n                }\n              }\n            } catch (contentError) {\n              console.error(\"Error fetching content image in viewFinalContent:\", contentError);\n              // Don't set error message to avoid disrupting the main flow\n              // But still log the error for debugging\n            }\n\n            // Go directly to final step\n            this.currentStep = 5;\n          } else {\n            this.error = \"Project found but no content available\";\n          }\n        } else {\n          this.error = \"Failed to load project\";\n        }\n      } catch (error) {\n        console.error(\"Error loading project for final view:\", error);\n        this.error = \"Error loading project: \" + error.message;\n      } finally {\n        this.isLoading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["DashboardStep","RequirementsStep","EditorStep","ImageStep","FinalStep","axios","name","components","props","id","type","String","default","data","currentStep","contentData","title","description","projectId","contentId","topic","keywords","tone","content","previousContent","suggestedKeywords","readabilityScore","contentLength","generatedImage","selectedStyle","imageStyles","$t","debugMode","isLoading","error","isAnalyzingSeo","fromDashboard","rawImageData","preventUnintendedNavigation","created","interceptors","response","use","handleApiError","Promise","reject","$route","path","loadProject","loadContent","methods","console","config","url","includes","log","setTimeout","get","success","project","Contents","length","contentType","generatedContent","message","projectResponse","projectError","nextStep","prevStep","updateContentData","calculateReadabilityScore","updateContent","warn","substring","currentSeoScore","seoScore","updateSelectedStyle","style","updateGeneratedImage","imageData","image","handleImagePath","imageUrl","filename","split","pop","startsWith","FASTAPI_URL","process","env","VUE_APP_FASTAPI_URL","exportContent","downloadPDF","shareContent","startNew","createNewContent","editProject","goToImageStep","parseKeywords","keywordsString","map","keyword","trim","filter","calculateContentLength","words","sentences","avgWordsPerSentence","Math","max","score","min","abs","round","goToDashboard","handleSeoAnalyzing","status","viewFinalContent","contentResponse","correctedUrl","fullImageUrl","uploadPath","match","window","location","origin","replace","img","Image","src","contentError"],"sources":["/Users/nhannguyen/Desktop/Duan/esmart-solutions-agency/src/components/EsmartCreatorAIPage.vue"],"sourcesContent":["<template>\n  <div class=\"creator-ai-page\">\n    <div v-if=\"isLoading\" class=\"loading-container\">\n      <div class=\"loading-spinner\"></div>\n      <p>{{ $t(\"creatorAI.common.loading\") }}</p>\n    </div>\n\n    <div v-else-if=\"error\" class=\"error-container\">\n      <p>{{ error }}</p>\n      <button class=\"primary-button\" @click=\"$router.push('/dashboard')\">\n        {{ $t(\"creatorAI.common.returnToDashboard\") }}\n      </button>\n    </div>\n\n    <div v-else>\n      <DashboardStep\n        v-if=\"currentStep === 1\"\n        :previous-content=\"previousContent\"\n        @next=\"nextStep\"\n        @edit-project=\"editProject\"\n        @view-final=\"viewFinalContent\"\n        @create-new=\"createNewContent\"\n      />\n\n      <RequirementsStep\n        v-if=\"currentStep === 2\"\n        :initial-data=\"contentData\"\n        @prev=\"prevStep\"\n        @next=\"nextStep\"\n        @update:data=\"updateContentData\"\n        @seo-analyzing=\"handleSeoAnalyzing\"\n      />\n\n      <EditorStep\n        v-if=\"currentStep === 3\"\n        :initial-content=\"contentData.content\"\n        :suggested-keywords=\"parseKeywords(contentData.keywords)\"\n        :readability-score=\"readabilityScore\"\n        :content-length=\"calculateContentLength(contentData.content)\"\n        :content-id=\"contentData.contentId\"\n        :is-analyzing-seo=\"isAnalyzingSeo\"\n        @prev=\"prevStep\"\n        @next=\"nextStep\"\n        @update:content=\"updateContent\"\n        @go-to-dashboard=\"goToDashboard\"\n      />\n\n      <ImageStep\n        v-if=\"currentStep === 4\"\n        :generated-image=\"generatedImage\"\n        :image-styles=\"imageStyles\"\n        :initial-style=\"selectedStyle\"\n        :requirements=\"contentData\"\n        @prev=\"prevStep\"\n        @next=\"nextStep\"\n        @image-generated=\"updateGeneratedImage\"\n        @style-select=\"updateSelectedStyle\"\n      />\n\n      <FinalStep\n        v-if=\"currentStep === 5\"\n        :content=\"contentData.content\"\n        :generated-image=\"generatedImage\"\n        :project-id=\"contentData.projectId\"\n        :project-title=\"contentData.title\"\n        :project-description=\"contentData.description\"\n        :content-id=\"contentData.contentId\"\n        :from-dashboard=\"fromDashboard\"\n        @prev=\"prevStep\"\n        @go-to-dashboard=\"goToDashboard\"\n        @go-to-image=\"goToImageStep\"\n        @new=\"startNew\"\n        @update:image=\"updateGeneratedImage\"\n        @update:content=\"updateContent\"\n      />\n    </div>\n\n    <div v-if=\"debugMode\" class=\"debug-panel\">\n      <h3>Debug Panel</h3>\n      <p>Current Step: {{ currentStep }}</p>\n      <p>Content Data: {{ JSON.stringify(contentData, null, 2) }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport DashboardStep from \"./creator-ai/DashboardStep.vue\";\nimport RequirementsStep from \"./creator-ai/RequirementsStep.vue\";\nimport EditorStep from \"./creator-ai/EditorStep.vue\";\nimport ImageStep from \"./creator-ai/ImageStep.vue\";\nimport FinalStep from \"./creator-ai/FinalStep.vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"EsmartCreatorAIPage\",\n  components: {\n    DashboardStep,\n    RequirementsStep,\n    EditorStep,\n    ImageStep,\n    FinalStep,\n  },\n  props: {\n    id: {\n      type: String,\n      default: null,\n    },\n    type: {\n      type: String,\n      default: \"project\", // Can be \"project\" or \"content\"\n    },\n  },\n  data() {\n    return {\n      currentStep: 1,\n      contentData: {\n        title: \"\",\n        description: \"\",\n        projectId: \"\",\n        contentId: \"\",\n        topic: \"\",\n        keywords: \"\",\n        tone: \"professional\",\n        type: \"blog\",\n        content: \"\",\n      },\n      previousContent: [],\n      suggestedKeywords: [\"AI\", \"Content Creation\", \"Digital Marketing\"],\n      readabilityScore: 85,\n      contentLength: 500,\n      generatedImage: null,\n      selectedStyle: \"Realistic\",\n      imageStyles: [\n        this.$t(\"creatorAI.image.styles.realistic\") || \"Realistic\",\n        this.$t(\"creatorAI.image.styles.threeD\") || \"3D\",\n        this.$t(\"creatorAI.image.styles.minimalist\") || \"Minimalist\",\n        this.$t(\"creatorAI.image.styles.watercolor\") || \"Watercolor\",\n        this.$t(\"creatorAI.image.styles.flatVector\") || \"Flat Vector\",\n      ],\n      debugMode: false,\n      isLoading: false,\n      error: null,\n      isAnalyzingSeo: false,\n      fromDashboard: false,\n      rawImageData: null,\n      preventUnintendedNavigation: false, // Flag to prevent unintended navigation\n    };\n  },\n  created() {\n    // Setup global error handler for axios to prevent navigation issues\n    axios.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        // Handle errors that shouldn't cause navigation\n        this.handleApiError(error);\n        return Promise.reject(error);\n      }\n    );\n\n    // If we're on the dashboard route, always show dashboard\n    if (this.$route.path === \"/dashboard\") {\n      this.currentStep = 1;\n    }\n\n    // If we have an ID in the route\n    if (this.id) {\n      if (this.type === \"project\") {\n        this.loadProject(this.id);\n      } else if (this.type === \"content\") {\n        this.loadContent(this.id);\n      }\n    }\n  },\n  methods: {\n    // Add a central error handler for API errors\n    handleApiError(error) {\n      console.error(\"API error intercepted:\", error);\n\n      // Don't trigger navigation for certain API errors\n      if (\n        error.config &&\n        (error.config.url.includes(\"/generate-prompt\") ||\n          error.config.url.includes(\"/image/generate\"))\n      ) {\n        this.preventUnintendedNavigation = true;\n        console.log(\n          \"Preventing navigation due to API error in image/prompt generation\"\n        );\n\n        // Clear the flag after a short delay\n        setTimeout(() => {\n          this.preventUnintendedNavigation = false;\n        }, 1000);\n\n        // Don't set global error that would show error screen\n        return;\n      }\n\n      // For other errors, we can handle them normally\n    },\n    async loadProject(projectId) {\n      try {\n        this.isLoading = true;\n        this.error = null;\n\n        const response = await axios.get(`/api/projects/${projectId}`);\n\n        if (response.data.success) {\n          const project = response.data.data;\n\n          // If project has contents, get the first one\n          if (project.Contents && project.Contents.length > 0) {\n            const content = project.Contents[0];\n\n            this.contentData = {\n              projectId: project.id,\n              contentId: content.id,\n              title: project.title,\n              description: project.description,\n              topic: content.topic,\n              keywords: content.keywords,\n              tone: content.tone,\n              type: content.contentType,\n              content: content.generatedContent,\n            };\n\n            // Go directly to final step\n            this.currentStep = 5;\n          } else {\n            this.error = \"Project found but no content available\";\n          }\n        } else {\n          this.error = \"Failed to load project\";\n        }\n      } catch (error) {\n        console.error(\"Error loading project:\", error);\n        this.error = \"Error loading project: \" + error.message;\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async loadContent(contentId) {\n      try {\n        this.isLoading = true;\n        this.error = null;\n\n        const response = await axios.get(`/api/content/contents/${contentId}`);\n\n        if (response.data.success) {\n          const content = response.data.data;\n\n          // If the content has a projectId, load the project data\n          if (content.projectId) {\n            try {\n              const projectResponse = await axios.get(\n                `/api/projects/${content.projectId}`\n              );\n              if (projectResponse.data.success) {\n                const project = projectResponse.data.data;\n\n                this.contentData = {\n                  projectId: content.projectId,\n                  contentId: content.id,\n                  title: project.title,\n                  description: project.description,\n                  topic: content.topic,\n                  keywords: content.keywords,\n                  tone: content.tone,\n                  type: content.contentType,\n                  content: content.generatedContent,\n                };\n              }\n            } catch (projectError) {\n              console.error(\"Error loading project for content:\", projectError);\n              // Still continue even if project info can't be loaded\n              this.contentData = {\n                contentId: content.id,\n                projectId: content.projectId,\n                title: \"Unknown Project\",\n                description: \"\",\n                topic: content.topic,\n                keywords: content.keywords,\n                tone: content.tone,\n                type: content.contentType,\n                content: content.generatedContent,\n              };\n            }\n          } else {\n            this.contentData = {\n              contentId: content.id,\n              projectId: \"\",\n              title: content.topic,\n              description: \"\",\n              topic: content.topic,\n              keywords: content.keywords,\n              tone: content.tone,\n              type: content.contentType,\n              content: content.generatedContent,\n            };\n          }\n\n          // Go directly to final step\n          this.currentStep = 5;\n        } else {\n          this.error = \"Failed to load content\";\n        }\n      } catch (error) {\n        console.error(\"Error loading content:\", error);\n        this.error = \"Error loading content: \" + error.message;\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    nextStep() {\n      // Check if we should prevent navigation due to recent API errors\n      if (this.preventUnintendedNavigation) {\n        console.log(\"Navigation prevented due to recent API error\");\n        return;\n      }\n\n      if (this.currentStep < 5) {\n        this.currentStep++;\n        if (this.currentStep === 5) {\n          this.fromDashboard = false;\n        }\n      }\n    },\n    prevStep() {\n      // Check if we should prevent navigation due to recent API errors\n      if (this.preventUnintendedNavigation) {\n        console.log(\"Navigation prevented due to recent API error\");\n        return;\n      }\n\n      if (this.currentStep > 1) {\n        this.currentStep--;\n        if (this.currentStep !== 5) {\n          this.fromDashboard = false;\n        }\n      }\n    },\n    updateContentData(data) {\n      console.log(\"Updating content data:\", data);\n      this.contentData = data;\n      if (data.content) {\n        this.readabilityScore = this.calculateReadabilityScore(data.content);\n      }\n    },\n    updateContent(content) {\n      if (!content) {\n        console.warn(\"Received null or empty content, skipping update\");\n        return;\n      }\n      console.log(\"Updating content:\", content.substring(0, 50) + \"...\");\n\n      // Lưu điểm SEO hiện tại trước khi cập nhật nội dung\n      const currentSeoScore = this.contentData.seoScore;\n\n      // Cập nhật nội dung\n      this.contentData.content = content;\n\n      // Đảm bảo giữ nguyên điểm SEO sau khi cập nhật\n      if (currentSeoScore) {\n        this.contentData.seoScore = currentSeoScore;\n      }\n\n      this.readabilityScore = this.calculateReadabilityScore(content);\n    },\n    updateSelectedStyle(style) {\n      this.selectedStyle = style;\n    },\n    updateGeneratedImage(imageData) {\n      console.log(\n        \"Image data received:\",\n        typeof imageData === \"object\" ? \"object\" : \"string\"\n      );\n\n      // Lưu trữ imageData nguyên bản cho trường hợp cần thiết\n      this.rawImageData = imageData;\n\n      // Xử lý imageData là null hoặc undefined\n      if (!imageData) {\n        console.log(\"Received null or undefined image data, clearing image\");\n        this.generatedImage = null;\n        return;\n      }\n\n      // Xử lý cẩn thận với nhiều trường hợp format khác nhau\n      if (typeof imageData === \"object\") {\n        if (imageData === null) {\n          console.log(\"Received null image data, clearing image\");\n          this.generatedImage = null;\n        } else if (imageData.image) {\n          console.log(\n            \"Using image from object.image property:\",\n            imageData.image.substring(0, 50) + \"...\"\n          );\n          this.generatedImage = this.handleImagePath(imageData.image);\n        } else if (imageData.imageUrl) {\n          console.log(\n            \"Using image from object.imageUrl property:\",\n            imageData.imageUrl\n          );\n          this.generatedImage = this.handleImagePath(imageData.imageUrl);\n        }\n      } else if (typeof imageData === \"string\") {\n        if (imageData === \"null\" || imageData === \"\") {\n          console.log(\"Received empty string as image data\");\n          this.generatedImage = null;\n        } else {\n          console.log(\n            \"Using string directly as image:\",\n            imageData.substring(0, 50) + \"...\"\n          );\n          this.generatedImage = this.handleImagePath(imageData);\n        }\n      } else {\n        console.warn(\"Unrecognized image data format, cannot process\");\n      }\n\n      console.log(\n        \"Final generatedImage value:\",\n        this.generatedImage\n          ? typeof this.generatedImage === \"string\" &&\n            this.generatedImage.length > 50\n            ? this.generatedImage.substring(0, 50) + \"...\"\n            : this.generatedImage\n          : \"null\"\n      );\n    },\n    handleImagePath(url) {\n      if (!url) return null;\n\n      // Handle URLs from the uploads folder\n      if (url.includes(\"uploads/\")) {\n        const filename = url.split(\"/\").pop();\n        return `/api/image/uploads/${filename}`;\n      }\n\n      // Handle FastAPI URLs\n      if (url.includes(\"/images/\")) {\n        // If it's already a full URL (from FastAPI), keep it as is\n        if (url.startsWith(\"http\")) {\n          return url;\n        }\n\n        // If not, make sure it has the right prefix\n        const FASTAPI_URL =\n          process.env.VUE_APP_FASTAPI_URL || \"http://localhost:8000\";\n        return `${FASTAPI_URL}${url.startsWith(\"/\") ? \"\" : \"/\"}${url}`;\n      }\n\n      // If it starts with /api, it's already a relative server URL\n      if (url.startsWith(\"/api\")) {\n        return url;\n      }\n\n      // Default: return URL as is\n      return url;\n    },\n    exportContent() {\n      console.log(\"Exporting content...\");\n    },\n    downloadPDF() {\n      console.log(\"Downloading PDF...\");\n    },\n    shareContent() {\n      console.log(\"Sharing content...\");\n    },\n    startNew() {\n      this.currentStep = 1;\n      this.contentData = {\n        title: \"\",\n        description: \"\",\n        projectId: \"\",\n        contentId: \"\",\n        topic: \"\",\n        keywords: \"\",\n        tone: \"professional\",\n        type: \"blog\",\n        content: \"\",\n      };\n    },\n    createNewContent() {\n      // Reset tất cả dữ liệu về mặc định trước khi chuyển sang RequirementsStep\n      this.contentData = {\n        title: \"\",\n        description: \"\",\n        projectId: \"\",\n        contentId: \"\",\n        topic: \"\",\n        keywords: \"\",\n        tone: \"professional\",\n        type: \"blog\",\n        content: \"\",\n      };\n      // Chuyển sang bước RequirementsStep\n      this.currentStep = 2;\n    },\n    async editProject(projectId) {\n      try {\n        this.isLoading = true;\n        this.error = null;\n\n        const response = await axios.get(`/api/projects/${projectId}`);\n\n        if (response.data.success) {\n          const project = response.data.data;\n\n          // If project has contents, get the first one\n          if (project.Contents && project.Contents.length > 0) {\n            const content = project.Contents[0];\n\n            this.contentData = {\n              projectId: project.id,\n              contentId: content.id,\n              title: project.title,\n              description: project.description,\n              topic: content.topic,\n              keywords: content.keywords,\n              tone: content.tone,\n              type: content.contentType,\n              content: content.generatedContent,\n            };\n\n            // Go directly to editor step\n            this.currentStep = 3;\n          } else {\n            this.error = \"Project found but no content available\";\n          }\n        } else {\n          this.error = \"Failed to load project\";\n        }\n      } catch (error) {\n        console.error(\"Error loading project for editing:\", error);\n        this.error = \"Error loading project: \" + error.message;\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    goToImageStep() {\n      this.currentStep = 4;\n    },\n    parseKeywords(keywordsString) {\n      if (!keywordsString) return this.suggestedKeywords;\n\n      return keywordsString\n        .split(\",\")\n        .map((keyword) => keyword.trim())\n        .filter((keyword) => keyword.length > 0);\n    },\n    calculateContentLength(content) {\n      if (!content) return 0;\n      return content.trim().split(/\\s+/).length;\n    },\n    calculateReadabilityScore(content) {\n      if (!content) return 0;\n\n      const words = content.trim().split(/\\s+/).length;\n      const sentences = content.split(/[.!?]+/).length;\n      const avgWordsPerSentence = words / Math.max(1, sentences);\n\n      let score = Math.min(\n        100,\n        Math.max(\n          50,\n          85 - Math.abs(avgWordsPerSentence - 15) + Math.min(words / 50, 15)\n        )\n      );\n\n      return Math.round(score);\n    },\n    goToDashboard() {\n      // Check if we should prevent navigation due to recent API errors\n      if (this.preventUnintendedNavigation) {\n        console.log(\n          \"Navigation to dashboard prevented due to recent API error\"\n        );\n        return;\n      }\n\n      this.currentStep = 1;\n      this.fromDashboard = false;\n    },\n    handleSeoAnalyzing(status) {\n      this.isAnalyzingSeo = status;\n    },\n    async viewFinalContent(projectId) {\n      try {\n        this.isLoading = true;\n        this.error = null;\n        this.fromDashboard = true;\n\n        // Reset image state when switching between contents\n        this.generatedImage = null;\n        this.rawImageData = null;\n\n        const response = await axios.get(`/api/projects/${projectId}`);\n\n        if (response.data.success) {\n          const project = response.data.data;\n\n          // If project has contents, get the first one\n          if (project.Contents && project.Contents.length > 0) {\n            const content = project.Contents[0];\n\n            this.contentData = {\n              projectId: project.id,\n              contentId: content.id,\n              title: project.title,\n              description: project.description,\n              topic: content.topic,\n              keywords: content.keywords,\n              tone: content.tone,\n              type: content.contentType,\n              content: content.generatedContent,\n            };\n\n            console.log(\"Loading content with ID:\", content.id);\n            console.log(\"Content has image:\", !!content.imageUrl);\n\n            // Directly fetch image from content API to ensure we have the latest image\n            try {\n              const contentResponse = await axios.get(\n                `/api/content/contents/${content.id}`\n              );\n\n              if (\n                contentResponse.data &&\n                contentResponse.data.success &&\n                contentResponse.data.data\n              ) {\n                const contentData = contentResponse.data.data;\n\n                // Update content with the latest data\n                if (contentData.generatedContent) {\n                  this.contentData.content = contentData.generatedContent;\n                  console.log(\n                    \"Updated content length:\",\n                    this.contentData.content.length\n                  );\n                }\n\n                if (contentData.imageUrl) {\n                  console.log(\n                    \"Found image URL in viewFinalContent:\",\n                    contentData.imageUrl\n                  );\n\n                  // Handle server upload paths differently\n                  const imageUrl = contentData.imageUrl;\n\n                  // Debug the image URL\n                  console.log(\"Image URL being set:\", imageUrl);\n                  console.log(\n                    \"Is in uploads folder:\",\n                    imageUrl.includes(\"uploads/\")\n                  );\n\n                  // For uploads, try to fix the path\n                  if (imageUrl.includes(\"uploads/\")) {\n                    // Get the filename from the path\n                    const filename = imageUrl.split(\"/\").pop();\n                    console.log(\"Image filename:\", filename);\n\n                    // Try with the correct path\n                    const correctedUrl = `/api/image/uploads/${filename}`;\n                    console.log(\"Corrected image URL:\", correctedUrl);\n\n                    // Store the corrected URL\n                    this.generatedImage = correctedUrl;\n                  } else {\n                    // Store the original URL\n                    this.generatedImage = imageUrl;\n                  }\n\n                  // Preload the image to ensure it's available\n                  if (typeof imageUrl === \"string\") {\n                    // Create a proper absolute URL considering different path formats\n                    let fullImageUrl = imageUrl;\n\n                    if (\n                      !imageUrl.startsWith(\"http\") &&\n                      !imageUrl.startsWith(\"data:\")\n                    ) {\n                      // Handle uploads folder special case\n                      if (imageUrl.includes(\"uploads/\")) {\n                        const uploadPath = imageUrl.match(/(uploads\\/.*$)/);\n                        if (uploadPath && uploadPath[1]) {\n                          fullImageUrl = `${window.location.origin}/api/${uploadPath[1]}`;\n                        }\n                      }\n                      // Handle api paths\n                      else if (imageUrl.startsWith(\"/api/\")) {\n                        fullImageUrl = `${window.location.origin}${imageUrl}`;\n                      }\n                      // Handle other relative paths\n                      else {\n                        fullImageUrl = `${\n                          window.location.origin\n                        }/${imageUrl.replace(/^\\//, \"\")}`;\n                      }\n                    }\n\n                    console.log(\"Preloading image from URL:\", fullImageUrl);\n                    const img = new Image();\n                    img.src = fullImageUrl;\n                  }\n                } else {\n                  console.log(\"No image found for content:\", content.id);\n                  this.generatedImage = null;\n                }\n              }\n            } catch (contentError) {\n              console.error(\n                \"Error fetching content image in viewFinalContent:\",\n                contentError\n              );\n              // Don't set error message to avoid disrupting the main flow\n              // But still log the error for debugging\n            }\n\n            // Go directly to final step\n            this.currentStep = 5;\n          } else {\n            this.error = \"Project found but no content available\";\n          }\n        } else {\n          this.error = \"Failed to load project\";\n        }\n      } catch (error) {\n        console.error(\"Error loading project for final view:\", error);\n        this.error = \"Error loading project: \" + error.message;\n      } finally {\n        this.isLoading = false;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.creator-ai-page {\n  padding: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.debug-panel {\n  margin-top: 2rem;\n  padding: 1rem;\n  background-color: #f8f9fa;\n  border: 1px solid #ddd;\n  border-radius: 6px;\n  font-family: monospace;\n  white-space: pre-wrap;\n}\n\n.loading-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.loading-spinner {\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #3498db;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.error-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.primary-button {\n  background-color: #3498db;\n  color: #fff;\n  border: none;\n  padding: 10px 20px;\n  font-size: 16px;\n  cursor: pointer;\n  border-radius: 5px;\n  transition: background-color 0.3s;\n}\n\n.primary-button:hover {\n  background-color: #2980b9;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}