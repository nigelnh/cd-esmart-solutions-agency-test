{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"DashboardStep\",\n  data() {\n    return {\n      projects: [],\n      loading: true,\n      activeTab: \"projects\",\n      deleteConfirmation: {\n        show: false,\n        projectId: null\n      },\n      toast: {\n        show: false,\n        message: \"\",\n        type: \"info\",\n        // info, success, error\n        timeout: null\n      }\n    };\n  },\n  created() {\n    this.fetchProjects();\n  },\n  methods: {\n    async fetchProjects() {\n      try {\n        this.loading = true;\n        const response = await axios.get(\"/api/projects\");\n        if (response.data.success) {\n          this.projects = response.data.data;\n        } else {\n          console.error(\"Failed to load projects\");\n          this.projects = [];\n        }\n      } catch (error) {\n        console.error(\"Error fetching projects:\", error);\n        this.projects = [];\n      } finally {\n        this.loading = false;\n      }\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return date.toLocaleDateString(undefined, {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\"\n      });\n    },\n    viewProject(projectId) {\n      // Emit event to parent component to load the project for editing\n      this.$emit(\"edit-project\", projectId);\n    },\n    goToHome() {\n      this.$router.push(\"/\");\n    },\n    createNewContent() {\n      // Emit event to notify that we want to create new content with reset data\n      this.$emit(\"create-new\");\n    },\n    // Debug method to check project ID format\n    debugProjectId(projectId) {\n      console.log(\"Project ID value:\", projectId);\n      console.log(\"Project ID type:\", typeof projectId);\n      console.log(\"Project ID length:\", projectId ? projectId.length : \"N/A\");\n\n      // Check if ID is in UUID format (example check)\n      const uuidPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n      console.log(\"Is UUID format:\", uuidPattern.test(projectId));\n      return projectId;\n    },\n    // Show toast message\n    showToast(message, type = \"info\") {\n      // Clear any existing timeout\n      if (this.toast.timeout) {\n        clearTimeout(this.toast.timeout);\n      }\n\n      // Set toast properties\n      this.toast.show = true;\n      this.toast.message = message;\n      this.toast.type = type;\n\n      // Auto hide after 3 seconds\n      this.toast.timeout = setTimeout(() => {\n        this.toast.show = false;\n      }, 3000);\n    },\n    confirmDeleteProject(event, projectId) {\n      // Ngăn chặn sự kiện click lan truyền đến card\n      event.stopPropagation();\n\n      // Debug project ID\n      this.debugProjectId(projectId);\n      if (confirm(this.$t(\"creatorAI.dashboard.deleteConfirm\"))) {\n        this.deleteProject(projectId);\n      }\n    },\n    async deleteProject(projectId) {\n      try {\n        console.log(\"Deleting project with ID:\", projectId);\n\n        // Đảm bảo projectId không null và là string\n        if (!projectId) {\n          console.error(\"Project ID is null or undefined\");\n          this.showToast(this.$t(\"creatorAI.dashboard.deleteError\"), \"error\");\n          return;\n        }\n\n        // Log URL để debug\n        const url = `/api/projects/${projectId}`;\n        console.log(\"Delete URL:\", url);\n        const response = await axios({\n          method: \"DELETE\",\n          url: url,\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        console.log(\"Delete response:\", response);\n        if (response.data && response.data.success) {\n          // Remove the project from the projects array\n          this.projects = this.projects.filter(project => project.id !== projectId);\n\n          // Show success message\n          this.showToast(this.$t(\"creatorAI.dashboard.deleteSuccess\"), \"success\");\n\n          // Refresh projects list\n          this.fetchProjects();\n        } else {\n          console.error(\"Failed to delete project\", response.data);\n          this.showToast(this.$t(\"creatorAI.dashboard.deleteFailed\"), \"error\");\n        }\n      } catch (error) {\n        console.error(\"Error deleting project:\", error);\n\n        // Log chi tiết lỗi để debug\n        if (error.response) {\n          console.error(\"Error response:\", error.response.data);\n          console.error(\"Error status:\", error.response.status);\n        }\n        this.showToast(`${this.$t(\"creatorAI.dashboard.deleteError\")}: ${error.message}`, \"error\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","projects","loading","activeTab","deleteConfirmation","show","projectId","toast","message","type","timeout","created","fetchProjects","methods","response","get","success","console","error","formatDate","dateString","date","Date","toLocaleDateString","undefined","year","month","day","viewProject","$emit","goToHome","$router","push","createNewContent","debugProjectId","log","length","uuidPattern","test","showToast","clearTimeout","setTimeout","confirmDeleteProject","event","stopPropagation","confirm","$t","deleteProject","url","method","headers","filter","project","id","status"],"sources":["/Users/nhannguyen/Desktop/Duan/esmart-solutions-agency/src/components/creator-ai/DashboardStep.vue"],"sourcesContent":["<template>\n  <div class=\"step-content\">\n    <h2>{{ $t(\"creatorAI.dashboard.title\") }}</h2>\n\n    <!-- Toast Message -->\n    <div v-if=\"toast.show\" class=\"toast-message\" :class=\"toast.type\">\n      <span>{{ toast.message }}</span>\n      <button @click=\"toast.show = false\" class=\"close-toast\">&times;</button>\n    </div>\n\n    <!-- Projects Tab -->\n    <div v-if=\"activeTab === 'projects'\" class=\"content-grid\">\n      <div v-if=\"loading\" class=\"loading-indicator\">\n        <p>{{ $t(\"creatorAI.dashboard.loading\") }}</p>\n      </div>\n      <div v-else-if=\"projects.length === 0\" class=\"empty-state\">\n        <p>{{ $t(\"creatorAI.dashboard.noProjects\") }}</p>\n      </div>\n      <div\n        v-else\n        v-for=\"project in projects\"\n        :key=\"project.id\"\n        class=\"content-card\"\n        :class=\"{ finished: project.status === 'finished' }\"\n        @click=\"viewProject(project.id)\"\n      >\n        <div class=\"card-header\">\n          <h3>{{ project.title }}</h3>\n          <div class=\"card-actions\">\n            <span class=\"status-badge\" :class=\"project.status\">\n              {{\n                project.status === \"in_progress\"\n                  ? $t(\"creatorAI.dashboard.inProgress\")\n                  : $t(\"creatorAI.dashboard.finished\")\n              }}\n            </span>\n            <button\n              class=\"delete-button\"\n              @click.stop=\"confirmDeleteProject($event, project.id)\"\n              title=\"Delete project\"\n            >\n              <i class=\"fa-solid fa-trash\"></i>\n            </button>\n          </div>\n        </div>\n        <p class=\"description\">\n          {{ project.description || $t(\"creatorAI.dashboard.noDescription\") }}\n        </p>\n        <div class=\"content-meta\">\n          <span>{{ formatDate(project.createdAt) }}</span>\n          <span>{{ project.type }}</span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"button-group\">\n      <button class=\"secondary-button\" @click=\"goToHome\">\n        {{ $t(\"creatorAI.dashboard.backToHome\") }}\n      </button>\n      <button class=\"primary-button\" @click=\"createNewContent\">\n        {{ $t(\"creatorAI.dashboard.createNew\") }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"DashboardStep\",\n  data() {\n    return {\n      projects: [],\n      loading: true,\n      activeTab: \"projects\",\n      deleteConfirmation: {\n        show: false,\n        projectId: null,\n      },\n      toast: {\n        show: false,\n        message: \"\",\n        type: \"info\", // info, success, error\n        timeout: null,\n      },\n    };\n  },\n  created() {\n    this.fetchProjects();\n  },\n  methods: {\n    async fetchProjects() {\n      try {\n        this.loading = true;\n\n        const response = await axios.get(\"/api/projects\");\n\n        if (response.data.success) {\n          this.projects = response.data.data;\n        } else {\n          console.error(\"Failed to load projects\");\n          this.projects = [];\n        }\n      } catch (error) {\n        console.error(\"Error fetching projects:\", error);\n        this.projects = [];\n      } finally {\n        this.loading = false;\n      }\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return date.toLocaleDateString(undefined, {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      });\n    },\n    viewProject(projectId) {\n      // Emit event to parent component to load the project for editing\n      this.$emit(\"edit-project\", projectId);\n    },\n    goToHome() {\n      this.$router.push(\"/\");\n    },\n    createNewContent() {\n      // Emit event to notify that we want to create new content with reset data\n      this.$emit(\"create-new\");\n    },\n    // Debug method to check project ID format\n    debugProjectId(projectId) {\n      console.log(\"Project ID value:\", projectId);\n      console.log(\"Project ID type:\", typeof projectId);\n      console.log(\"Project ID length:\", projectId ? projectId.length : \"N/A\");\n\n      // Check if ID is in UUID format (example check)\n      const uuidPattern =\n        /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n      console.log(\"Is UUID format:\", uuidPattern.test(projectId));\n\n      return projectId;\n    },\n\n    // Show toast message\n    showToast(message, type = \"info\") {\n      // Clear any existing timeout\n      if (this.toast.timeout) {\n        clearTimeout(this.toast.timeout);\n      }\n\n      // Set toast properties\n      this.toast.show = true;\n      this.toast.message = message;\n      this.toast.type = type;\n\n      // Auto hide after 3 seconds\n      this.toast.timeout = setTimeout(() => {\n        this.toast.show = false;\n      }, 3000);\n    },\n\n    confirmDeleteProject(event, projectId) {\n      // Ngăn chặn sự kiện click lan truyền đến card\n      event.stopPropagation();\n\n      // Debug project ID\n      this.debugProjectId(projectId);\n\n      if (confirm(this.$t(\"creatorAI.dashboard.deleteConfirm\"))) {\n        this.deleteProject(projectId);\n      }\n    },\n\n    async deleteProject(projectId) {\n      try {\n        console.log(\"Deleting project with ID:\", projectId);\n\n        // Đảm bảo projectId không null và là string\n        if (!projectId) {\n          console.error(\"Project ID is null or undefined\");\n          this.showToast(this.$t(\"creatorAI.dashboard.deleteError\"), \"error\");\n          return;\n        }\n\n        // Log URL để debug\n        const url = `/api/projects/${projectId}`;\n        console.log(\"Delete URL:\", url);\n\n        const response = await axios({\n          method: \"DELETE\",\n          url: url,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        console.log(\"Delete response:\", response);\n\n        if (response.data && response.data.success) {\n          // Remove the project from the projects array\n          this.projects = this.projects.filter(\n            (project) => project.id !== projectId\n          );\n\n          // Show success message\n          this.showToast(\n            this.$t(\"creatorAI.dashboard.deleteSuccess\"),\n            \"success\"\n          );\n\n          // Refresh projects list\n          this.fetchProjects();\n        } else {\n          console.error(\"Failed to delete project\", response.data);\n          this.showToast(this.$t(\"creatorAI.dashboard.deleteFailed\"), \"error\");\n        }\n      } catch (error) {\n        console.error(\"Error deleting project:\", error);\n\n        // Log chi tiết lỗi để debug\n        if (error.response) {\n          console.error(\"Error response:\", error.response.data);\n          console.error(\"Error status:\", error.response.status);\n        }\n\n        this.showToast(\n          `${this.$t(\"creatorAI.dashboard.deleteError\")}: ${error.message}`,\n          \"error\"\n        );\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.step-content {\n  background: white;\n  border-radius: 12px;\n  padding: 2rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\nh2 {\n  color: #1c1c4c;\n  margin-bottom: 2rem;\n  text-align: center;\n}\n\n.content-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 1.5rem;\n  margin-bottom: 2rem;\n}\n\n.content-card {\n  background: #f8f9fa;\n  border-radius: 8px;\n  padding: 1.5rem;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  cursor: pointer;\n  /* border-left: 4px solid #1c1c4c; */\n}\n\n.content-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n}\n\n.content-card.finished {\n  border-left-color: #28a745;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 0.5rem;\n}\n\n.card-actions {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.delete-button {\n  background: none;\n  border: none;\n  color: #dc3545;\n  cursor: pointer;\n  font-size: 0.9rem;\n  padding: 0.25rem 0.5rem;\n  border-radius: 4px;\n  transition: background-color 0.3s ease;\n}\n\n.delete-button:hover {\n  background-color: rgba(220, 53, 69, 0.1);\n}\n\n.card-header h3 {\n  margin: 0;\n  font-size: 1.1rem;\n  max-width: 70%;\n}\n\n.status-badge,\n.content-type-badge {\n  font-size: 0.75rem;\n  padding: 0.25rem 0.5rem;\n  border-radius: 12px;\n  font-weight: bold;\n}\n\n.status-badge.in_progress {\n  background-color: #ecedf7;\n  color: #1c1c4c;\n}\n\n.status-badge.finished {\n  background-color: #e8f5e9;\n  color: #28a745;\n}\n\n.content-type-badge {\n  background-color: #e3f2fd;\n  color: #0d47a1;\n}\n\n.description {\n  color: #6c757d;\n  margin-bottom: 1rem;\n  font-size: 0.9rem;\n  height: 40px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  /* -webkit-box-orient: vertical; */\n}\n\n.keywords-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n}\n\n.keyword-tag {\n  background-color: #f0f0f0;\n  color: #666;\n  font-size: 0.75rem;\n  padding: 0.2rem 0.5rem;\n  border-radius: 12px;\n}\n\n.content-meta {\n  display: flex;\n  justify-content: space-between;\n  font-size: 0.8rem;\n  color: #6c757d;\n  border-top: 1px solid #eee;\n  padding-top: 0.75rem;\n}\n\n.empty-state,\n.loading-indicator {\n  grid-column: 1 / -1;\n  text-align: center;\n  padding: 2rem;\n  color: #6c757d;\n}\n\n.primary-button {\n  background: #1c1c4c;\n  color: white;\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background-color 0.3s ease;\n}\n\n.primary-button:hover {\n  background: #2a2a6c;\n}\n\n.secondary-button {\n  background: transparent;\n  color: #1c1c4c;\n  border: 1px solid #1c1c4c;\n  padding: 0.75rem 1.5rem;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: all 0.3s ease;\n}\n\n.secondary-button:hover {\n  background: #f8f9fa;\n}\n\n.button-group {\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n}\n\n.toast-message {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  padding: 10px 20px;\n  border-radius: 4px;\n  color: white;\n  z-index: 1000;\n  display: flex;\n  align-items: center;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  animation: slideIn 0.3s ease-in-out;\n}\n\n@keyframes slideIn {\n  from {\n    transform: translateX(100%);\n    opacity: 0;\n  }\n  to {\n    transform: translateX(0);\n    opacity: 1;\n  }\n}\n\n.toast-message.success {\n  background-color: #28a745;\n}\n\n.toast-message.error {\n  background-color: #dc3545;\n}\n\n.toast-message.info {\n  background-color: #17a2b8;\n}\n\n.close-toast {\n  background: none;\n  border: none;\n  color: white;\n  margin-left: 10px;\n  cursor: pointer;\n  font-size: 18px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}