{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"ImageStep\",\n  props: {\n    generatedImage: {\n      type: String,\n      default: null\n    },\n    content: {\n      type: String,\n      default: \"\"\n    },\n    requirements: {\n      type: Object,\n      default: () => ({})\n    },\n    imageStyles: {\n      type: Array,\n      default: () => [\"Realistic\", \"3D\", \"Minimalist\", \"Watercolor\", \"Flat Vector\"]\n    },\n    initialStyle: {\n      type: String,\n      default: \"Realistic\"\n    }\n  },\n  data() {\n    return {\n      selectedStyle: this.initialStyle,\n      isGenerating: false,\n      localImage: null,\n      customPrompt: \"\",\n      generationMethod: \"topic\",\n      error: null,\n      apiStatus: null,\n      apiUrl: process.env.VUE_APP_API_URL || \"http://localhost:3001/api\",\n      imageQuality: \"medium\",\n      toasts: []\n    };\n  },\n  computed: {\n    displayImage() {\n      // Hiển thị ảnh từ prop, hoặc ảnh được tạo cục bộ\n      return this.generatedImage || this.localImage || null;\n    },\n    topicForImage() {\n      // Sử dụng chủ đề từ requirements\n      return this.requirements.topic || \"AI Generated Image\";\n    }\n  },\n  methods: {\n    selectStyle(style) {\n      this.selectedStyle = style;\n      this.$emit(\"style-select\", style);\n    },\n    async generatePromptFromContent() {\n      if (!this.content && (!this.requirements || !this.requirements.contentId)) {\n        this.error = \"No content or contentId available to generate prompt from\";\n        this.showToast(\"Không có nội dung để tạo mô tả\", \"error\");\n        return;\n      }\n      this.error = null;\n      this.isGenerating = true;\n      try {\n        // Toast message for starting the process\n        this.showToast(\"Đang tạo mô tả hình ảnh từ nội dung...\", \"info\");\n        console.log(\"Sending request to generate prompt from content...\");\n        console.log(\"Content ID:\", this.requirements?.contentId);\n\n        // Call the API to generate a prompt based on the content with longer timeout\n        const response = await axios.post(`/api/content/contents/generate-prompt`, {\n          content: this.content,\n          contentId: this.requirements?.contentId,\n          style: this.selectedStyle,\n          template: `Generate a [STYLE] image of [SUBJECT], featuring [KEY DETAILS]. Style: [ART STYLE/MEDIUM], color palette: [COLORS], lighting: [LIGHTING], composition: [COMPOSITION]. Additional effects: [EFFECTS]. Keep the overall mood [MOOD]. Render in Kandinsky 2.2 with high detail, resolution [RESOLUTION].`\n        }, {\n          timeout: 60000 // Increase timeout to 60 seconds\n        });\n        if (response.data && response.data.success) {\n          // Set the generated prompt in the custom prompt field\n          this.customPrompt = response.data.prompt;\n          // Switch to custom prompt mode\n          this.generationMethod = \"prompt\";\n\n          // Show success toast\n          this.showToast(\"Đã tạo mô tả hình ảnh thành công!\", \"success\");\n          console.log(\"Generated prompt:\", this.customPrompt.substring(0, 100) + \"...\");\n        } else {\n          throw new Error(response.data?.error || \"Failed to generate prompt\");\n        }\n      } catch (error) {\n        // Use the new handleApiError method\n        this.handleApiError(error, \"tạo mô tả hình ảnh\");\n      } finally {\n        this.isGenerating = false;\n      }\n    },\n    async saveGeneratedImage() {\n      if (!this.displayImage) {\n        this.error = \"No image to save\";\n        return;\n      }\n      try {\n        // Extract image data from the dataURL\n        const imageData = this.displayImage.split(\",\")[1];\n\n        // Call API to save the image\n        const response = await axios.post(`${this.apiUrl}/image/save`, {\n          image_data: imageData,\n          prompt: this.customPrompt,\n          style: this.selectedStyle\n        });\n        if (response.data && response.data.success) {\n          // Emit event with the URL of the saved image\n          this.$emit(\"image-saved\", {\n            imageUrl: response.data.imageUrl,\n            prompt: this.customPrompt,\n            style: this.selectedStyle\n          });\n\n          // Show success message\n          alert(\"Image saved successfully!\");\n        } else {\n          throw new Error(response.data?.error || \"Failed to save image\");\n        }\n      } catch (error) {\n        console.error(\"Error saving image:\", error);\n        this.error = error.response?.data?.error || error.message || \"Error saving image\";\n      }\n    },\n    async generateImage() {\n      this.isGenerating = true;\n      this.error = null;\n      try {\n        let response;\n\n        // Xác định kích thước và số bước dựa trên chất lượng\n        let width, height, steps;\n        switch (this.imageQuality) {\n          case \"low\":\n            width = 384;\n            height = 384;\n            steps = 20;\n            break;\n          case \"medium\":\n            width = 512;\n            height = 512;\n            steps = 30;\n            break;\n          case \"high\":\n            width = 768;\n            height = 768;\n            steps = 50;\n            break;\n          default:\n            width = 512;\n            height = 512;\n            steps = 30;\n        }\n        if (this.generationMethod === \"prompt\") {\n          // Tạo ảnh từ prompt tùy chỉnh\n          if (!this.customPrompt.trim()) {\n            throw new Error(\"Please enter a custom prompt\");\n          }\n          console.log(\"Generating image from custom prompt...\");\n          response = await axios.post(`${this.apiUrl}/image/generate`, {\n            prompt: this.customPrompt,\n            style: this.selectedStyle,\n            width: width,\n            height: height,\n            num_inference_steps: steps\n          }, {\n            timeout: 90000 // 90 seconds timeout for image generation\n          });\n        } else {\n          // Tạo ảnh từ chủ đề (topic)\n          console.log(`Generating image from topic: ${this.topicForImage}`);\n          response = await axios.post(`${this.apiUrl}/image/topic-to-image`, {\n            topic: this.topicForImage,\n            style: this.selectedStyle,\n            width: width,\n            height: height,\n            num_inference_steps: steps\n          }, {\n            timeout: 90000 // 90 seconds timeout for image generation\n          });\n        }\n        if (response.data && response.data.success) {\n          // Đặt ảnh từ dữ liệu base64\n          this.localImage = `data:image/png;base64,${response.data.image_data}`;\n\n          // Lưu prompt được sử dụng để tạo ảnh\n          this.customPrompt = response.data.prompt || this.customPrompt;\n\n          // Gửi thông tin ảnh lên component cha\n          this.$emit(\"image-generated\", {\n            image: this.localImage,\n            prompt: this.customPrompt,\n            style: this.selectedStyle\n          });\n\n          // Show success toast\n          this.showToast(\"Đã tạo hình ảnh thành công!\", \"success\");\n        } else {\n          throw new Error(response.data?.error || \"Failed to generate image\");\n        }\n      } catch (error) {\n        // Use the new handleApiError method\n        this.handleApiError(error, \"tạo hình ảnh\");\n      } finally {\n        this.isGenerating = false;\n      }\n    },\n    async checkApiStatus() {\n      try {\n        const response = await axios.get(`${this.apiUrl}/image/status`, {\n          timeout: 5000\n        });\n        this.apiStatus = response.data;\n        console.log(\"API Status check result:\", this.apiStatus);\n      } catch (error) {\n        console.error(\"API Status check failed:\", error);\n        this.apiStatus = {\n          status: \"error\",\n          message: \"The image generation service is currently unavailable. Please try again later.\",\n          details: error.message\n        };\n\n        // Show a toast with the error information\n        this.showToast(\"Dịch vụ tạo hình ảnh đang không khả dụng. Vui lòng thử lại sau.\", \"error\");\n      }\n    },\n    // Add a new method to handle API errors more effectively\n    handleApiError(error, operation) {\n      console.error(`Error during ${operation}:`, error);\n\n      // Default error message\n      let errorMessage = `Lỗi khi ${operation}: `;\n\n      // Check for specific error types\n      if (error.code === \"ECONNABORTED\") {\n        errorMessage += \"Quá thời gian chờ, máy chủ không phản hồi.\";\n      } else if (error.message.includes(\"Network Error\")) {\n        errorMessage += \"Lỗi kết nối mạng, kiểm tra kết nối internet của bạn.\";\n      } else if (error.response) {\n        // Server responded with an error status\n        errorMessage += `Máy chủ phản hồi với lỗi ${error.response.status}: ${error.response.data?.error || \"Lỗi không xác định\"}`;\n      } else {\n        // Something else happened\n        errorMessage += error.message || \"Lỗi không xác định.\";\n      }\n\n      // Show toast with the error\n      this.showToast(errorMessage, \"error\");\n\n      // Update error state\n      this.error = errorMessage;\n\n      // Check API status on certain errors\n      if (error.message.includes(\"Network Error\") || error.message.includes(\"timeout\") || error.code === \"ECONNABORTED\") {\n        this.checkApiStatus();\n      }\n    },\n    handleContinue() {\n      // Nếu đã có ảnh, gửi thông tin ảnh lên component cha\n      if (this.displayImage) {\n        this.$emit(\"image-generated\", {\n          image: this.displayImage,\n          prompt: this.customPrompt,\n          style: this.selectedStyle\n        });\n      } else {\n        // Nếu chưa có ảnh, thông báo cho người dùng\n        if (confirm(\"Bạn chưa tạo ảnh. Bạn có muốn tiếp tục mà không có ảnh không?\")) {\n          this.$emit(\"image-generated\", {\n            image: null,\n            prompt: this.customPrompt,\n            style: this.selectedStyle\n          });\n        } else {\n          // Người dùng muốn tạo ảnh trước\n          return;\n        }\n      }\n\n      // Tiếp tục sang bước tiếp theo\n      this.$emit(\"next\");\n    },\n    // Add toast message functionality\n    showToast(message, type = \"info\") {\n      if (!this.toasts) this.toasts = [];\n      const id = Date.now();\n      this.toasts.push({\n        id,\n        message,\n        type\n      });\n\n      // Auto remove after 5 seconds\n      setTimeout(() => {\n        this.removeToast(id);\n      }, 5000);\n    },\n    removeToast(id) {\n      if (this.toasts) {\n        this.toasts = this.toasts.filter(toast => toast.id !== id);\n      }\n    }\n  },\n  mounted() {\n    // Kiểm tra trạng thái API khi component được tạo\n    this.checkApiStatus();\n  }\n};","map":{"version":3,"names":["axios","name","props","generatedImage","type","String","default","content","requirements","Object","imageStyles","Array","initialStyle","data","selectedStyle","isGenerating","localImage","customPrompt","generationMethod","error","apiStatus","apiUrl","process","env","VUE_APP_API_URL","imageQuality","toasts","computed","displayImage","topicForImage","topic","methods","selectStyle","style","$emit","generatePromptFromContent","contentId","showToast","console","log","response","post","template","timeout","success","prompt","substring","Error","handleApiError","saveGeneratedImage","imageData","split","image_data","imageUrl","alert","message","generateImage","width","height","steps","trim","num_inference_steps","image","checkApiStatus","get","status","details","operation","errorMessage","code","includes","handleContinue","confirm","id","Date","now","push","setTimeout","removeToast","filter","toast","mounted"],"sources":["/Users/nhannguyen/Desktop/Duan/esmart-solutions-agency/src/components/creator-ai/ImageStep.vue"],"sourcesContent":["<template>\n  <div class=\"step-content\">\n    <h2>{{ $t(\"creatorAI.image.title\") }}</h2>\n\n    <!-- Toast Messages Container -->\n    <div class=\"toast-container\">\n      <div\n        v-for=\"toast in toasts\"\n        :key=\"toast.id\"\n        :class=\"['toast-message', `toast-${toast.type}`]\"\n        @click=\"removeToast(toast.id)\"\n      >\n        <span>{{ toast.message }}</span>\n        <button class=\"toast-close-btn\">&times;</button>\n      </div>\n    </div>\n\n    <div class=\"image-container\">\n      <div class=\"generated-image\">\n        <img v-if=\"displayImage\" :src=\"displayImage\" alt=\"AI Generated Image\" />\n        <div v-else class=\"image-placeholder\">\n          <div v-if=\"isGenerating\" class=\"loading-spinner\"></div>\n          <p>\n            {{\n              isGenerating\n                ? \"Generating image with AI...\"\n                : \"Select a style and click Generate\"\n            }}\n          </p>\n        </div>\n      </div>\n      <div class=\"style-options\">\n        <h3>{{ $t(\"creatorAI.image.styleTitle\") }}</h3>\n        <div class=\"style-buttons\">\n          <button\n            v-for=\"style in imageStyles\"\n            :key=\"style\"\n            :class=\"['style-button', { active: selectedStyle === style }]\"\n            @click=\"selectStyle(style)\"\n          >\n            {{ style }}\n          </button>\n        </div>\n\n        <div class=\"prompt-container\">\n          <h3>{{ $t(\"creatorAI.image.promptTitle\") }}</h3>\n          <div class=\"form-group\">\n            <label>Generation Method</label>\n            <div class=\"method-buttons\">\n              <button\n                :class=\"[\n                  'method-button',\n                  { active: generationMethod === 'topic' },\n                ]\"\n                @click=\"generationMethod = 'topic'\"\n              >\n                From Topic\n              </button>\n              <button\n                :class=\"[\n                  'method-button',\n                  { active: generationMethod === 'prompt' },\n                ]\"\n                @click=\"generationMethod = 'prompt'\"\n              >\n                Custom Prompt\n              </button>\n            </div>\n          </div>\n\n          <div class=\"form-group\" v-if=\"generationMethod === 'prompt'\">\n            <label for=\"customPrompt\">Custom Prompt</label>\n            <textarea\n              id=\"customPrompt\"\n              v-model=\"customPrompt\"\n              placeholder=\"Describe the image you want to generate...\"\n              rows=\"3\"\n            ></textarea>\n          </div>\n\n          <div class=\"form-group\">\n            <label>Chất lượng ảnh</label>\n            <div class=\"quality-buttons\">\n              <button\n                :class=\"['quality-button', { active: imageQuality === 'low' }]\"\n                @click=\"imageQuality = 'low'\"\n              >\n                Thấp (Nhanh)\n              </button>\n              <button\n                :class=\"[\n                  'quality-button',\n                  { active: imageQuality === 'medium' },\n                ]\"\n                @click=\"imageQuality = 'medium'\"\n              >\n                Trung bình\n              </button>\n              <button\n                :class=\"['quality-button', { active: imageQuality === 'high' }]\"\n                @click=\"imageQuality = 'high'\"\n              >\n                Cao (Chậm)\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"generate-button-container\">\n          <button\n            class=\"generate-button\"\n            @click=\"generateImage\"\n            :disabled=\"isGenerating\"\n          >\n            <span v-if=\"isGenerating\" class=\"loading-spinner-btn\"></span>\n            {{\n              isGenerating\n                ? $t(\"creatorAI.image.generating\")\n                : generatedImage\n                ? $t(\"creatorAI.image.regenerateButton\")\n                : $t(\"creatorAI.image.generateButton\")\n            }}\n          </button>\n        </div>\n\n        <div v-if=\"error\" class=\"error-message\">\n          {{ error }}\n        </div>\n\n        <div class=\"additional-buttons\">\n          <button\n            class=\"function-button\"\n            @click=\"generatePromptFromContent\"\n            :disabled=\"isGenerating\"\n          >\n            {{ $t(\"creatorAI.image.generatePrompt\") }}\n          </button>\n          <button\n            class=\"function-button\"\n            @click=\"saveGeneratedImage\"\n            :disabled=\"!displayImage || isGenerating\"\n          >\n            {{ $t(\"creatorAI.image.saveImage\") }}\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"button-group\">\n      <button class=\"secondary-button\" @click=\"$emit('prev')\">\n        {{ $t(\"creatorAI.image.previous\") }}\n      </button>\n      <button\n        class=\"primary-button\"\n        @click=\"handleContinue\"\n        :disabled=\"!generatedImage\"\n      >\n        {{ $t(\"creatorAI.image.next\") }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"ImageStep\",\n  props: {\n    generatedImage: {\n      type: String,\n      default: null,\n    },\n    content: {\n      type: String,\n      default: \"\",\n    },\n    requirements: {\n      type: Object,\n      default: () => ({}),\n    },\n    imageStyles: {\n      type: Array,\n      default: () => [\n        \"Realistic\",\n        \"3D\",\n        \"Minimalist\",\n        \"Watercolor\",\n        \"Flat Vector\",\n      ],\n    },\n    initialStyle: {\n      type: String,\n      default: \"Realistic\",\n    },\n  },\n  data() {\n    return {\n      selectedStyle: this.initialStyle,\n      isGenerating: false,\n      localImage: null,\n      customPrompt: \"\",\n      generationMethod: \"topic\",\n      error: null,\n      apiStatus: null,\n      apiUrl: process.env.VUE_APP_API_URL || \"http://localhost:3001/api\",\n      imageQuality: \"medium\",\n      toasts: [],\n    };\n  },\n  computed: {\n    displayImage() {\n      // Hiển thị ảnh từ prop, hoặc ảnh được tạo cục bộ\n      return this.generatedImage || this.localImage || null;\n    },\n    topicForImage() {\n      // Sử dụng chủ đề từ requirements\n      return this.requirements.topic || \"AI Generated Image\";\n    },\n  },\n  methods: {\n    selectStyle(style) {\n      this.selectedStyle = style;\n      this.$emit(\"style-select\", style);\n    },\n\n    async generatePromptFromContent() {\n      if (\n        !this.content &&\n        (!this.requirements || !this.requirements.contentId)\n      ) {\n        this.error =\n          \"No content or contentId available to generate prompt from\";\n        this.showToast(\"Không có nội dung để tạo mô tả\", \"error\");\n        return;\n      }\n\n      this.error = null;\n      this.isGenerating = true;\n\n      try {\n        // Toast message for starting the process\n        this.showToast(\"Đang tạo mô tả hình ảnh từ nội dung...\", \"info\");\n        console.log(\"Sending request to generate prompt from content...\");\n        console.log(\"Content ID:\", this.requirements?.contentId);\n\n        // Call the API to generate a prompt based on the content with longer timeout\n        const response = await axios.post(\n          `/api/content/contents/generate-prompt`,\n          {\n            content: this.content,\n            contentId: this.requirements?.contentId,\n            style: this.selectedStyle,\n            template: `Generate a [STYLE] image of [SUBJECT], featuring [KEY DETAILS]. Style: [ART STYLE/MEDIUM], color palette: [COLORS], lighting: [LIGHTING], composition: [COMPOSITION]. Additional effects: [EFFECTS]. Keep the overall mood [MOOD]. Render in Kandinsky 2.2 with high detail, resolution [RESOLUTION].`,\n          },\n          {\n            timeout: 60000, // Increase timeout to 60 seconds\n          }\n        );\n\n        if (response.data && response.data.success) {\n          // Set the generated prompt in the custom prompt field\n          this.customPrompt = response.data.prompt;\n          // Switch to custom prompt mode\n          this.generationMethod = \"prompt\";\n\n          // Show success toast\n          this.showToast(\"Đã tạo mô tả hình ảnh thành công!\", \"success\");\n          console.log(\n            \"Generated prompt:\",\n            this.customPrompt.substring(0, 100) + \"...\"\n          );\n        } else {\n          throw new Error(response.data?.error || \"Failed to generate prompt\");\n        }\n      } catch (error) {\n        // Use the new handleApiError method\n        this.handleApiError(error, \"tạo mô tả hình ảnh\");\n      } finally {\n        this.isGenerating = false;\n      }\n    },\n\n    async saveGeneratedImage() {\n      if (!this.displayImage) {\n        this.error = \"No image to save\";\n        return;\n      }\n\n      try {\n        // Extract image data from the dataURL\n        const imageData = this.displayImage.split(\",\")[1];\n\n        // Call API to save the image\n        const response = await axios.post(`${this.apiUrl}/image/save`, {\n          image_data: imageData,\n          prompt: this.customPrompt,\n          style: this.selectedStyle,\n        });\n\n        if (response.data && response.data.success) {\n          // Emit event with the URL of the saved image\n          this.$emit(\"image-saved\", {\n            imageUrl: response.data.imageUrl,\n            prompt: this.customPrompt,\n            style: this.selectedStyle,\n          });\n\n          // Show success message\n          alert(\"Image saved successfully!\");\n        } else {\n          throw new Error(response.data?.error || \"Failed to save image\");\n        }\n      } catch (error) {\n        console.error(\"Error saving image:\", error);\n        this.error =\n          error.response?.data?.error || error.message || \"Error saving image\";\n      }\n    },\n\n    async generateImage() {\n      this.isGenerating = true;\n      this.error = null;\n\n      try {\n        let response;\n\n        // Xác định kích thước và số bước dựa trên chất lượng\n        let width, height, steps;\n        switch (this.imageQuality) {\n          case \"low\":\n            width = 384;\n            height = 384;\n            steps = 20;\n            break;\n          case \"medium\":\n            width = 512;\n            height = 512;\n            steps = 30;\n            break;\n          case \"high\":\n            width = 768;\n            height = 768;\n            steps = 50;\n            break;\n          default:\n            width = 512;\n            height = 512;\n            steps = 30;\n        }\n\n        if (this.generationMethod === \"prompt\") {\n          // Tạo ảnh từ prompt tùy chỉnh\n          if (!this.customPrompt.trim()) {\n            throw new Error(\"Please enter a custom prompt\");\n          }\n\n          console.log(\"Generating image from custom prompt...\");\n          response = await axios.post(\n            `${this.apiUrl}/image/generate`,\n            {\n              prompt: this.customPrompt,\n              style: this.selectedStyle,\n              width: width,\n              height: height,\n              num_inference_steps: steps,\n            },\n            {\n              timeout: 90000, // 90 seconds timeout for image generation\n            }\n          );\n        } else {\n          // Tạo ảnh từ chủ đề (topic)\n          console.log(`Generating image from topic: ${this.topicForImage}`);\n          response = await axios.post(\n            `${this.apiUrl}/image/topic-to-image`,\n            {\n              topic: this.topicForImage,\n              style: this.selectedStyle,\n              width: width,\n              height: height,\n              num_inference_steps: steps,\n            },\n            {\n              timeout: 90000, // 90 seconds timeout for image generation\n            }\n          );\n        }\n\n        if (response.data && response.data.success) {\n          // Đặt ảnh từ dữ liệu base64\n          this.localImage = `data:image/png;base64,${response.data.image_data}`;\n\n          // Lưu prompt được sử dụng để tạo ảnh\n          this.customPrompt = response.data.prompt || this.customPrompt;\n\n          // Gửi thông tin ảnh lên component cha\n          this.$emit(\"image-generated\", {\n            image: this.localImage,\n            prompt: this.customPrompt,\n            style: this.selectedStyle,\n          });\n\n          // Show success toast\n          this.showToast(\"Đã tạo hình ảnh thành công!\", \"success\");\n        } else {\n          throw new Error(response.data?.error || \"Failed to generate image\");\n        }\n      } catch (error) {\n        // Use the new handleApiError method\n        this.handleApiError(error, \"tạo hình ảnh\");\n      } finally {\n        this.isGenerating = false;\n      }\n    },\n\n    async checkApiStatus() {\n      try {\n        const response = await axios.get(`${this.apiUrl}/image/status`, {\n          timeout: 5000,\n        });\n        this.apiStatus = response.data;\n        console.log(\"API Status check result:\", this.apiStatus);\n      } catch (error) {\n        console.error(\"API Status check failed:\", error);\n        this.apiStatus = {\n          status: \"error\",\n          message:\n            \"The image generation service is currently unavailable. Please try again later.\",\n          details: error.message,\n        };\n\n        // Show a toast with the error information\n        this.showToast(\n          \"Dịch vụ tạo hình ảnh đang không khả dụng. Vui lòng thử lại sau.\",\n          \"error\"\n        );\n      }\n    },\n\n    // Add a new method to handle API errors more effectively\n    handleApiError(error, operation) {\n      console.error(`Error during ${operation}:`, error);\n\n      // Default error message\n      let errorMessage = `Lỗi khi ${operation}: `;\n\n      // Check for specific error types\n      if (error.code === \"ECONNABORTED\") {\n        errorMessage += \"Quá thời gian chờ, máy chủ không phản hồi.\";\n      } else if (error.message.includes(\"Network Error\")) {\n        errorMessage += \"Lỗi kết nối mạng, kiểm tra kết nối internet của bạn.\";\n      } else if (error.response) {\n        // Server responded with an error status\n        errorMessage += `Máy chủ phản hồi với lỗi ${error.response.status}: ${\n          error.response.data?.error || \"Lỗi không xác định\"\n        }`;\n      } else {\n        // Something else happened\n        errorMessage += error.message || \"Lỗi không xác định.\";\n      }\n\n      // Show toast with the error\n      this.showToast(errorMessage, \"error\");\n\n      // Update error state\n      this.error = errorMessage;\n\n      // Check API status on certain errors\n      if (\n        error.message.includes(\"Network Error\") ||\n        error.message.includes(\"timeout\") ||\n        error.code === \"ECONNABORTED\"\n      ) {\n        this.checkApiStatus();\n      }\n    },\n\n    handleContinue() {\n      // Nếu đã có ảnh, gửi thông tin ảnh lên component cha\n      if (this.displayImage) {\n        this.$emit(\"image-generated\", {\n          image: this.displayImage,\n          prompt: this.customPrompt,\n          style: this.selectedStyle,\n        });\n      } else {\n        // Nếu chưa có ảnh, thông báo cho người dùng\n        if (\n          confirm(\n            \"Bạn chưa tạo ảnh. Bạn có muốn tiếp tục mà không có ảnh không?\"\n          )\n        ) {\n          this.$emit(\"image-generated\", {\n            image: null,\n            prompt: this.customPrompt,\n            style: this.selectedStyle,\n          });\n        } else {\n          // Người dùng muốn tạo ảnh trước\n          return;\n        }\n      }\n\n      // Tiếp tục sang bước tiếp theo\n      this.$emit(\"next\");\n    },\n\n    // Add toast message functionality\n    showToast(message, type = \"info\") {\n      if (!this.toasts) this.toasts = [];\n\n      const id = Date.now();\n      this.toasts.push({ id, message, type });\n\n      // Auto remove after 5 seconds\n      setTimeout(() => {\n        this.removeToast(id);\n      }, 5000);\n    },\n\n    removeToast(id) {\n      if (this.toasts) {\n        this.toasts = this.toasts.filter((toast) => toast.id !== id);\n      }\n    },\n  },\n  mounted() {\n    // Kiểm tra trạng thái API khi component được tạo\n    this.checkApiStatus();\n  },\n};\n</script>\n\n<style scoped>\n.step-content {\n  background: white;\n  border-radius: 12px;\n  padding: 2rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\nh2 {\n  color: #1c1c4c;\n  margin-bottom: 2rem;\n  text-align: center;\n}\n\nh3 {\n  color: #1c1c4c;\n  margin-bottom: 1rem;\n}\n\n.image-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 2rem;\n}\n\n.generated-image {\n  background: #f8f9fa;\n  border-radius: 8px;\n  padding: 1rem;\n  min-height: 400px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.generated-image img {\n  max-width: 100%;\n  max-height: 400px;\n  object-fit: contain;\n  border-radius: 4px;\n}\n\n.image-placeholder {\n  width: 100%;\n  height: 400px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background: #f1f1f4;\n  border-radius: 4px;\n  color: #1c1c4c;\n}\n\n.loading-spinner {\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  border: 4px solid rgba(28, 28, 76, 0.3);\n  border-radius: 50%;\n  border-top-color: #1c1c4c;\n  animation: spin 1s linear infinite;\n  margin-bottom: 16px;\n}\n\n.loading-spinner-btn {\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  border: 2px solid rgba(255, 255, 255, 0.5);\n  border-radius: 50%;\n  border-top-color: white;\n  animation: spin 1s linear infinite;\n  margin-right: 8px;\n  vertical-align: middle;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.style-options {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.style-buttons {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n}\n\n.style-button {\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 6px;\n  background: white;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.style-button.active {\n  background: #1c1c4c;\n  color: white;\n  border-color: #1c1c4c;\n}\n\n.method-buttons {\n  display: flex;\n  gap: 1rem;\n  margin-bottom: 1rem;\n}\n\n.method-button {\n  flex: 1;\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 6px;\n  background: white;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.method-button.active {\n  background: #1c1c4c;\n  color: white;\n  border-color: #1c1c4c;\n}\n\n.prompt-container {\n  margin-top: 1.5rem;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n}\n\n.form-group label {\n  font-weight: 500;\n  color: #1c1c4c;\n}\n\n.form-group textarea {\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 6px;\n  font-size: 0.9rem;\n  font-family: inherit;\n  resize: vertical;\n}\n\n.generate-button-container {\n  margin-top: 1.5rem;\n  text-align: center;\n}\n\n.generate-button {\n  background: #1c1c4c;\n  color: white;\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background-color 0.3s ease;\n  width: 100%;\n  position: relative;\n}\n\n.generate-button:hover:not(:disabled) {\n  background: #2a2a6c;\n}\n\n.generate-button:disabled {\n  background: #7a7a9c;\n  cursor: not-allowed;\n}\n\n.error-message {\n  margin-top: 1rem;\n  padding: 0.75rem;\n  background-color: #ffebee;\n  color: #c62828;\n  border-radius: 4px;\n  font-size: 0.9rem;\n}\n\n.status-message {\n  margin-top: 1rem;\n  padding: 0.75rem;\n  border-radius: 4px;\n  font-size: 0.9rem;\n}\n\n.status-message.ok {\n  background-color: #e8f5e9;\n  color: #2e7d32;\n}\n\n.status-message.error {\n  background-color: #ffebee;\n  color: #c62828;\n}\n\n.button-group {\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n  margin-top: 2rem;\n}\n\n.primary-button {\n  background: #1c1c4c;\n  color: white;\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background-color 0.3s ease;\n}\n\n.primary-button:hover:not(:disabled) {\n  background: #2a2a6c;\n}\n\n.primary-button:disabled {\n  background: #7a7a9c;\n  cursor: not-allowed;\n}\n\n.secondary-button {\n  background: white;\n  color: #1c1c4c;\n  border: 1px solid #1c1c4c;\n  padding: 0.75rem 1.5rem;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: all 0.3s ease;\n}\n\n.secondary-button:hover {\n  background: #f8f9fa;\n}\n\n.quality-buttons {\n  display: flex;\n  gap: 1rem;\n  margin-bottom: 1rem;\n}\n\n.quality-button {\n  flex: 1;\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 6px;\n  background: white;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.quality-button.active {\n  background: #1c1c4c;\n  color: white;\n  border-color: #1c1c4c;\n}\n\n.additional-buttons {\n  display: flex;\n  gap: 1rem;\n  margin-top: 1rem;\n}\n\n.function-button {\n  flex: 1;\n  background: #2a6a9c;\n  color: white;\n  border: none;\n  padding: 0.75rem 1rem;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  transition: background-color 0.3s ease;\n}\n\n.function-button:hover:not(:disabled) {\n  background: #1d4e7c;\n}\n\n.function-button:disabled {\n  background: #86a7c1;\n  cursor: not-allowed;\n}\n\n@media (max-width: 768px) {\n  .image-container {\n    grid-template-columns: 1fr;\n  }\n\n  .button-group {\n    flex-direction: column;\n  }\n\n  .primary-button,\n  .secondary-button {\n    width: 100%;\n  }\n}\n\n/* Toast Styles */\n.toast-container {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  max-width: 350px;\n}\n\n.toast-message {\n  padding: 12px 16px;\n  border-radius: 6px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  animation: slide-in 0.3s ease-out forwards;\n  cursor: pointer;\n  color: white;\n}\n\n.toast-success {\n  background-color: #42b983;\n}\n\n.toast-error {\n  background-color: #e74c3c;\n}\n\n.toast-info {\n  background-color: #3498db;\n}\n\n.toast-close-btn {\n  background: none;\n  border: none;\n  color: white;\n  font-size: 20px;\n  cursor: pointer;\n  margin-left: 8px;\n  opacity: 0.7;\n}\n\n.toast-close-btn:hover {\n  opacity: 1;\n}\n\n@keyframes slide-in {\n  from {\n    transform: translateX(100%);\n    opacity: 0;\n  }\n  to {\n    transform: translateX(0);\n    opacity: 1;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}